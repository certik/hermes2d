/* Generated by Cython 0.12.1 on Fri May 14 11:50:53 2010 */
/* Corrected by convert_api.py on Fri May 14 11:50:54 2010 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) PyInstanceMethod_New(func)
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__hermes2d___hermes2d
#include "math.h"
#include "stdlib.h"
#include "arrayobject.h"
#include "stdcython.h"
#include "hermes2d.h"
#include "dummy_solver.h"
#include "matrix.h"

/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE 
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__)) 
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__)) 
# else
#   define CYTHON_UNUSED 
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)) 
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;
static const char **__pyx_f;


#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif

#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif

/* Type declarations */

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":410
 *     pass
 * 
 * cdef class WeakForm:             # <<<<<<<<<<<<<<
 *     cdef c_WeakForm *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm {
  PyObject_HEAD
  struct WeakForm *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1194
 *         return vec.reshape((ndashes, 2))
 * 
 * cdef class View:             # <<<<<<<<<<<<<<
 *     def wait(self):
 *         View_wait()
 */

struct __pyx_obj_8hermes2d_9_hermes2d_View {
  PyObject_HEAD
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1198
 *         View_wait()
 * 
 * cdef class ScalarView(View):             # <<<<<<<<<<<<<<
 *     cdef c_ScalarView *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView {
  struct __pyx_obj_8hermes2d_9_hermes2d_View __pyx_base;
  struct ScalarView *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1231
 *         self.thisptr.wait()
 * 
 * cdef class BaseView(View):             # <<<<<<<<<<<<<<
 *     cdef c_BaseView *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_BaseView {
  struct __pyx_obj_8hermes2d_9_hermes2d_View __pyx_base;
  struct BaseView *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":419
 *     cdef c_H1Space *thisptr
 * 
 * cdef class Transformable:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Transformable {
  PyObject_HEAD
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":422
 *     pass
 * 
 * cdef class Function(Transformable):             # <<<<<<<<<<<<<<
 *     cdef c_Function *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Function {
  struct __pyx_obj_8hermes2d_9_hermes2d_Transformable __pyx_base;
  struct MeshFunction *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":425
 *     cdef c_Function *thisptr
 * 
 * cdef class ScalarFunction(Function):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_ScalarFunction {
  struct __pyx_obj_8hermes2d_9_hermes2d_Function __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":428
 *     pass
 * 
 * cdef class MeshFunction(ScalarFunction):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction {
  struct __pyx_obj_8hermes2d_9_hermes2d_ScalarFunction __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":627
 *     #    return vec
 * 
 * cdef class Filter(MeshFunction):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Filter {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":630
 *     pass
 * 
 * cdef class SimpleFilter(Filter):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_Filter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":667
 *     #    delete(self.thisptr)
 * 
 * cdef class SquareFilter(SimpleFilter):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, MeshFunction sln, int item=H2D_FN_VAL):
 */

struct __pyx_obj_8hermes2d_9_hermes2d_SquareFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":404
 *     pass
 * 
 * cdef class Solver:             # <<<<<<<<<<<<<<
 *     cdef c_Solver *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Solver {
  PyObject_HEAD
  struct Solver *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":407
 *     cdef c_Solver *thisptr
 * 
 * cdef class DummySolver(Solver):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_DummySolver {
  struct __pyx_obj_8hermes2d_9_hermes2d_Solver __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":949
 * #        self.thisptr.free_matrix()
 * 
 * cdef class L2OrthoHP:             # <<<<<<<<<<<<<<
 *     cdef c_L2OrthoHP *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP {
  PyObject_HEAD
  struct L2OrthoHP *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1270
 *         self.thisptr.show(s.thisptr)
 * 
 * cdef class VectorView(View):             # <<<<<<<<<<<<<<
 *     cdef c_VectorView *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_VectorView {
  struct __pyx_obj_8hermes2d_9_hermes2d_View __pyx_base;
  struct VectorView *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":413
 *     cdef c_WeakForm *thisptr
 * 
 * cdef class H1OrthoHP:             # <<<<<<<<<<<<<<
 *     cdef c_H1OrthoHP *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP {
  PyObject_HEAD
  struct H1OrthoHP *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":177
 * 
 * 
 * cdef class Mesh:             # <<<<<<<<<<<<<<
 *     cdef c_Mesh *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Mesh {
  PyObject_HEAD
  struct Mesh *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":101
 *         return self.thisptr.x, self.thisptr.y
 * 
 * cdef class Element:             # <<<<<<<<<<<<<<
 *     cdef c_Element *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Element {
  PyObject_HEAD
  struct Element *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":478
 *         delete(self.thisptr)
 * 
 * cdef class PrecalcShapeset:             # <<<<<<<<<<<<<<
 *     cdef c_PrecalcShapeset *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset {
  PyObject_HEAD
  struct PrecalcShapeset *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":649
 *     #    delete(self.thisptr)
 * 
 * cdef class DiffFilter(SimpleFilter):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 */

struct __pyx_obj_8hermes2d_9_hermes2d_DiffFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":431
 *     pass
 * 
 * cdef class Solution(MeshFunction):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Solution {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":434
 *     pass
 * 
 * cdef class Linearizer:             # <<<<<<<<<<<<<<
 *     cdef c_Linearizer *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer {
  PyObject_HEAD
  struct Linearizer *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":641
 *     #    delete(self.thisptr)
 * 
 * cdef class MagFilter(SimpleFilter):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, int item1, int item2):
 */

struct __pyx_obj_8hermes2d_9_hermes2d_MagFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":396
 * 
 * 
 * cdef class LinSystem:             # <<<<<<<<<<<<<<
 *     cdef c_LinSystem *thisptr
 *     cdef object _spaces
 */

struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem {
  PyObject_HEAD
  struct LinSystem *thisptr;
  PyObject *_spaces;
  PyObject *_pss;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":437
 *     cdef c_Linearizer *thisptr
 * 
 * cdef class Vectorizer(Linearizer):             # <<<<<<<<<<<<<<
 *     pass
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer {
  struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":469
 *         self.thisptr.convert_quads_to_triangles()
 * 
 * cdef class H1Shapeset:             # <<<<<<<<<<<<<<
 *     cdef c_H1Shapeset *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset {
  PyObject_HEAD
  H1Shapeset *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":658
 *     #    delete(self.thisptr)
 * 
 * cdef class SumFilter(SimpleFilter):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 */

struct __pyx_obj_8hermes2d_9_hermes2d_SumFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":416
 *     cdef c_H1OrthoHP *thisptr
 * 
 * cdef class H1Space:             # <<<<<<<<<<<<<<
 *     cdef c_H1Space *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_H1Space {
  PyObject_HEAD
  struct H1Space *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pxd":401
 *     cdef object _pss
 * 
 * cdef class RefSystem(LinSystem):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_RefSystem {
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":633
 *     pass
 * 
 * cdef class VonMisesFilter(Filter):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, double l, double m):
 */

struct __pyx_obj_8hermes2d_9_hermes2d_VonMisesFilter {
  struct __pyx_obj_8hermes2d_9_hermes2d_Filter __pyx_base;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":16
 * H2D_EPS_HIGH = c_H2D_EPS_HIGH
 * 
 * cdef class Nurbs:             # <<<<<<<<<<<<<<
 *     cdef c_Nurbs *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs {
  PyObject_HEAD
  struct Nurbs *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1257
 *         self.thisptr.show(s.thisptr)
 * 
 * cdef class OrderView(View):             # <<<<<<<<<<<<<<
 *     cdef c_OrderView *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_OrderView {
  struct __pyx_obj_8hermes2d_9_hermes2d_View __pyx_base;
  struct OrderView *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1244
 *         self.thisptr.show(s.thisptr)
 * 
 * cdef class MeshView(View):             # <<<<<<<<<<<<<<
 *     cdef c_MeshView *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_MeshView {
  struct __pyx_obj_8hermes2d_9_hermes2d_View __pyx_base;
  struct MeshView *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":71
 *         return n
 * 
 * cdef class Node:             # <<<<<<<<<<<<<<
 *     cdef c_Node *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_Node {
  PyObject_HEAD
  struct Node *thisptr;
};

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":50
 *         return self.thisptr.nk
 * 
 * cdef class CurvMap:             # <<<<<<<<<<<<<<
 *     cdef c_CurvMap *thisptr
 * 
 */

struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap {
  PyObject_HEAD
  struct CurvMap *thisptr;
};

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict,
    const char* function_name, int kw_allowed); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/


static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}


#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}


#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    PyObject *r;
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (PyTuple_CheckExact(o) && ((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_item && (likely(i >= 0))) {
        r = PySequence_GetItem(o, i);
    }
    else {
        r = __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
    }
    return r;
}

static CYTHON_INLINE PyObject* __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (PyList_Append(L, x) < 0) return NULL;
        Py_INCREF(Py_None);
        return Py_None; /* this is just to have an accurate signature */
    }
    else {
        PyObject *r, *m;
        m = __Pyx_GetAttrString(L, "append");
        if (!m) return NULL;
        r = PyObject_CallFunctionObjArgs(m, x, NULL);
        Py_DECREF(m);
        return r;
    }
}

static CYTHON_INLINE void __Pyx_RaiseNoneIndexingError(void);


#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    if (unlikely(d == Py_None)) {
        __Pyx_RaiseNoneIndexingError();
        return NULL;
    }
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred())
            PyErr_SetObject(PyExc_KeyError, key);
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(void);

static PyObject *__Pyx_UnpackItem(PyObject *, Py_ssize_t index); /*proto*/
static int __Pyx_EndUnpack(PyObject *); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

static int __Pyx_Print(PyObject*, PyObject *, int); /*proto*/
#if PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif

#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    /*#define __Pyx_c_abs(z)     (::std::abs(z))*/
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    /*#define __Pyx_c_abs(z)     (cabs(z))*/
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    /*static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);*/
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size, int strict);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from numpy */

/* Module declarations from numpy */

/* Module declarations from _hermes_common */

static PyTypeObject *__pyx_ptype_14_hermes_common_ndarray = 0;
extern PyObject *(*c2numpy_int)(int *, int); /*proto*/
extern PyObject *(*c2numpy_double)(double *, int); /*proto*/
/* Module declarations from hermes2d._hermes2d */

static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_ndarray = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_LinSystem = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_RefSystem = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Solver = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_DummySolver = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_WeakForm = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_H1OrthoHP = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_H1Space = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Transformable = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Function = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_ScalarFunction = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_MeshFunction = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Solution = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Linearizer = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Vectorizer = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Nurbs = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_CurvMap = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Node = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Element = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Mesh = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_H1Shapeset = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_Filter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_VonMisesFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_MagFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_DiffFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_SumFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_SquareFilter = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_L2OrthoHP = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_View = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_ScalarView = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_BaseView = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_MeshView = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_OrderView = 0;
static PyTypeObject *__pyx_ptype_8hermes2d_9_hermes2d_VectorView = 0;
static PyObject *H1Space_from_C(struct H1Space *); /*proto*/
static PyObject *Mesh_from_C(struct Mesh *); /*proto*/
static PyObject *Solution_from_C(struct Solution *); /*proto*/
#define __Pyx_MODULE_NAME "hermes2d._hermes2d"
int __pyx_module_is_main_hermes2d___hermes2d = 0;

/* Implementation of hermes2d._hermes2d */
static PyObject *__pyx_builtin_property;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_max;
static PyObject *__pyx_builtin_NotImplemented;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_enumerate;
static char __pyx_k_1[] = "Node %d: coord=%r, used=%r";
static char __pyx_k_2[] = "Element %d: nodes_id=%r, active=%r, marker=%d, used=%r";
static char __pyx_k_3[] = "get_num_base_elements";
static char __pyx_k_4[] = "get_num_active_elements";
static char __pyx_k_5[] = "Mesh with %d elements: active=%d, base=%d, max_id=%d";
static char __pyx_k_6[] = "1 0\n";
static char __pyx_k_7[] = "%d\n";
static char __pyx_k_8[] = "%f %f\n";
static char __pyx_k_9[] = "%d ";
static char __pyx_k_10[] = "\n";
static char __pyx_k_11[] = "%d %d %d\n";
static char __pyx_k_12[] = "%d %d\n0\n%f\n";
static char __pyx_k_13[] = "0\n";
static char __pyx_k_14[] = "refine_towards_boundary";
static char __pyx_k_15[] = "refine_towards_vertex";
static char __pyx_k_16[] = "convert_triangles_to_quads";
static char __pyx_k_17[] = "convert_quads_to_triangles";
static char __pyx_k_23[] = "scipy.sparse.linalg";
static char __pyx_k_24[] = "Unknown library";
static char __pyx_k_25[] = "scipy.sparse";
static char __pyx_k_35[] = "init_hermes2d_wrappers";
static char __pyx_k_36[] = "Mesh.elements_markers (line 198)";
static char __pyx_k_37[] = "Mesh.elements (line 212)";
static char __pyx_k_38[] = "Mesh.nodes (line 224)";
static char __pyx_k_39[] = "Mesh.nodes_dict (line 248)";
static char __pyx_k_40[] = "Mesh.curves (line 263)";
static char __pyx_k_41[] = "Mesh.get_polygonal_boundary (line 298)";
static char __pyx_k_42[] = "get_polygonal_boundary";
static char __pyx_k_43[] = "Mesh.load_hermes (line 337)";
static char __pyx_k_44[] = "Mesh.get_elements_order (line 349)";
static char __pyx_k_45[] = "Mesh.create (line 374)";
static char __pyx_k_46[] = "Mesh.plot (line 452)";
static char __pyx_k_47[] = "Solution.set_fe_solution (line 588)";
static char __pyx_k_48[] = "Solution.plot (line 600)";
static char __pyx_k_49[] = "LinSystem.solve_system (line 729)";
static char __pyx_k_50[] = "LinSystem.get_matrix_csc (line 778)";
static char __pyx_k_51[] = "LinSystem.get_matrix (line 793)";
static char __pyx_k_52[] = "LinSystem.get_rhs (line 801)";
static char __pyx_k_53[] = "Linearizer.get_vertices (line 1067)";
static char __pyx_k_54[] = "Linearizer.get_triangles (line 1096)";
static char __pyx_k_55[] = "Linearizer.get_edges (line 1124)";
static char __pyx_k_56[] = "set_verbose (line 1305)";
static char __pyx_k_57[] = "set_warn_integration (line 1320)";
static char __pyx_k_58[] = "set_warn_integration";
static char __pyx_k__h[] = "h";
static char __pyx_k__l[] = "l";
static char __pyx_k__m[] = "m";
static char __pyx_k__s[] = "s";
static char __pyx_k__v[] = "v";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__cg[] = "cg";
static char __pyx_k__cm[] = "cm";
static char __pyx_k__en[] = "en";
static char __pyx_k__id[] = "id";
static char __pyx_k__kv[] = "kv";
static char __pyx_k__ls[] = "ls";
static char __pyx_k__nk[] = "nk";
static char __pyx_k__np[] = "np";
static char __pyx_k__pt[] = "pt";
static char __pyx_k__s1[] = "s1";
static char __pyx_k__s2[] = "s2";
static char __pyx_k__vn[] = "vn";
static char __pyx_k__wf[] = "wf";
static char __pyx_k__bnd[] = "bnd";
static char __pyx_k__eps[] = "eps";
static char __pyx_k__inc[] = "inc";
static char __pyx_k__key[] = "key";
static char __pyx_k__lib[] = "lib";
static char __pyx_k__max[] = "max";
static char __pyx_k__min[] = "min";
static char __pyx_k__neq[] = "neq";
static char __pyx_k__pss[] = "pss";
static char __pyx_k__ref[] = "ref";
static char __pyx_k__sln[] = "sln";
static char __pyx_k__thr[] = "thr";
static char __pyx_k__Mesh[] = "Mesh";
static char __pyx_k___pss[] = "_pss";
static char __pyx_k__copy[] = "copy";
static char __pyx_k__data[] = "data";
static char __pyx_k__item[] = "item";
static char __pyx_k__load[] = "load";
static char __pyx_k__math[] = "math";
static char __pyx_k__mesh[] = "mesh";
static char __pyx_k__plot[] = "plot";
static char __pyx_k__rsln[] = "rsln";
static char __pyx_k__save[] = "save";
static char __pyx_k__show[] = "show";
static char __pyx_k__sln1[] = "sln1";
static char __pyx_k__sln2[] = "sln2";
static char __pyx_k__sons[] = "sons";
static char __pyx_k__sort[] = "sort";
static char __pyx_k__type[] = "type";
static char __pyx_k__used[] = "used";
static char __pyx_k__wait[] = "wait";
static char __pyx_k__xsln[] = "xsln";
static char __pyx_k__ysln[] = "ysln";
static char __pyx_k__adapt[] = "adapt";
static char __pyx_k__array[] = "array";
static char __pyx_k__coord[] = "coord";
static char __pyx_k__depth[] = "depth";
static char __pyx_k__dtype[] = "dtype";
static char __pyx_k__item1[] = "item1";
static char __pyx_k__item2[] = "item2";
static char __pyx_k__nodes[] = "nodes";
static char __pyx_k__numpy[] = "numpy";
static char __pyx_k__nurbs[] = "nurbs";
static char __pyx_k__nvert[] = "nvert";
static char __pyx_k__order[] = "order";
static char __pyx_k__range[] = "range";
static char __pyx_k__rsln1[] = "rsln1";
static char __pyx_k__rsln2[] = "rsln2";
static char __pyx_k__scipy[] = "scipy";
static char __pyx_k__solve[] = "solve";
static char __pyx_k__strat[] = "strat";
static char __pyx_k__title[] = "title";
static char __pyx_k__width[] = "width";
static char __pyx_k__xitem[] = "xitem";
static char __pyx_k__yitem[] = "yitem";
static char __pyx_k__active[] = "active";
static char __pyx_k__create[] = "create";
static char __pyx_k__curves[] = "curves";
static char __pyx_k__degree[] = "degree";
static char __pyx_k__double[] = "double";
static char __pyx_k__extend[] = "extend";
static char __pyx_k__h_only[] = "h_only";
static char __pyx_k__height[] = "height";
static char __pyx_k__hermes[] = "hermes";
static char __pyx_k__marker[] = "marker";
static char __pyx_k__scalar[] = "scalar";
static char __pyx_k__solver[] = "solver";
static char __pyx_k__stride[] = "stride";
static char __pyx_k__values[] = "values";
static char __pyx_k___spaces[] = "_spaces";
static char __pyx_k__get_pss[] = "get_pss";
static char __pyx_k__get_rhs[] = "get_rhs";
static char __pyx_k__reshape[] = "reshape";
static char __pyx_k__set_pss[] = "set_pss";
static char __pyx_k__spsolve[] = "spsolve";
static char __pyx_k__thisptr[] = "thisptr";
static char __pyx_k__BaseView[] = "BaseView";
static char __pyx_k__MeshView[] = "MeshView";
static char __pyx_k__Solution[] = "Solution";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__assemble[] = "assemble";
static char __pyx_k__boundary[] = "boundary";
static char __pyx_k__elements[] = "elements";
static char __pyx_k__get_area[] = "get_area";
static char __pyx_k__get_mesh[] = "get_mesh";
static char __pyx_k__hermes2d[] = "hermes2d";
static char __pyx_k__load_str[] = "load_str";
static char __pyx_k__property[] = "property";
static char __pyx_k__set_zero[] = "set_zero";
static char __pyx_k__sln_list[] = "sln_list";
static char __pyx_k__toplevel[] = "toplevel";
static char __pyx_k__H2D_FN_DX[] = "H2D_FN_DX";
static char __pyx_k__H2D_FN_DY[] = "H2D_FN_DY";
static char __pyx_k__LinSystem[] = "LinSystem";
static char __pyx_k__OrderView[] = "OrderView";
static char __pyx_k__enumerate[] = "enumerate";
static char __pyx_k__first_dof[] = "first_dof";
static char __pyx_k__get_edges[] = "get_edges";
static char __pyx_k__get_nurbs[] = "get_nurbs";
static char __pyx_k__get_space[] = "get_space";
static char __pyx_k__load_data[] = "load_data";
static char __pyx_k__rsln_list[] = "rsln_list";
static char __pyx_k__save_data[] = "save_data";
static char __pyx_k__set_const[] = "set_const";
static char __pyx_k__set_title[] = "set_title";
static char __pyx_k__show_mesh[] = "show_mesh";
static char __pyx_k__H2D_FN_ALL[] = "H2D_FN_ALL";
static char __pyx_k__H2D_FN_DXX[] = "H2D_FN_DXX";
static char __pyx_k__H2D_FN_DXY[] = "H2D_FN_DXY";
static char __pyx_k__H2D_FN_DYY[] = "H2D_FN_DYY";
static char __pyx_k__H2D_FN_VAL[] = "H2D_FN_VAL";
static char __pyx_k__Linearizer[] = "Linearizer";
static char __pyx_k__ScalarView[] = "ScalarView";
static char __pyx_k__calc_error[] = "calc_error";
static char __pyx_k__csc_matrix[] = "csc_matrix";
static char __pyx_k__curved_map[] = "curved_map";
static char __pyx_k__get_dashes[] = "get_dashes";
static char __pyx_k__get_matrix[] = "get_matrix";
static char __pyx_k__nodes_dict[] = "nodes_dict";
static char __pyx_k__nodes_edge[] = "nodes_edge";
static char __pyx_k__refinement[] = "refinement";
static char __pyx_k__set_spaces[] = "set_spaces";
static char __pyx_k__show_scale[] = "show_scale";
static char __pyx_k__assign_dofs[] = "assign_dofs";
static char __pyx_k__copy_orders[] = "copy_orders";
static char __pyx_k__get_element[] = "get_element";
static char __pyx_k__get_node_id[] = "get_node_id";
static char __pyx_k__load_hermes[] = "load_hermes";
static char __pyx_k__set_verbose[] = "set_verbose";
static char __pyx_k__H2D_EPS_HIGH[] = "H2D_EPS_HIGH";
static char __pyx_k__calc_error_2[] = "calc_error_2";
static char __pyx_k__calc_error_n[] = "calc_error_n";
static char __pyx_k__get_diameter[] = "get_diameter";
static char __pyx_k__get_num_dofs[] = "get_num_dofs";
static char __pyx_k__get_pt_value[] = "get_pt_value";
static char __pyx_k__get_vertices[] = "get_vertices";
static char __pyx_k__nodes_vertex[] = "nodes_vertex";
static char __pyx_k__num_elements[] = "num_elements";
static char __pyx_k__solve_system[] = "solve_system";
static char __pyx_k__get_edge_node[] = "get_edge_node";
static char __pyx_k__get_max_value[] = "get_max_value";
static char __pyx_k__get_min_value[] = "get_min_value";
static char __pyx_k__get_num_edges[] = "get_num_edges";
static char __pyx_k__get_triangles[] = "get_triangles";
static char __pyx_k__H2D_EPS_NORMAL[] = "H2D_EPS_NORMAL";
static char __pyx_k__H2D_FN_DEFAULT[] = "H2D_FN_DEFAULT";
static char __pyx_k__NotImplemented[] = "NotImplemented";
static char __pyx_k__get_matrix_csc[] = "get_matrix_csc";
static char __pyx_k__get_num_dashes[] = "get_num_dashes";
static char __pyx_k__max_element_id[] = "max_element_id";
static char __pyx_k__refine_element[] = "refine_element";
static char __pyx_k__get_vertex_node[] = "get_vertex_node";
static char __pyx_k__nodes_vertex_id[] = "nodes_vertex_id";
static char __pyx_k__set_fe_solution[] = "set_fe_solution";
static char __pyx_k__elements_markers[] = "elements_markers";
static char __pyx_k__get_num_elements[] = "get_num_elements";
static char __pyx_k__get_num_vertices[] = "get_num_vertices";
static char __pyx_k__process_solution[] = "process_solution";
static char __pyx_k__get_element_order[] = "get_element_order";
static char __pyx_k__get_num_triangles[] = "get_num_triangles";
static char __pyx_k__num_base_elements[] = "num_base_elements";
static char __pyx_k__set_min_max_range[] = "set_min_max_range";
static char __pyx_k__set_uniform_order[] = "set_uniform_order";
static char __pyx_k__get_elements_order[] = "get_elements_order";
static char __pyx_k__get_max_element_id[] = "get_max_element_id";
static char __pyx_k__read_hermes_format[] = "read_hermes_format";
static char __pyx_k__NotImplementedError[] = "NotImplementedError";
static char __pyx_k__num_active_elements[] = "num_active_elements";
static char __pyx_k__refine_all_elements[] = "refine_all_elements";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_n_s_14;
static PyObject *__pyx_n_s_15;
static PyObject *__pyx_n_s_16;
static PyObject *__pyx_n_s_17;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_n_s_23;
static PyObject *__pyx_kp_s_24;
static PyObject *__pyx_n_s_25;
static PyObject *__pyx_n_s_3;
static PyObject *__pyx_n_s_35;
static PyObject *__pyx_kp_u_36;
static PyObject *__pyx_kp_u_37;
static PyObject *__pyx_kp_u_38;
static PyObject *__pyx_kp_u_39;
static PyObject *__pyx_n_s_4;
static PyObject *__pyx_kp_u_40;
static PyObject *__pyx_kp_u_41;
static PyObject *__pyx_n_s_42;
static PyObject *__pyx_kp_u_43;
static PyObject *__pyx_kp_u_44;
static PyObject *__pyx_kp_u_45;
static PyObject *__pyx_kp_u_46;
static PyObject *__pyx_kp_u_47;
static PyObject *__pyx_kp_u_48;
static PyObject *__pyx_kp_u_49;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_u_50;
static PyObject *__pyx_kp_u_51;
static PyObject *__pyx_kp_u_52;
static PyObject *__pyx_kp_u_53;
static PyObject *__pyx_kp_u_54;
static PyObject *__pyx_kp_u_55;
static PyObject *__pyx_kp_u_56;
static PyObject *__pyx_kp_u_57;
static PyObject *__pyx_n_s_58;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_n_s__H2D_EPS_HIGH;
static PyObject *__pyx_n_s__H2D_EPS_NORMAL;
static PyObject *__pyx_n_s__H2D_FN_ALL;
static PyObject *__pyx_n_s__H2D_FN_DEFAULT;
static PyObject *__pyx_n_s__H2D_FN_DX;
static PyObject *__pyx_n_s__H2D_FN_DXX;
static PyObject *__pyx_n_s__H2D_FN_DXY;
static PyObject *__pyx_n_s__H2D_FN_DY;
static PyObject *__pyx_n_s__H2D_FN_DYY;
static PyObject *__pyx_n_s__H2D_FN_VAL;
static PyObject *__pyx_n_s__LinSystem;
static PyObject *__pyx_n_s__Linearizer;
static PyObject *__pyx_n_s__Mesh;
static PyObject *__pyx_n_s__MeshView;
static PyObject *__pyx_n_s__NotImplemented;
static PyObject *__pyx_n_s__NotImplementedError;
static PyObject *__pyx_n_s__ScalarView;
static PyObject *__pyx_n_s__Solution;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___pss;
static PyObject *__pyx_n_s___spaces;
static PyObject *__pyx_n_s__active;
static PyObject *__pyx_n_s__adapt;
static PyObject *__pyx_n_s__array;
static PyObject *__pyx_n_s__assemble;
static PyObject *__pyx_n_s__assign_dofs;
static PyObject *__pyx_n_s__bnd;
static PyObject *__pyx_n_s__boundary;
static PyObject *__pyx_n_s__calc_error;
static PyObject *__pyx_n_s__calc_error_2;
static PyObject *__pyx_n_s__calc_error_n;
static PyObject *__pyx_n_s__cg;
static PyObject *__pyx_n_s__cm;
static PyObject *__pyx_n_s__coord;
static PyObject *__pyx_n_s__copy;
static PyObject *__pyx_n_s__copy_orders;
static PyObject *__pyx_n_s__create;
static PyObject *__pyx_n_s__csc_matrix;
static PyObject *__pyx_n_s__curved_map;
static PyObject *__pyx_n_s__curves;
static PyObject *__pyx_n_s__data;
static PyObject *__pyx_n_s__degree;
static PyObject *__pyx_n_s__depth;
static PyObject *__pyx_n_s__double;
static PyObject *__pyx_n_s__dtype;
static PyObject *__pyx_n_s__elements;
static PyObject *__pyx_n_s__elements_markers;
static PyObject *__pyx_n_s__en;
static PyObject *__pyx_n_s__enumerate;
static PyObject *__pyx_n_s__eps;
static PyObject *__pyx_n_s__extend;
static PyObject *__pyx_n_s__first_dof;
static PyObject *__pyx_n_s__get_area;
static PyObject *__pyx_n_s__get_dashes;
static PyObject *__pyx_n_s__get_diameter;
static PyObject *__pyx_n_s__get_edge_node;
static PyObject *__pyx_n_s__get_edges;
static PyObject *__pyx_n_s__get_element;
static PyObject *__pyx_n_s__get_element_order;
static PyObject *__pyx_n_s__get_elements_order;
static PyObject *__pyx_n_s__get_matrix;
static PyObject *__pyx_n_s__get_matrix_csc;
static PyObject *__pyx_n_s__get_max_element_id;
static PyObject *__pyx_n_s__get_max_value;
static PyObject *__pyx_n_s__get_mesh;
static PyObject *__pyx_n_s__get_min_value;
static PyObject *__pyx_n_s__get_node_id;
static PyObject *__pyx_n_s__get_num_dashes;
static PyObject *__pyx_n_s__get_num_dofs;
static PyObject *__pyx_n_s__get_num_edges;
static PyObject *__pyx_n_s__get_num_elements;
static PyObject *__pyx_n_s__get_num_triangles;
static PyObject *__pyx_n_s__get_num_vertices;
static PyObject *__pyx_n_s__get_nurbs;
static PyObject *__pyx_n_s__get_pss;
static PyObject *__pyx_n_s__get_pt_value;
static PyObject *__pyx_n_s__get_rhs;
static PyObject *__pyx_n_s__get_space;
static PyObject *__pyx_n_s__get_triangles;
static PyObject *__pyx_n_s__get_vertex_node;
static PyObject *__pyx_n_s__get_vertices;
static PyObject *__pyx_n_s__h;
static PyObject *__pyx_n_s__h_only;
static PyObject *__pyx_n_s__height;
static PyObject *__pyx_n_s__hermes;
static PyObject *__pyx_n_s__hermes2d;
static PyObject *__pyx_n_s__id;
static PyObject *__pyx_n_s__inc;
static PyObject *__pyx_n_s__item;
static PyObject *__pyx_n_s__item1;
static PyObject *__pyx_n_s__item2;
static PyObject *__pyx_n_s__key;
static PyObject *__pyx_n_s__kv;
static PyObject *__pyx_n_s__l;
static PyObject *__pyx_n_s__lib;
static PyObject *__pyx_n_s__load;
static PyObject *__pyx_n_s__load_data;
static PyObject *__pyx_n_s__load_hermes;
static PyObject *__pyx_n_s__load_str;
static PyObject *__pyx_n_s__ls;
static PyObject *__pyx_n_s__m;
static PyObject *__pyx_n_s__marker;
static PyObject *__pyx_n_s__math;
static PyObject *__pyx_n_s__max;
static PyObject *__pyx_n_s__max_element_id;
static PyObject *__pyx_n_s__mesh;
static PyObject *__pyx_n_s__min;
static PyObject *__pyx_n_s__neq;
static PyObject *__pyx_n_s__nk;
static PyObject *__pyx_n_s__nodes;
static PyObject *__pyx_n_s__nodes_dict;
static PyObject *__pyx_n_s__nodes_edge;
static PyObject *__pyx_n_s__nodes_vertex;
static PyObject *__pyx_n_s__nodes_vertex_id;
static PyObject *__pyx_n_s__np;
static PyObject *__pyx_n_s__num_active_elements;
static PyObject *__pyx_n_s__num_base_elements;
static PyObject *__pyx_n_s__num_elements;
static PyObject *__pyx_n_s__numpy;
static PyObject *__pyx_n_s__nurbs;
static PyObject *__pyx_n_s__nvert;
static PyObject *__pyx_n_s__order;
static PyObject *__pyx_n_s__plot;
static PyObject *__pyx_n_s__process_solution;
static PyObject *__pyx_n_s__property;
static PyObject *__pyx_n_s__pss;
static PyObject *__pyx_n_s__pt;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__read_hermes_format;
static PyObject *__pyx_n_s__ref;
static PyObject *__pyx_n_s__refine_all_elements;
static PyObject *__pyx_n_s__refine_element;
static PyObject *__pyx_n_s__refinement;
static PyObject *__pyx_n_s__reshape;
static PyObject *__pyx_n_s__rsln;
static PyObject *__pyx_n_s__rsln1;
static PyObject *__pyx_n_s__rsln2;
static PyObject *__pyx_n_s__rsln_list;
static PyObject *__pyx_n_s__s;
static PyObject *__pyx_n_s__s1;
static PyObject *__pyx_n_s__s2;
static PyObject *__pyx_n_s__save;
static PyObject *__pyx_n_s__save_data;
static PyObject *__pyx_n_s__scalar;
static PyObject *__pyx_n_s__scipy;
static PyObject *__pyx_n_s__set_const;
static PyObject *__pyx_n_s__set_fe_solution;
static PyObject *__pyx_n_s__set_min_max_range;
static PyObject *__pyx_n_s__set_pss;
static PyObject *__pyx_n_s__set_spaces;
static PyObject *__pyx_n_s__set_title;
static PyObject *__pyx_n_s__set_uniform_order;
static PyObject *__pyx_n_s__set_verbose;
static PyObject *__pyx_n_s__set_zero;
static PyObject *__pyx_n_s__show;
static PyObject *__pyx_n_s__show_mesh;
static PyObject *__pyx_n_s__show_scale;
static PyObject *__pyx_n_s__sln;
static PyObject *__pyx_n_s__sln1;
static PyObject *__pyx_n_s__sln2;
static PyObject *__pyx_n_s__sln_list;
static PyObject *__pyx_n_s__solve;
static PyObject *__pyx_n_s__solve_system;
static PyObject *__pyx_n_s__solver;
static PyObject *__pyx_n_s__sons;
static PyObject *__pyx_n_s__sort;
static PyObject *__pyx_n_s__spsolve;
static PyObject *__pyx_n_s__strat;
static PyObject *__pyx_n_s__stride;
static PyObject *__pyx_n_s__thisptr;
static PyObject *__pyx_n_s__thr;
static PyObject *__pyx_n_s__title;
static PyObject *__pyx_n_s__toplevel;
static PyObject *__pyx_n_s__type;
static PyObject *__pyx_n_s__used;
static PyObject *__pyx_n_s__v;
static PyObject *__pyx_n_s__values;
static PyObject *__pyx_n_s__vn;
static PyObject *__pyx_n_s__wait;
static PyObject *__pyx_n_s__wf;
static PyObject *__pyx_n_s__width;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__xitem;
static PyObject *__pyx_n_s__xsln;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__yitem;
static PyObject *__pyx_n_s__ysln;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_31;
static int __pyx_k_18;
static int __pyx_k_19;
static int __pyx_k_20;
static int __pyx_k_21;
static int __pyx_k_22;
static PyObject *__pyx_k_26;
static PyObject *__pyx_k_27;
static int __pyx_k_28;
static int __pyx_k_29;
static double __pyx_k_30;
static PyObject *__pyx_k_31;
static PyObject *__pyx_k_32;
static PyObject *__pyx_k_33;
static PyObject *__pyx_k_34;

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":20
 * 
 *     @property
 *     def degree(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.degree
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_degree(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_degree(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("degree");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":21
 *     @property
 *     def degree(self):
 *         return self.thisptr.degree             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->degree); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.degree");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":24
 * 
 *     @property
 *     def np(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.np
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_np(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_np(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("np");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":25
 *     @property
 *     def np(self):
 *         return self.thisptr.np             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.np");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":28
 * 
 *     @property
 *     def pt(self):             # <<<<<<<<<<<<<<
 *         cdef double3 *pt = self.thisptr.pt
 *         cdef int np = self.thisptr.np
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_pt(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_pt(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  double3 *__pyx_v_pt;
  int __pyx_v_np;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("pt");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":29
 *     @property
 *     def pt(self):
 *         cdef double3 *pt = self.thisptr.pt             # <<<<<<<<<<<<<<
 *         cdef int np = self.thisptr.np
 *         cdef ndarray vec = c2numpy_double(<double *>pt, 3*np)
 */
  __pyx_v_pt = ((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->pt;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":30
 *     def pt(self):
 *         cdef double3 *pt = self.thisptr.pt
 *         cdef int np = self.thisptr.np             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_double(<double *>pt, 3*np)
 *         return vec.reshape((np, 3))
 */
  __pyx_v_np = ((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->np;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":31
 *         cdef double3 *pt = self.thisptr.pt
 *         cdef int np = self.thisptr.np
 *         cdef ndarray vec = c2numpy_double(<double *>pt, 3*np)             # <<<<<<<<<<<<<<
 *         return vec.reshape((np, 3))
 * 
 */
  __pyx_t_1 = c2numpy_double(((double *)__pyx_v_pt), (3 * __pyx_v_np)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":32
 *         cdef int np = self.thisptr.np
 *         cdef ndarray vec = c2numpy_double(<double *>pt, 3*np)
 *         return vec.reshape((np, 3))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.pt");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":35
 * 
 *     @property
 *     def nk(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nk
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_nk(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_nk(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("nk");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":36
 *     @property
 *     def nk(self):
 *         return self.thisptr.nk             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->nk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.nk");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":39
 * 
 *     @property
 *     def kv(self):             # <<<<<<<<<<<<<<
 *         cdef double *kv = self.thisptr.kv
 *         cdef int nk = self.thisptr.nk
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_kv(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_kv(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  double *__pyx_v_kv;
  int __pyx_v_nk;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("kv");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":40
 *     @property
 *     def kv(self):
 *         cdef double *kv = self.thisptr.kv             # <<<<<<<<<<<<<<
 *         cdef int nk = self.thisptr.nk
 *         cdef ndarray vec = c2numpy_double(<double *>kv, nk)
 */
  __pyx_v_kv = ((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->kv;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":41
 *     def kv(self):
 *         cdef double *kv = self.thisptr.kv
 *         cdef int nk = self.thisptr.nk             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_double(<double *>kv, nk)
 *         return vec
 */
  __pyx_v_nk = ((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->nk;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":42
 *         cdef double *kv = self.thisptr.kv
 *         cdef int nk = self.thisptr.nk
 *         cdef ndarray vec = c2numpy_double(<double *>kv, nk)             # <<<<<<<<<<<<<<
 *         return vec
 *         #return vec.reshape((kv,))
 */
  __pyx_t_1 = c2numpy_double(((double *)__pyx_v_kv), __pyx_v_nk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":43
 *         cdef int nk = self.thisptr.nk
 *         cdef ndarray vec = c2numpy_double(<double *>kv, nk)
 *         return vec             # <<<<<<<<<<<<<<
 *         #return vec.reshape((kv,))
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_vec));
  __pyx_r = ((PyObject *)__pyx_v_vec);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.kv");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":47
 * 
 *     @property
 *     def ref(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nk
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_ref(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_ref(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ref");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":48
 *     @property
 *     def ref(self):
 *         return self.thisptr.nk             # <<<<<<<<<<<<<<
 * 
 * cdef class CurvMap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_v_self)->thisptr->nk); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Nurbs.ref");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":54
 * 
 *     @property
 *     def order(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.order
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_order(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_order(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("order");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":55
 *     @property
 *     def order(self):
 *         return self.thisptr.order             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_v_self)->thisptr->order); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.CurvMap.order");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":58
 * 
 *     @property
 *     def toplevel(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.toplevel
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_toplevel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_toplevel(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("toplevel");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":59
 *     @property
 *     def toplevel(self):
 *         return self.thisptr.toplevel             # <<<<<<<<<<<<<<
 * 
 *     def get_nurbs(self, int k):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_v_self)->thisptr->toplevel); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.CurvMap.toplevel");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":61
 *         return self.thisptr.toplevel
 * 
 *     def get_nurbs(self, int k):             # <<<<<<<<<<<<<<
 *         if self.thisptr.toplevel == 0:
 *             return None
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_get_nurbs(PyObject *__pyx_v_self, PyObject *__pyx_arg_k); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_get_nurbs(PyObject *__pyx_v_self, PyObject *__pyx_arg_k) {
  int __pyx_v_k;
  struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *__pyx_v_n = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_nurbs");
  assert(__pyx_arg_k); {
    __pyx_v_k = __Pyx_PyInt_AsInt(__pyx_arg_k); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.CurvMap.get_nurbs");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_self);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":62
 * 
 *     def get_nurbs(self, int k):
 *         if self.thisptr.toplevel == 0:             # <<<<<<<<<<<<<<
 *             return None
 *         if self.thisptr.nurbs[k] == NULL:
 */
  __pyx_t_1 = (((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_v_self)->thisptr->toplevel == 0);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":63
 *     def get_nurbs(self, int k):
 *         if self.thisptr.toplevel == 0:
 *             return None             # <<<<<<<<<<<<<<
 *         if self.thisptr.nurbs[k] == NULL:
 *             return None
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":64
 *         if self.thisptr.toplevel == 0:
 *             return None
 *         if self.thisptr.nurbs[k] == NULL:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = ((((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_v_self)->thisptr->nurbs[__pyx_v_k]) == NULL);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":65
 *             return None
 *         if self.thisptr.nurbs[k] == NULL:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef Nurbs n = Nurbs()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":67
 *             return None
 * 
 *         cdef Nurbs n = Nurbs()             # <<<<<<<<<<<<<<
 *         n.thisptr = self.thisptr.nurbs[k]
 *         return n
 */
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":68
 * 
 *         cdef Nurbs n = Nurbs()
 *         n.thisptr = self.thisptr.nurbs[k]             # <<<<<<<<<<<<<<
 *         return n
 * 
 */
  __pyx_v_n->thisptr = (((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_v_self)->thisptr->nurbs[__pyx_v_k]);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":69
 *         cdef Nurbs n = Nurbs()
 *         n.thisptr = self.thisptr.nurbs[k]
 *         return n             # <<<<<<<<<<<<<<
 * 
 * cdef class Node:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.CurvMap.get_nurbs");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_n);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":75
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.id
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("id");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":76
 *     @property
 *     def id(self):
 *         return self.thisptr.id             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.id");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":79
 * 
 *     @property
 *     def ref(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.ref
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_ref(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_ref(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ref");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":80
 *     @property
 *     def ref(self):
 *         return self.thisptr.ref             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->ref); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.ref");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":83
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.type
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_type(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_type(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("type");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":84
 *     @property
 *     def type(self):
 *         return self.thisptr.type             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->type); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.type");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":87
 * 
 *     @property
 *     def bnd(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.bnd
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_bnd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_bnd(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("bnd");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":88
 *     @property
 *     def bnd(self):
 *         return self.thisptr.bnd             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->bnd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.bnd");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":91
 * 
 *     @property
 *     def used(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.used == 1
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_used(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_used(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("used");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":92
 *     @property
 *     def used(self):
 *         return self.thisptr.used == 1             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->used == 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.used");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":94
 *         return self.thisptr.used == 1
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "Node %d: coord=%r, used=%r" % (self.id, self.coord, self.used)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node___str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node___str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__str__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":95
 * 
 *     def __str__(self):
 *         return "Node %d: coord=%r, used=%r" % (self.id, self.coord, self.used)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__coord); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__used); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_1), __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":98
 * 
 *     @property
 *     def coord(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.x, self.thisptr.y
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_coord(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Node_coord(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("coord");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":99
 *     @property
 *     def coord(self):
 *         return self.thisptr.x, self.thisptr.y             # <<<<<<<<<<<<<<
 * 
 * cdef class Element:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_v_self)->thisptr->y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Node.coord");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":105
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.id
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("id");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":106
 *     @property
 *     def id(self):
 *         return self.thisptr.id             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.id");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":109
 * 
 *     @property
 *     def nvert(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nvert
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nvert(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nvert(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("nvert");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":110
 *     @property
 *     def nvert(self):
 *         return self.thisptr.nvert             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->nvert); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.nvert");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":113
 * 
 *     @property
 *     def active(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.active == 1
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_active(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_active(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("active");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":114
 *     @property
 *     def active(self):
 *         return self.thisptr.active == 1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->active == 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.active");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":117
 * 
 *     @property
 *     def used(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.used == 1
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_used(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_used(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("used");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":118
 *     @property
 *     def used(self):
 *         return self.thisptr.used == 1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->used == 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.used");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":121
 * 
 *     @property
 *     def marker(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.marker
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_marker(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_marker(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("marker");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":122
 *     @property
 *     def marker(self):
 *         return self.thisptr.marker             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->marker); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.marker");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":125
 * 
 *     @property
 *     def nodes_vertex(self):             # <<<<<<<<<<<<<<
 *         return [self.get_vertex_node(i) for i in range(self.nvert)]
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_i;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("nodes_vertex");
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":126
 *     @property
 *     def nodes_vertex(self):
 *         return [self.get_vertex_node(i) for i in range(self.nvert)]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nvert); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_builtin_range, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = 0; __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_4);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_vertex_node); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_6 = PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_6); if (unlikely(__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.nodes_vertex");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":129
 * 
 *     @property
 *     def nodes_vertex_id(self):             # <<<<<<<<<<<<<<
 *         return [node.id for node in self.nodes_vertex]
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("nodes_vertex_id");
  __pyx_v_node = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":130
 *     @property
 *     def nodes_vertex_id(self):
 *         return [node.id for node in self.nodes_vertex]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nodes_vertex); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = 0; __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_4);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__id); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_3); if (unlikely(__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.nodes_vertex_id");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":133
 * 
 *     @property
 *     def nodes_edge(self):             # <<<<<<<<<<<<<<
 *         return [self.get_edge_node(i) for i in range(self.nvert)]
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_edge(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_edge(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_i;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("nodes_edge");
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":134
 *     @property
 *     def nodes_edge(self):
 *         return [self.get_edge_node(i) for i in range(self.nvert)]             # <<<<<<<<<<<<<<
 * 
 *     def get_vertex_node(self, int id):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nvert); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_builtin_range, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = 0; __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_4);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_edge_node); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_6 = PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_6); if (unlikely(__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.nodes_edge");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":136
 *         return [self.get_edge_node(i) for i in range(self.nvert)]
 * 
 *     def get_vertex_node(self, int id):             # <<<<<<<<<<<<<<
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.vn[id]
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_vertex_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_id); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_vertex_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_id) {
  int __pyx_v_id;
  struct __pyx_obj_8hermes2d_9_hermes2d_Node *__pyx_v_n = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_vertex_node");
  assert(__pyx_arg_id); {
    __pyx_v_id = __Pyx_PyInt_AsInt(__pyx_arg_id); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_vertex_node");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":137
 * 
 *     def get_vertex_node(self, int id):
 *         cdef Node n = Node()             # <<<<<<<<<<<<<<
 *         n.thisptr = self.thisptr.vn[id]
 *         return n
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Node)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":138
 *     def get_vertex_node(self, int id):
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.vn[id]             # <<<<<<<<<<<<<<
 *         return n
 * 
 */
  __pyx_v_n->thisptr = (((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->vn[__pyx_v_id]);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":139
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.vn[id]
 *         return n             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_vertex_node");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":142
 * 
 *     @property
 *     def curved_map(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.cm == NULL:
 *             return None
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_curved_map(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_curved_map(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *__pyx_v_cm = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("curved_map");
  __Pyx_INCREF((PyObject *)__pyx_v_self);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":143
 *     @property
 *     def curved_map(self):
 *         if self.thisptr.cm == NULL:             # <<<<<<<<<<<<<<
 *             return None
 * 
 */
  __pyx_t_1 = (((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->cm == NULL);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":144
 *     def curved_map(self):
 *         if self.thisptr.cm == NULL:
 *             return None             # <<<<<<<<<<<<<<
 * 
 *         cdef CurvMap cm = CurvMap()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":146
 *             return None
 * 
 *         cdef CurvMap cm = CurvMap()             # <<<<<<<<<<<<<<
 *         cm.thisptr = self.thisptr.cm
 *         return cm
 */
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_CurvMap)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_cm = ((struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":147
 * 
 *         cdef CurvMap cm = CurvMap()
 *         cm.thisptr = self.thisptr.cm             # <<<<<<<<<<<<<<
 *         return cm
 * 
 */
  __pyx_v_cm->thisptr = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->cm;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":148
 *         cdef CurvMap cm = CurvMap()
 *         cm.thisptr = self.thisptr.cm
 *         return cm             # <<<<<<<<<<<<<<
 * 
 *     def get_edge_node(self, int id):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_cm));
  __pyx_r = ((PyObject *)__pyx_v_cm);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.curved_map");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cm);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":150
 *         return cm
 * 
 *     def get_edge_node(self, int id):             # <<<<<<<<<<<<<<
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.en[id]
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_edge_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_id); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_edge_node(PyObject *__pyx_v_self, PyObject *__pyx_arg_id) {
  int __pyx_v_id;
  struct __pyx_obj_8hermes2d_9_hermes2d_Node *__pyx_v_n = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_edge_node");
  assert(__pyx_arg_id); {
    __pyx_v_id = __Pyx_PyInt_AsInt(__pyx_arg_id); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_edge_node");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":151
 * 
 *     def get_edge_node(self, int id):
 *         cdef Node n = Node()             # <<<<<<<<<<<<<<
 *         n.thisptr = self.thisptr.en[id]
 *         return n
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Node)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Node *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":152
 *     def get_edge_node(self, int id):
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.en[id]             # <<<<<<<<<<<<<<
 *         return n
 * 
 */
  __pyx_v_n->thisptr = (((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->en[__pyx_v_id]);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":153
 *         cdef Node n = Node()
 *         n.thisptr = self.thisptr.en[id]
 *         return n             # <<<<<<<<<<<<<<
 * 
 *     def get_son_element(self, int id):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_edge_node");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":155
 *         return n
 * 
 *     def get_son_element(self, int id):             # <<<<<<<<<<<<<<
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.sons[id]
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_son_element(PyObject *__pyx_v_self, PyObject *__pyx_arg_id); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_son_element(PyObject *__pyx_v_self, PyObject *__pyx_arg_id) {
  int __pyx_v_id;
  struct __pyx_obj_8hermes2d_9_hermes2d_Element *__pyx_v_e = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_son_element");
  assert(__pyx_arg_id); {
    __pyx_v_id = __Pyx_PyInt_AsInt(__pyx_arg_id); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_son_element");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":156
 * 
 *     def get_son_element(self, int id):
 *         cdef Element e = Element()             # <<<<<<<<<<<<<<
 *         e.thisptr = self.thisptr.sons[id]
 *         return e
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Element)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":157
 *     def get_son_element(self, int id):
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.sons[id]             # <<<<<<<<<<<<<<
 *         return e
 * 
 */
  __pyx_v_e->thisptr = (((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->sons[__pyx_v_id]);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":158
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.sons[id]
 *         return e             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_e));
  __pyx_r = ((PyObject *)__pyx_v_e);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_son_element");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":160
 *         return e
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         nodes_id = [node.id for node in self.nodes_vertex]
 *         return "Element %d: nodes_id=%r, active=%r, marker=%d, used=%r" % \
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element___str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element___str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_v_nodes_id;
  PyObject *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__str__");
  __pyx_v_nodes_id = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_node = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":161
 * 
 *     def __str__(self):
 *         nodes_id = [node.id for node in self.nodes_vertex]             # <<<<<<<<<<<<<<
 *         return "Element %d: nodes_id=%r, active=%r, marker=%d, used=%r" % \
 *                 (self.id, nodes_id, self.active, self.marker, self.used)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nodes_vertex); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = 0; __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_4);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__id); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_3); if (unlikely(__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_nodes_id));
  __pyx_v_nodes_id = __pyx_t_1;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":162
 *     def __str__(self):
 *         nodes_id = [node.id for node in self.nodes_vertex]
 *         return "Element %d: nodes_id=%r, active=%r, marker=%d, used=%r" % \             # <<<<<<<<<<<<<<
 *                 (self.id, nodes_id, self.active, self.marker, self.used)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":163
 *         nodes_id = [node.id for node in self.nodes_vertex]
 *         return "Element %d: nodes_id=%r, active=%r, marker=%d, used=%r" % \
 *                 (self.id, nodes_id, self.active, self.marker, self.used)             # <<<<<<<<<<<<<<
 * 
 *     def get_diameter(self):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__active); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__marker); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__used); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyTuple_New(5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_nodes_id));
  PyTuple_SET_ITEM(__pyx_t_7, 1, ((PyObject *)__pyx_v_nodes_id));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_nodes_id));
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_t_3 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_6));
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_r = ((PyObject *)__pyx_t_6);
  __pyx_t_6 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_nodes_id);
  __Pyx_DECREF(__pyx_v_node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":165
 *                 (self.id, nodes_id, self.active, self.marker, self.used)
 * 
 *     def get_diameter(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_diameter()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_diameter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_diameter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_diameter");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":166
 * 
 *     def get_diameter(self):
 *         return self.thisptr.get_diameter()             # <<<<<<<<<<<<<<
 * 
 *     def get_area(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->get_diameter()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_diameter");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":168
 *         return self.thisptr.get_diameter()
 * 
 *     def get_area(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_area()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_area(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7Element_get_area(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_area");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":169
 * 
 *     def get_area(self):
 *         return self.thisptr.get_area()             # <<<<<<<<<<<<<<
 * 
 * def get_node_id(node):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_self)->thisptr->get_area()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Element.get_area");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":171
 *         return self.thisptr.get_area()
 * 
 * def get_node_id(node):             # <<<<<<<<<<<<<<
 *     # This function is used in nodes.sort() in the Mesh class.
 *     # Cython doesn't yet support lambda functions, nor closures.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_get_node_id(PyObject *__pyx_self, PyObject *__pyx_v_node); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_get_node_id(PyObject *__pyx_self, PyObject *__pyx_v_node) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_node_id");
  __pyx_self = __pyx_self;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":174
 *     # This function is used in nodes.sort() in the Mesh class.
 *     # Cython doesn't yet support lambda functions, nor closures.
 *     return node.id             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.get_node_id");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":180
 *     cdef c_Mesh *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_Mesh()
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_4Mesh___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_4Mesh___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":181
 * 
 *     def __cinit__(self):
 *         self.thisptr = new_Mesh()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr = new Mesh();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":183
 *         self.thisptr = new_Mesh()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_4Mesh___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_4Mesh___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":184
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def copy(self, Mesh m):
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":186
 *         delete(self.thisptr)
 * 
 *     def copy(self, Mesh m):             # <<<<<<<<<<<<<<
 *         self.thisptr.copy(m.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_copy(PyObject *__pyx_v_self, PyObject *__pyx_v_m); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_copy(PyObject *__pyx_v_self, PyObject *__pyx_v_m) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("copy");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_8hermes2d_9_hermes2d_Mesh, 1, "m", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":187
 * 
 *     def copy(self, Mesh m):
 *         self.thisptr.copy(m.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def load(self, char* filename):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->copy(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_m)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.copy");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":189
 *         self.thisptr.copy(m.thisptr)
 * 
 *     def load(self, char* filename):             # <<<<<<<<<<<<<<
 *         cdef c_H2DReader mloader
 *         mloader.load(filename, self.thisptr)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  struct H2DReader __pyx_v_mloader;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("load");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.load");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":191
 *     def load(self, char* filename):
 *         cdef c_H2DReader mloader
 *         mloader.load(filename, self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def load_str(self, char* mesh):
 */
  __pyx_v_mloader.load(__pyx_v_filename, ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":193
 *         mloader.load(filename, self.thisptr)
 * 
 *     def load_str(self, char* mesh):             # <<<<<<<<<<<<<<
 *         cdef c_H2DReader mloader
 *         mloader.load_str(mesh, self.thisptr)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_str(PyObject *__pyx_v_self, PyObject *__pyx_arg_mesh); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_str(PyObject *__pyx_v_self, PyObject *__pyx_arg_mesh) {
  char *__pyx_v_mesh;
  struct H2DReader __pyx_v_mloader;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("load_str");
  assert(__pyx_arg_mesh); {
    __pyx_v_mesh = PyBytes_AsString(__pyx_arg_mesh); if (unlikely((!__pyx_v_mesh) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.load_str");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":195
 *     def load_str(self, char* mesh):
 *         cdef c_H2DReader mloader
 *         mloader.load_str(mesh, self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_mloader.load_str(__pyx_v_mesh, ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":198
 * 
 *     @property
 *     def elements_markers(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the list of elements (as ids), together with their markers.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements_markers(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_elements_markers[] = "\n        Return the list of elements (as ids), together with their markers.\n\n        This is equaivalent to the format of the elements argument to the\n        Mesh.create() method.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements_markers(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_element_list;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("elements_markers");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_element_list = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":205
 *         Mesh.create() method.
 *         """
 *         element_list = []             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_element_list));
  __pyx_v_element_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":206
 *         """
 *         element_list = []
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             element_list.append(el.nodes_vertex_id + [el.marker])
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":207
 *         element_list = []
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             element_list.append(el.nodes_vertex_id + [el.marker])
 *         return element_list
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":208
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             element_list.append(el.nodes_vertex_id + [el.marker])             # <<<<<<<<<<<<<<
 *         return element_list
 * 
 */
    if (unlikely(__pyx_v_element_list == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__nodes_vertex_id); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__marker); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_t_5, ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_6 = PyList_Append(((PyObject *)__pyx_v_element_list), __pyx_t_4); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":209
 *             el = self.get_element(i)
 *             element_list.append(el.nodes_vertex_id + [el.marker])
 *         return element_list             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_element_list));
  __pyx_r = ((PyObject *)__pyx_v_element_list);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.elements_markers");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_element_list);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":212
 * 
 *     @property
 *     def elements(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the list of elements (as ids).
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_elements[] = "\n        Return the list of elements (as ids).\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_element_list;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("elements");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_element_list = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":216
 *         Return the list of elements (as ids).
 *         """
 *         element_list = []             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_element_list));
  __pyx_v_element_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":217
 *         """
 *         element_list = []
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             if el.active:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":218
 *         element_list = []
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             if el.active:
 *                 element_list.append(el.nodes_vertex_id)
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":219
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             if el.active:             # <<<<<<<<<<<<<<
 *                 element_list.append(el.nodes_vertex_id)
 *         return element_list
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__active); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":220
 *             el = self.get_element(i)
 *             if el.active:
 *                 element_list.append(el.nodes_vertex_id)             # <<<<<<<<<<<<<<
 *         return element_list
 * 
 */
      if (unlikely(__pyx_v_element_list == Py_None)) {
        PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
      }
      __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__nodes_vertex_id); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = PyList_Append(((PyObject *)__pyx_v_element_list), __pyx_t_5); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":221
 *             if el.active:
 *                 element_list.append(el.nodes_vertex_id)
 *         return element_list             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_element_list));
  __pyx_r = ((PyObject *)__pyx_v_element_list);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.elements");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_element_list);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":224
 * 
 *     @property
 *     def nodes(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a list of nodes coordinates.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_nodes[] = "\n        Returns a list of nodes coordinates.\n\n        However, this is only usable if you don't refine.\n\n        Use nodes_dict for more usable implementation.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_nodes;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_v_node_dict;
  PyObject *__pyx_v_node;
  PyObject *__pyx_v_nodes_coord;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("nodes");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_nodes = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_node_dict = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_node = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_nodes_coord = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":235
 *         # done for now. Later on, we should get the list of nodes from C++
 *         # directly.
 *         nodes = []             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(__pyx_v_nodes);
  __pyx_v_nodes = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":236
 *         # directly.
 *         nodes = []
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             nodes.extend(el.nodes_vertex)
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":237
 *         nodes = []
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             nodes.extend(el.nodes_vertex)
 *         node_dict = {}
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":238
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             nodes.extend(el.nodes_vertex)             # <<<<<<<<<<<<<<
 *         node_dict = {}
 *         for node in nodes:
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_nodes, __pyx_n_s__extend); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__nodes_vertex); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":239
 *             el = self.get_element(i)
 *             nodes.extend(el.nodes_vertex)
 *         node_dict = {}             # <<<<<<<<<<<<<<
 *         for node in nodes:
 *             node_dict[node.id] = node
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(((PyObject *)__pyx_v_node_dict));
  __pyx_v_node_dict = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":240
 *             nodes.extend(el.nodes_vertex)
 *         node_dict = {}
 *         for node in nodes:             # <<<<<<<<<<<<<<
 *             node_dict[node.id] = node
 *         nodes = node_dict.values()
 */
  if (PyList_CheckExact(__pyx_v_nodes) || PyTuple_CheckExact(__pyx_v_nodes)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_v_nodes; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_nodes); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else {
      __pyx_t_4 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_4) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":241
 *         node_dict = {}
 *         for node in nodes:
 *             node_dict[node.id] = node             # <<<<<<<<<<<<<<
 *         nodes = node_dict.values()
 *         nodes.sort(key=get_node_id)
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__id); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(((PyObject *)__pyx_v_node_dict), __pyx_t_4, __pyx_v_node) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":242
 *         for node in nodes:
 *             node_dict[node.id] = node
 *         nodes = node_dict.values()             # <<<<<<<<<<<<<<
 *         nodes.sort(key=get_node_id)
 *         nodes_coord = [node.coord for node in nodes]
 */
  __pyx_t_3 = PyDict_Values(((PyObject *)__pyx_v_node_dict)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_v_nodes);
  __pyx_v_nodes = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":243
 *             node_dict[node.id] = node
 *         nodes = node_dict.values()
 *         nodes.sort(key=get_node_id)             # <<<<<<<<<<<<<<
 *         nodes_coord = [node.coord for node in nodes]
 *         return nodes_coord
 */
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_nodes, __pyx_n_s__sort); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__get_node_id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__key), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyEval_CallObjectWithKeywords(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":244
 *         nodes = node_dict.values()
 *         nodes.sort(key=get_node_id)
 *         nodes_coord = [node.coord for node in nodes]             # <<<<<<<<<<<<<<
 *         return nodes_coord
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyList_CheckExact(__pyx_v_nodes) || PyTuple_CheckExact(__pyx_v_nodes)) {
    __pyx_t_2 = 0; __pyx_t_4 = __pyx_v_nodes; __Pyx_INCREF(__pyx_t_4);
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_nodes); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_4))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    } else {
      __pyx_t_3 = PyIter_Next(__pyx_t_4);
      if (!__pyx_t_3) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_3;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__coord); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_3); if (unlikely(__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_nodes_coord));
  __pyx_v_nodes_coord = __pyx_t_1;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":245
 *         nodes.sort(key=get_node_id)
 *         nodes_coord = [node.coord for node in nodes]
 *         return nodes_coord             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_nodes_coord));
  __pyx_r = ((PyObject *)__pyx_v_nodes_coord);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.nodes");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_nodes);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF(__pyx_v_node_dict);
  __Pyx_DECREF(__pyx_v_node);
  __Pyx_DECREF(__pyx_v_nodes_coord);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":248
 * 
 *     @property
 *     def nodes_dict(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a dict of all active nodes coordinates.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_nodes_dict[] = "\n        Returns a dict of all active nodes coordinates.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_nodes;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_v_node_dict;
  PyObject *__pyx_v_node;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("nodes_dict");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_nodes = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_node_dict = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_node = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":252
 *         Returns a dict of all active nodes coordinates.
 *         """
 *         nodes = []             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_nodes));
  __pyx_v_nodes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":253
 *         """
 *         nodes = []
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             if el.active:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":254
 *         nodes = []
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             if el.active:
 *                 nodes.extend(el.nodes_vertex)
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":255
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             if el.active:             # <<<<<<<<<<<<<<
 *                 nodes.extend(el.nodes_vertex)
 *         node_dict = {}
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__active); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":256
 *             el = self.get_element(i)
 *             if el.active:
 *                 nodes.extend(el.nodes_vertex)             # <<<<<<<<<<<<<<
 *         node_dict = {}
 *         for node in nodes:
 */
      __pyx_t_5 = PyObject_GetAttr(((PyObject *)__pyx_v_nodes), __pyx_n_s__extend); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__nodes_vertex); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":257
 *             if el.active:
 *                 nodes.extend(el.nodes_vertex)
 *         node_dict = {}             # <<<<<<<<<<<<<<
 *         for node in nodes:
 *             node_dict[node.id] = node.coord
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(((PyObject *)__pyx_v_node_dict));
  __pyx_v_node_dict = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":258
 *                 nodes.extend(el.nodes_vertex)
 *         node_dict = {}
 *         for node in nodes:             # <<<<<<<<<<<<<<
 *             node_dict[node.id] = node.coord
 *         return node_dict
 */
  if (likely(((PyObject *)__pyx_v_nodes) != Py_None)) {
    __pyx_t_2 = 0; __pyx_t_3 = ((PyObject *)__pyx_v_nodes); __Pyx_INCREF(__pyx_t_3);
  } else {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":259
 *         node_dict = {}
 *         for node in nodes:
 *             node_dict[node.id] = node.coord             # <<<<<<<<<<<<<<
 *         return node_dict
 * 
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__coord); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_node, __pyx_n_s__id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(((PyObject *)__pyx_v_node_dict), __pyx_t_1, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":260
 *         for node in nodes:
 *             node_dict[node.id] = node.coord
 *         return node_dict             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_node_dict));
  __pyx_r = ((PyObject *)__pyx_v_node_dict);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.nodes_dict");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_nodes);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF(__pyx_v_node_dict);
  __Pyx_DECREF(__pyx_v_node);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":263
 * 
 *     @property
 *     def curves(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return curves
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_curves(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_curves[] = "\n        Return curves\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_curves(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Element *__pyx_v_e;
  double2 *__pyx_v_tp;
  PyArrayObject *__pyx_v_vec;
  PyObject *__pyx_v_crv;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_v_cm;
  long __pyx_v_j;
  PyObject *__pyx_v_n;
  PyObject *__pyx_v_sp;
  PyObject *__pyx_v_cp;
  PyObject *__pyx_v_ep;
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_point;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  long __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  __Pyx_RefNannySetupContext("curves");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_vec = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_crv = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_cm = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_n = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_sp = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_cp = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_ep = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_x = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_point = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":271
 *         cdef ndarray vec
 * 
 *         crv = {}             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_crv));
  __pyx_v_crv = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":272
 * 
 *         crv = {}
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             if el.active:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":273
 *         crv = {}
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             if el.active:
 *                 cm = el.curved_map
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":274
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             if el.active:             # <<<<<<<<<<<<<<
 *                 cm = el.curved_map
 *                 if cm != None:
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__active); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":275
 *             el = self.get_element(i)
 *             if el.active:
 *                 cm = el.curved_map             # <<<<<<<<<<<<<<
 *                 if cm != None:
 *                     if cm.toplevel == True:
 */
      __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__curved_map); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_v_cm);
      __pyx_v_cm = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":276
 *             if el.active:
 *                 cm = el.curved_map
 *                 if cm != None:             # <<<<<<<<<<<<<<
 *                     if cm.toplevel == True:
 *                         for j in range(4):
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_cm, Py_None, Py_NE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {

        /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":277
 *                 cm = el.curved_map
 *                 if cm != None:
 *                     if cm.toplevel == True:             # <<<<<<<<<<<<<<
 *                         for j in range(4):
 *                             n = cm.get_nurbs(j)
 */
        __pyx_t_5 = PyObject_GetAttr(__pyx_v_cm, __pyx_n_s__toplevel); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_1 = PyObject_RichCompare(__pyx_t_5, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_6) {

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":278
 *                 if cm != None:
 *                     if cm.toplevel == True:
 *                         for j in range(4):             # <<<<<<<<<<<<<<
 *                             n = cm.get_nurbs(j)
 *                             if n != None:
 */
          for (__pyx_t_7 = 0; __pyx_t_7 < 4; __pyx_t_7+=1) {
            __pyx_v_j = __pyx_t_7;

            /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":279
 *                     if cm.toplevel == True:
 *                         for j in range(4):
 *                             n = cm.get_nurbs(j)             # <<<<<<<<<<<<<<
 *                             if n != None:
 *                                 sp = (n.pt[0][0], n.pt[0][1])
 */
            __pyx_t_1 = PyObject_GetAttr(__pyx_v_cm, __pyx_n_s__get_nurbs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_4 = PyInt_FromLong(__pyx_v_j); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_v_n);
            __pyx_v_n = __pyx_t_4;
            __pyx_t_4 = 0;

            /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":280
 *                         for j in range(4):
 *                             n = cm.get_nurbs(j)
 *                             if n != None:             # <<<<<<<<<<<<<<
 *                                 sp = (n.pt[0][0], n.pt[0][1])
 *                                 cp = (n.pt[1][0], n.pt[1][1])
 */
            __pyx_t_4 = PyObject_RichCompare(__pyx_v_n, Py_None, Py_NE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_6) {

              /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":281
 *                             n = cm.get_nurbs(j)
 *                             if n != None:
 *                                 sp = (n.pt[0][0], n.pt[0][1])             # <<<<<<<<<<<<<<
 *                                 cp = (n.pt[1][0], n.pt[1][1])
 *                                 ep = (n.pt[2][0], n.pt[2][1])
 */
              __pyx_t_4 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
              __Pyx_GIVEREF(__pyx_t_4);
              PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
              __Pyx_GIVEREF(__pyx_t_5);
              __pyx_t_4 = 0;
              __pyx_t_5 = 0;
              if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_DECREF(((PyObject *)__pyx_v_sp));
              __pyx_v_sp = ((PyObject *)__pyx_t_1);
              __pyx_t_1 = 0;

              /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":282
 *                             if n != None:
 *                                 sp = (n.pt[0][0], n.pt[0][1])
 *                                 cp = (n.pt[1][0], n.pt[1][1])             # <<<<<<<<<<<<<<
 *                                 ep = (n.pt[2][0], n.pt[2][1])
 *                                 crv[i] = []
 */
              __pyx_t_1 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
              __Pyx_GIVEREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
              __Pyx_GIVEREF(__pyx_t_5);
              __pyx_t_1 = 0;
              __pyx_t_5 = 0;
              if (!(likely(PyTuple_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_4)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_DECREF(((PyObject *)__pyx_v_cp));
              __pyx_v_cp = ((PyObject *)__pyx_t_4);
              __pyx_t_4 = 0;

              /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":283
 *                                 sp = (n.pt[0][0], n.pt[0][1])
 *                                 cp = (n.pt[1][0], n.pt[1][1])
 *                                 ep = (n.pt[2][0], n.pt[2][1])             # <<<<<<<<<<<<<<
 *                                 crv[i] = []
 *                                 crv[i].append([sp, cp, ep])
 */
              __pyx_t_4 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = PyObject_GetAttr(__pyx_v_n, __pyx_n_s__pt); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
              __Pyx_GIVEREF(__pyx_t_4);
              PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
              __Pyx_GIVEREF(__pyx_t_5);
              __pyx_t_4 = 0;
              __pyx_t_5 = 0;
              if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_DECREF(((PyObject *)__pyx_v_ep));
              __pyx_v_ep = ((PyObject *)__pyx_t_1);
              __pyx_t_1 = 0;

              /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":284
 *                                 cp = (n.pt[1][0], n.pt[1][1])
 *                                 ep = (n.pt[2][0], n.pt[2][1])
 *                                 crv[i] = []             # <<<<<<<<<<<<<<
 *                                 crv[i].append([sp, cp, ep])
 *                     else:
 */
              __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(((PyObject *)__pyx_t_1));
              if (PyDict_SetItem(((PyObject *)__pyx_v_crv), __pyx_v_i, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

              /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":285
 *                                 ep = (n.pt[2][0], n.pt[2][1])
 *                                 crv[i] = []
 *                                 crv[i].append([sp, cp, ep])             # <<<<<<<<<<<<<<
 *                     else:
 *                         e = el
 */
              __pyx_t_1 = __Pyx_PyDict_GetItem(((PyObject *)__pyx_v_crv), __pyx_v_i); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(((PyObject *)__pyx_t_5));
              __Pyx_INCREF(((PyObject *)__pyx_v_sp));
              PyList_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_sp));
              __Pyx_GIVEREF(((PyObject *)__pyx_v_sp));
              __Pyx_INCREF(((PyObject *)__pyx_v_cp));
              PyList_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_cp));
              __Pyx_GIVEREF(((PyObject *)__pyx_v_cp));
              __Pyx_INCREF(((PyObject *)__pyx_v_ep));
              PyList_SET_ITEM(__pyx_t_5, 2, ((PyObject *)__pyx_v_ep));
              __Pyx_GIVEREF(((PyObject *)__pyx_v_ep));
              __pyx_t_4 = __Pyx_PyObject_Append(__pyx_t_1, ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L12;
            }
            __pyx_L12:;
          }
          goto __pyx_L9;
        }
        /*else*/ {

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":287
 *                                 crv[i].append([sp, cp, ep])
 *                     else:
 *                         e = el             # <<<<<<<<<<<<<<
 *                         tp = transform(e.thisptr)
 *                         vec = c2numpy_double(<double *>tp, 2*5)
 */
          if (!(likely(((__pyx_v_el) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_el, __pyx_ptype_8hermes2d_9_hermes2d_Element))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_INCREF(__pyx_v_el);
          __Pyx_DECREF(((PyObject *)__pyx_v_e));
          __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_v_el);

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":288
 *                     else:
 *                         e = el
 *                         tp = transform(e.thisptr)             # <<<<<<<<<<<<<<
 *                         vec = c2numpy_double(<double *>tp, 2*5)
 *                         crv[i] = []
 */
          __pyx_v_tp = transform(__pyx_v_e->thisptr);

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":289
 *                         e = el
 *                         tp = transform(e.thisptr)
 *                         vec = c2numpy_double(<double *>tp, 2*5)             # <<<<<<<<<<<<<<
 *                         crv[i] = []
 *                         x = []
 */
          __pyx_t_4 = c2numpy_double(((double *)__pyx_v_tp), 10); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_4);
          if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(((PyObject *)__pyx_v_vec));
          __pyx_v_vec = ((PyArrayObject *)__pyx_t_4);
          __pyx_t_4 = 0;

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":290
 *                         tp = transform(e.thisptr)
 *                         vec = c2numpy_double(<double *>tp, 2*5)
 *                         crv[i] = []             # <<<<<<<<<<<<<<
 *                         x = []
 *                         for point in vec.reshape((5, 2)):
 */
          __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(((PyObject *)__pyx_t_4));
          if (PyDict_SetItem(((PyObject *)__pyx_v_crv), __pyx_v_i, ((PyObject *)__pyx_t_4)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":291
 *                         vec = c2numpy_double(<double *>tp, 2*5)
 *                         crv[i] = []
 *                         x = []             # <<<<<<<<<<<<<<
 *                         for point in vec.reshape((5, 2)):
 *                             x.append((point[0], point[1]))
 */
          __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(((PyObject *)__pyx_t_4));
          __Pyx_DECREF(((PyObject *)__pyx_v_x));
          __pyx_v_x = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":292
 *                         crv[i] = []
 *                         x = []
 *                         for point in vec.reshape((5, 2)):             # <<<<<<<<<<<<<<
 *                             x.append((point[0], point[1]))
 *                         crv[i].append(x)
 */
          __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_INCREF(__pyx_int_5);
          PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_int_5);
          __Pyx_GIVEREF(__pyx_int_5);
          __Pyx_INCREF(__pyx_int_2);
          PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_2);
          __Pyx_GIVEREF(__pyx_int_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_5);
          __pyx_t_5 = 0;
          __pyx_t_5 = PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (PyList_CheckExact(__pyx_t_5) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_8 = 0; __pyx_t_1 = __pyx_t_5; __Pyx_INCREF(__pyx_t_1);
          } else {
            __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(PyList_CheckExact(__pyx_t_1))) {
              if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
              __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++;
            } else if (likely(PyTuple_CheckExact(__pyx_t_1))) {
              if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
              __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++;
            } else {
              __pyx_t_5 = PyIter_Next(__pyx_t_1);
              if (!__pyx_t_5) {
                if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_DECREF(__pyx_v_point);
            __pyx_v_point = __pyx_t_5;
            __pyx_t_5 = 0;

            /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":293
 *                         x = []
 *                         for point in vec.reshape((5, 2)):
 *                             x.append((point[0], point[1]))             # <<<<<<<<<<<<<<
 *                         crv[i].append(x)
 *         print crv
 */
            if (unlikely(__pyx_v_x == Py_None)) {
              PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
            }
            __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_point, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_point, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_9);
            PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_5);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_4);
            __Pyx_GIVEREF(__pyx_t_4);
            __pyx_t_5 = 0;
            __pyx_t_4 = 0;
            __pyx_t_10 = PyList_Append(((PyObject *)__pyx_v_x), __pyx_t_9); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":294
 *                         for point in vec.reshape((5, 2)):
 *                             x.append((point[0], point[1]))
 *                         crv[i].append(x)             # <<<<<<<<<<<<<<
 *         print crv
 *         return crv
 */
          __pyx_t_1 = __Pyx_PyDict_GetItem(((PyObject *)__pyx_v_crv), __pyx_v_i); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_9 = __Pyx_PyObject_Append(__pyx_t_1, ((PyObject *)__pyx_v_x)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __pyx_L9:;
        goto __pyx_L8;
      }
      __pyx_L8:;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":295
 *                             x.append((point[0], point[1]))
 *                         crv[i].append(x)
 *         print crv             # <<<<<<<<<<<<<<
 *         return crv
 * 
 */
  if (__Pyx_PrintOne(0, ((PyObject *)__pyx_v_crv)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":296
 *                         crv[i].append(x)
 *         print crv
 *         return crv             # <<<<<<<<<<<<<<
 * 
 *     def get_polygonal_boundary(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_crv));
  __pyx_r = ((PyObject *)__pyx_v_crv);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.curves");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_e);
  __Pyx_DECREF((PyObject *)__pyx_v_vec);
  __Pyx_DECREF(__pyx_v_crv);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF(__pyx_v_cm);
  __Pyx_DECREF(__pyx_v_n);
  __Pyx_DECREF(__pyx_v_sp);
  __Pyx_DECREF(__pyx_v_cp);
  __Pyx_DECREF(__pyx_v_ep);
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_point);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":298
 *         return crv
 * 
 *     def get_polygonal_boundary(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the polygonal approximation of boundaries of all elements.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_polygonal_boundary(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_get_polygonal_boundary[] = "\n        Return the polygonal approximation of boundaries of all elements.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_polygonal_boundary(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Element *__pyx_v_e;
  double2 *__pyx_v_tp;
  int __pyx_v_npoints;
  PyArrayObject *__pyx_v_vec;
  PyObject *__pyx_v_crv;
  PyObject *__pyx_v_i;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("get_polygonal_boundary");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_vec = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_crv = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":307
 *         cdef ndarray vec
 * 
 *         crv = {}             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             e = self.get_element(i)
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_crv));
  __pyx_v_crv = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":308
 * 
 *         crv = {}
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             e = self.get_element(i)
 *             if e.active:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":309
 *         crv = {}
 *         for i in range(self.num_elements):
 *             e = self.get_element(i)             # <<<<<<<<<<<<<<
 *             if e.active:
 *                 element_polygonal_boundary(e.thisptr, &tp, &npoints)
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_8hermes2d_9_hermes2d_Element))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_e));
    __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":310
 *         for i in range(self.num_elements):
 *             e = self.get_element(i)
 *             if e.active:             # <<<<<<<<<<<<<<
 *                 element_polygonal_boundary(e.thisptr, &tp, &npoints)
 *                 vec = c2numpy_double(<double *>tp, 2*npoints)
 */
    __pyx_t_5 = PyObject_GetAttr(((PyObject *)__pyx_v_e), __pyx_n_s__active); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":311
 *             e = self.get_element(i)
 *             if e.active:
 *                 element_polygonal_boundary(e.thisptr, &tp, &npoints)             # <<<<<<<<<<<<<<
 *                 vec = c2numpy_double(<double *>tp, 2*npoints)
 *                 crv[e.id] = vec.reshape((npoints, 2))
 */
      element_polygonal_boundary(__pyx_v_e->thisptr, (&__pyx_v_tp), (&__pyx_v_npoints));

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":312
 *             if e.active:
 *                 element_polygonal_boundary(e.thisptr, &tp, &npoints)
 *                 vec = c2numpy_double(<double *>tp, 2*npoints)             # <<<<<<<<<<<<<<
 *                 crv[e.id] = vec.reshape((npoints, 2))
 *         return crv
 */
      __pyx_t_5 = c2numpy_double(((double *)__pyx_v_tp), (2 * __pyx_v_npoints)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_vec));
      __pyx_v_vec = ((PyArrayObject *)__pyx_t_5);
      __pyx_t_5 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":313
 *                 element_polygonal_boundary(e.thisptr, &tp, &npoints)
 *                 vec = c2numpy_double(<double *>tp, 2*npoints)
 *                 crv[e.id] = vec.reshape((npoints, 2))             # <<<<<<<<<<<<<<
 *         return crv
 * 
 */
      __pyx_t_5 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_npoints); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_e), __pyx_n_s__id); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(((PyObject *)__pyx_v_crv), __pyx_t_4, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":314
 *                 vec = c2numpy_double(<double *>tp, 2*npoints)
 *                 crv[e.id] = vec.reshape((npoints, 2))
 *         return crv             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_crv));
  __pyx_r = ((PyObject *)__pyx_v_crv);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.get_polygonal_boundary");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_e);
  __Pyx_DECREF((PyObject *)__pyx_v_vec);
  __Pyx_DECREF(__pyx_v_crv);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":317
 * 
 *     @property
 *     def num_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_elements()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_elements");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":318
 *     @property
 *     def num_elements(self):
 *         return self.thisptr.get_num_elements()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->get_num_elements()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.num_elements");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":321
 * 
 *     @property
 *     def num_base_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_base_elements()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_base_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_base_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_base_elements");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":322
 *     @property
 *     def num_base_elements(self):
 *         return self.thisptr.get_num_base_elements()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->get_num_base_elements()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.num_base_elements");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":325
 * 
 *     @property
 *     def num_active_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_active_elements()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_active_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_active_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("num_active_elements");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":326
 *     @property
 *     def num_active_elements(self):
 *         return self.thisptr.get_num_active_elements()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->get_num_active_elements()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.num_active_elements");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":329
 * 
 *     @property
 *     def max_element_id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_max_element_id()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_max_element_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_max_element_id(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("max_element_id");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":330
 *     @property
 *     def max_element_id(self):
 *         return self.thisptr.get_max_element_id()             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->get_max_element_id()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.max_element_id");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":332
 *         return self.thisptr.get_max_element_id()
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "Mesh with %d elements: active=%d, base=%d, max_id=%d" % \
 *                 (self.num_elements, self.num_active_elements,
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh___str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh___str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__str__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":333
 * 
 *     def __str__(self):
 *         return "Mesh with %d elements: active=%d, base=%d, max_id=%d" % \             # <<<<<<<<<<<<<<
 *                 (self.num_elements, self.num_active_elements,
 *                         self.num_base_elements, self.max_element_id)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":334
 *     def __str__(self):
 *         return "Mesh with %d elements: active=%d, base=%d, max_id=%d" % \
 *                 (self.num_elements, self.num_active_elements,             # <<<<<<<<<<<<<<
 *                         self.num_base_elements, self.max_element_id)
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_active_elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":335
 *         return "Mesh with %d elements: active=%d, base=%d, max_id=%d" % \
 *                 (self.num_elements, self.num_active_elements,
 *                         self.num_base_elements, self.max_element_id)             # <<<<<<<<<<<<<<
 * 
 *     def load_hermes(self, char* filename):
 */
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_base_elements); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__max_element_id); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_5), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":337
 *                         self.num_base_elements, self.max_element_id)
 * 
 *     def load_hermes(self, char* filename):             # <<<<<<<<<<<<<<
 *         """
 *         Loads a mesh (in the hermes format) from a file.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_hermes(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_load_hermes[] = "\n        Loads a mesh (in the hermes format) from a file.\n\n        This uses a pure Python reader. If you want to use the C++ flex reader,\n        use load().\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_hermes(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_v_read_hermes_format;
  PyObject *__pyx_v_nodes;
  PyObject *__pyx_v_elements;
  PyObject *__pyx_v_boundary;
  PyObject *__pyx_v_nurbs;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("load_hermes");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.load_hermes");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_read_hermes_format = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_nodes = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_elements = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_boundary = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_nurbs = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":344
 *         use load().
 *         """
 *         from mesh import read_hermes_format             # <<<<<<<<<<<<<<
 *         nodes, elements, boundary, nurbs = \
 *                 read_hermes_format(filename)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__read_hermes_format));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__read_hermes_format));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__read_hermes_format));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__mesh), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__read_hermes_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_read_hermes_format);
  __pyx_v_read_hermes_format = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":346
 *         from mesh import read_hermes_format
 *         nodes, elements, boundary, nurbs = \
 *                 read_hermes_format(filename)             # <<<<<<<<<<<<<<
 *         self.create(nodes, elements, boundary, nurbs)
 * 
 */
  __pyx_t_2 = PyBytes_FromString(__pyx_v_filename); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_v_read_hermes_format, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyTuple_CheckExact(__pyx_t_2) && likely(PyTuple_GET_SIZE(__pyx_t_2) == 4)) {
    PyObject* tuple = __pyx_t_2;
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_GET_ITEM(tuple, 3); __Pyx_INCREF(__pyx_t_5);

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":345
 *         """
 *         from mesh import read_hermes_format
 *         nodes, elements, boundary, nurbs = \             # <<<<<<<<<<<<<<
 *                 read_hermes_format(filename)
 *         self.create(nodes, elements, boundary, nurbs)
 */
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_nodes);
    __pyx_v_nodes = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_elements);
    __pyx_v_elements = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_boundary);
    __pyx_v_boundary = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_nurbs);
    __pyx_v_nurbs = __pyx_t_5;
    __pyx_t_5 = 0;
  } else {
    __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_UnpackItem(__pyx_t_6, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_UnpackItem(__pyx_t_6, 1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_UnpackItem(__pyx_t_6, 2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_UnpackItem(__pyx_t_6, 3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__Pyx_EndUnpack(__pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_v_nodes);
    __pyx_v_nodes = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_elements);
    __pyx_v_elements = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_boundary);
    __pyx_v_boundary = __pyx_t_4;
    __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_nurbs);
    __pyx_v_nurbs = __pyx_t_5;
    __pyx_t_5 = 0;
  }

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":347
 *         nodes, elements, boundary, nurbs = \
 *                 read_hermes_format(filename)
 *         self.create(nodes, elements, boundary, nurbs)             # <<<<<<<<<<<<<<
 * 
 *     def get_elements_order(self, space):
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__create); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_nodes);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_nodes);
  __Pyx_GIVEREF(__pyx_v_nodes);
  __Pyx_INCREF(__pyx_v_elements);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_elements);
  __Pyx_GIVEREF(__pyx_v_elements);
  __Pyx_INCREF(__pyx_v_boundary);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_boundary);
  __Pyx_GIVEREF(__pyx_v_boundary);
  __Pyx_INCREF(__pyx_v_nurbs);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_v_nurbs);
  __Pyx_GIVEREF(__pyx_v_nurbs);
  __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.load_hermes");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_read_hermes_format);
  __Pyx_DECREF(__pyx_v_nodes);
  __Pyx_DECREF(__pyx_v_elements);
  __Pyx_DECREF(__pyx_v_boundary);
  __Pyx_DECREF(__pyx_v_nurbs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":349
 *         self.create(nodes, elements, boundary, nurbs)
 * 
 *     def get_elements_order(self, space):             # <<<<<<<<<<<<<<
 *         """
 *         Returns list of orders
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_elements_order(PyObject *__pyx_v_self, PyObject *__pyx_v_space); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_get_elements_order[] = "\n        Returns list of orders\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_elements_order(PyObject *__pyx_v_self, PyObject *__pyx_v_space) {
  PyObject *__pyx_v_orders_list;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_el;
  PyObject *__pyx_v_order;
  PyObject *__pyx_v_h;
  PyObject *__pyx_v_v;
  PyObject *__pyx_v_math;
  PyObject *__pyx_v_ord;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("get_elements_order");
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_v_space);
  __pyx_v_orders_list = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_order = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_h = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_v = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_math = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_ord = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":353
 *         Returns list of orders
 *         """
 *         orders_list = {}             # <<<<<<<<<<<<<<
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_orders_list));
  __pyx_v_orders_list = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":354
 *         """
 *         orders_list = {}
 *         for i in range(self.num_elements):             # <<<<<<<<<<<<<<
 *             el = self.get_element(i)
 *             if el.active:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = 0; __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
  } else {
    __pyx_t_2 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_3))) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++;
    } else {
      __pyx_t_1 = PyIter_Next(__pyx_t_3);
      if (!__pyx_t_1) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_DECREF(__pyx_v_i);
    __pyx_v_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":355
 *         orders_list = {}
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)             # <<<<<<<<<<<<<<
 *             if el.active:
 *                 order = space.get_element_order(i)
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_element); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":356
 *         for i in range(self.num_elements):
 *             el = self.get_element(i)
 *             if el.active:             # <<<<<<<<<<<<<<
 *                 order = space.get_element_order(i)
 *                 h = order & ((1 << 5) - 1)
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__active); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":357
 *             el = self.get_element(i)
 *             if el.active:
 *                 order = space.get_element_order(i)             # <<<<<<<<<<<<<<
 *                 h = order & ((1 << 5) - 1)
 *                 v = order >> 5
 */
      __pyx_t_5 = PyObject_GetAttr(__pyx_v_space, __pyx_n_s__get_element_order); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      __pyx_t_1 = PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_v_order);
      __pyx_v_order = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":358
 *             if el.active:
 *                 order = space.get_element_order(i)
 *                 h = order & ((1 << 5) - 1)             # <<<<<<<<<<<<<<
 *                 v = order >> 5
 * 
 */
      __pyx_t_1 = PyNumber_And(__pyx_v_order, __pyx_int_31); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_h);
      __pyx_v_h = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":359
 *                 order = space.get_element_order(i)
 *                 h = order & ((1 << 5) - 1)
 *                 v = order >> 5             # <<<<<<<<<<<<<<
 * 
 *                 import math
 */
      __pyx_t_1 = PyNumber_Rshift(__pyx_v_order, __pyx_int_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_v);
      __pyx_v_v = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":361
 *                 v = order >> 5
 * 
 *                 import math             # <<<<<<<<<<<<<<
 *                 # This uses the maximum of "h", "v", as we can't yet plot
 *                 # anisotropic polynomial degrees
 */
      __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__math), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_math);
      __pyx_v_math = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":364
 *                 # This uses the maximum of "h", "v", as we can't yet plot
 *                 # anisotropic polynomial degrees
 *                 ord = max(h, v)             # <<<<<<<<<<<<<<
 *                 #ord = int(((h+v)/2.0))
 *                 if ord == 0:
 */
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_h);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_h);
      __Pyx_GIVEREF(__pyx_v_h);
      __Pyx_INCREF(__pyx_v_v);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_v);
      __Pyx_GIVEREF(__pyx_v_v);
      __pyx_t_4 = PyObject_Call(__pyx_builtin_max, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_ord);
      __pyx_v_ord = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":366
 *                 ord = max(h, v)
 *                 #ord = int(((h+v)/2.0))
 *                 if ord == 0:             # <<<<<<<<<<<<<<
 *                     ord = 1
 * 
 */
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_ord, __pyx_int_0, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {

        /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":367
 *                 #ord = int(((h+v)/2.0))
 *                 if ord == 0:
 *                     ord = 1             # <<<<<<<<<<<<<<
 * 
 *                 #orders_list.append(int(((h+v)/2.0)))
 */
        __Pyx_INCREF(__pyx_int_1);
        __Pyx_DECREF(__pyx_v_ord);
        __pyx_v_ord = __pyx_int_1;
        goto __pyx_L8;
      }
      __pyx_L8:;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":370
 * 
 *                 #orders_list.append(int(((h+v)/2.0)))
 *                 orders_list[el.id] = ord             # <<<<<<<<<<<<<<
 * 
 *         return orders_list
 */
      __pyx_t_4 = PyObject_GetAttr(__pyx_v_el, __pyx_n_s__id); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(((PyObject *)__pyx_v_orders_list), __pyx_t_4, __pyx_v_ord) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":372
 *                 orders_list[el.id] = ord
 * 
 *         return orders_list             # <<<<<<<<<<<<<<
 * 
 *     def create(self, nodes, elements, boundary, nurbs):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_orders_list));
  __pyx_r = ((PyObject *)__pyx_v_orders_list);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.get_elements_order");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_orders_list);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF(__pyx_v_order);
  __Pyx_DECREF(__pyx_v_h);
  __Pyx_DECREF(__pyx_v_v);
  __Pyx_DECREF(__pyx_v_math);
  __Pyx_DECREF(__pyx_v_ord);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_DECREF(__pyx_v_space);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":374
 *         return orders_list
 * 
 *     def create(self, nodes, elements, boundary, nurbs):             # <<<<<<<<<<<<<<
 *         """
 *         Creates a mesh from a list of nodes, elements, boundary and nurbs.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_create(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_create[] = "\n        Creates a mesh from a list of nodes, elements, boundary and nurbs.\n\n        Example:\n\n        >>> import hermes2d\n        >>> m = hermes2d.Mesh()\n        >>> m.create([\n        ...         [0, -1],\n        ...         [1, -1],\n        ...         [-1, 0],\n        ...         [0, 0],\n        ...         [1, 0],\n        ...         [-1, 1],\n        ...         [0, 1],\n        ...         [0.707106781, 0.707106781],\n        ...     ], [\n        ...         [0, 1, 4, 3, 0],\n        ...         [3, 4, 7, 0],\n        ...         [3, 7, 6, 0],\n        ...         [2, 3, 6, 5, 0],\n        ...     ], [\n        ...         [0, 1, 1],\n        ...         [1, 4, 2],\n        ...         [3, 0, 4],\n        ...         [4, 7, 2],\n        ...         [7, 6, 2],\n        ...         [2, 3, 4],\n        ...         [6, 5, 2],\n        ...         [5, 2, 3],\n        ...     ], [\n        ...         [4, 7, 45],\n        ...         [7, 6, 45],\n        ...     ])\n\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_create(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nodes = 0;
  PyObject *__pyx_v_elements = 0;
  PyObject *__pyx_v_boundary = 0;
  PyObject *__pyx_v_nurbs = 0;
  PyObject *__pyx_v_m;
  PyObject *__pyx_v_node;
  PyObject *__pyx_v_el;
  PyObject *__pyx_v_b;
  PyObject *__pyx_v_n;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__nodes,&__pyx_n_s__elements,&__pyx_n_s__boundary,&__pyx_n_s__nurbs,0};
  __Pyx_RefNannySetupContext("create");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__nodes);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__elements);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("create", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__boundary);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("create", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__nurbs);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("create", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "create") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_nodes = values[0];
    __pyx_v_elements = values[1];
    __pyx_v_boundary = values[2];
    __pyx_v_nurbs = values[3];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_nodes = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_elements = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_boundary = PyTuple_GET_ITEM(__pyx_args, 2);
    __pyx_v_nurbs = PyTuple_GET_ITEM(__pyx_args, 3);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.create");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_v_nodes);
  __Pyx_INCREF(__pyx_v_elements);
  __Pyx_INCREF(__pyx_v_boundary);
  __Pyx_INCREF(__pyx_v_nurbs);
  __pyx_v_m = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_node = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_el = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_b = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_n = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":411
 * 
 *         """
 *         if boundary is None:             # <<<<<<<<<<<<<<
 *             boundary = []
 *         if nurbs is None:
 */
  __pyx_t_1 = (__pyx_v_boundary == Py_None);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":412
 *         """
 *         if boundary is None:
 *             boundary = []             # <<<<<<<<<<<<<<
 *         if nurbs is None:
 *             nurbs = []
 */
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_DECREF(__pyx_v_boundary);
    __pyx_v_boundary = ((PyObject *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":413
 *         if boundary is None:
 *             boundary = []
 *         if nurbs is None:             # <<<<<<<<<<<<<<
 *             nurbs = []
 *         m = "1 0\n"
 */
  __pyx_t_1 = (__pyx_v_nurbs == Py_None);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":414
 *             boundary = []
 *         if nurbs is None:
 *             nurbs = []             # <<<<<<<<<<<<<<
 *         m = "1 0\n"
 *         m += "%d\n" % len(nodes)
 */
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_DECREF(__pyx_v_nurbs);
    __pyx_v_nurbs = ((PyObject *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":415
 *         if nurbs is None:
 *             nurbs = []
 *         m = "1 0\n"             # <<<<<<<<<<<<<<
 *         m += "%d\n" % len(nodes)
 *         for node in nodes:
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = __pyx_kp_s_6;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":416
 *             nurbs = []
 *         m = "1 0\n"
 *         m += "%d\n" % len(nodes)             # <<<<<<<<<<<<<<
 *         for node in nodes:
 *             m += "%f %f\n" % tuple(node)
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_nodes); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_7), __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyString_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_2)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":417
 *         m = "1 0\n"
 *         m += "%d\n" % len(nodes)
 *         for node in nodes:             # <<<<<<<<<<<<<<
 *             m += "%f %f\n" % tuple(node)
 *         m += "%d\n" % len(elements)
 */
  if (PyList_CheckExact(__pyx_v_nodes) || PyTuple_CheckExact(__pyx_v_nodes)) {
    __pyx_t_3 = 0; __pyx_t_2 = __pyx_v_nodes; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_nodes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++;
    } else {
      __pyx_t_4 = PyIter_Next(__pyx_t_2);
      if (!__pyx_t_4) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_DECREF(__pyx_v_node);
    __pyx_v_node = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":418
 *         m += "%d\n" % len(nodes)
 *         for node in nodes:
 *             m += "%f %f\n" % tuple(node)             # <<<<<<<<<<<<<<
 *         m += "%d\n" % len(elements)
 *         for el in elements:
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_node);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_node);
    __Pyx_GIVEREF(__pyx_v_node);
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)&PyTuple_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_8), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (!(likely(PyString_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_5)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_m));
    __pyx_v_m = ((PyObject *)__pyx_t_5);
    __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":419
 *         for node in nodes:
 *             m += "%f %f\n" % tuple(node)
 *         m += "%d\n" % len(elements)             # <<<<<<<<<<<<<<
 *         for el in elements:
 *             m += ("%d "*len(el)) % tuple(el)
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_elements); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_7), __pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyString_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_2)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":420
 *             m += "%f %f\n" % tuple(node)
 *         m += "%d\n" % len(elements)
 *         for el in elements:             # <<<<<<<<<<<<<<
 *             m += ("%d "*len(el)) % tuple(el)
 *             m += "\n"
 */
  if (PyList_CheckExact(__pyx_v_elements) || PyTuple_CheckExact(__pyx_v_elements)) {
    __pyx_t_3 = 0; __pyx_t_2 = __pyx_v_elements; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++;
    } else {
      __pyx_t_5 = PyIter_Next(__pyx_t_2);
      if (!__pyx_t_5) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_DECREF(__pyx_v_el);
    __pyx_v_el = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":421
 *         m += "%d\n" % len(elements)
 *         for el in elements:
 *             m += ("%d "*len(el)) % tuple(el)             # <<<<<<<<<<<<<<
 *             m += "\n"
 *         m += "%d\n" % len(boundary)
 */
    __pyx_t_6 = PyObject_Length(__pyx_v_el); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Multiply(((PyObject *)__pyx_kp_s_9), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_el);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_el);
    __Pyx_GIVEREF(__pyx_v_el);
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)&PyTuple_Type)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_t_4), __pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (!(likely(PyString_CheckExact(__pyx_t_7))||((__pyx_t_7) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_7)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_m));
    __pyx_v_m = ((PyObject *)__pyx_t_7);
    __pyx_t_7 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":422
 *         for el in elements:
 *             m += ("%d "*len(el)) % tuple(el)
 *             m += "\n"             # <<<<<<<<<<<<<<
 *         m += "%d\n" % len(boundary)
 *         for b in boundary:
 */
    __pyx_t_7 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_kp_s_10)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (!(likely(PyString_CheckExact(__pyx_t_7))||((__pyx_t_7) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_7)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_m));
    __pyx_v_m = ((PyObject *)__pyx_t_7);
    __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":423
 *             m += ("%d "*len(el)) % tuple(el)
 *             m += "\n"
 *         m += "%d\n" % len(boundary)             # <<<<<<<<<<<<<<
 *         for b in boundary:
 *             m += "%d %d %d\n" % tuple(b)
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_boundary); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_7), __pyx_t_2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_7)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyString_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_2)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":424
 *             m += "\n"
 *         m += "%d\n" % len(boundary)
 *         for b in boundary:             # <<<<<<<<<<<<<<
 *             m += "%d %d %d\n" % tuple(b)
 *         m += "%d\n" % len(nurbs)
 */
  if (PyList_CheckExact(__pyx_v_boundary) || PyTuple_CheckExact(__pyx_v_boundary)) {
    __pyx_t_3 = 0; __pyx_t_2 = __pyx_v_boundary; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_boundary); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_7); __pyx_t_3++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_7); __pyx_t_3++;
    } else {
      __pyx_t_7 = PyIter_Next(__pyx_t_2);
      if (!__pyx_t_7) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_DECREF(__pyx_v_b);
    __pyx_v_b = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":425
 *         m += "%d\n" % len(boundary)
 *         for b in boundary:
 *             m += "%d %d %d\n" % tuple(b)             # <<<<<<<<<<<<<<
 *         m += "%d\n" % len(nurbs)
 *         for n in nurbs:
 */
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_b);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_b);
    __Pyx_GIVEREF(__pyx_v_b);
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)&PyTuple_Type)), __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_11), __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_7)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (!(likely(PyString_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_5)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_m));
    __pyx_v_m = ((PyObject *)__pyx_t_5);
    __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":426
 *         for b in boundary:
 *             m += "%d %d %d\n" % tuple(b)
 *         m += "%d\n" % len(nurbs)             # <<<<<<<<<<<<<<
 *         for n in nurbs:
 *             m += "%d %d\n0\n%f\n" % tuple(n)
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_nurbs); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_7), __pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyString_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_2)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":427
 *             m += "%d %d %d\n" % tuple(b)
 *         m += "%d\n" % len(nurbs)
 *         for n in nurbs:             # <<<<<<<<<<<<<<
 *             m += "%d %d\n0\n%f\n" % tuple(n)
 *         m += "0\n"
 */
  if (PyList_CheckExact(__pyx_v_nurbs) || PyTuple_CheckExact(__pyx_v_nurbs)) {
    __pyx_t_3 = 0; __pyx_t_2 = __pyx_v_nurbs; __Pyx_INCREF(__pyx_t_2);
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_nurbs); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  }
  for (;;) {
    if (likely(PyList_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++;
    } else if (likely(PyTuple_CheckExact(__pyx_t_2))) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++;
    } else {
      __pyx_t_5 = PyIter_Next(__pyx_t_2);
      if (!__pyx_t_5) {
        if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_DECREF(__pyx_v_n);
    __pyx_v_n = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":428
 *         m += "%d\n" % len(nurbs)
 *         for n in nurbs:
 *             m += "%d %d\n0\n%f\n" % tuple(n)             # <<<<<<<<<<<<<<
 *         m += "0\n"
 *         self.load_str(m)
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_n);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_n);
    __Pyx_GIVEREF(__pyx_v_n);
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)&PyTuple_Type)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_12), __pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (!(likely(PyString_CheckExact(__pyx_t_7))||((__pyx_t_7) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_7)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_m));
    __pyx_v_m = ((PyObject *)__pyx_t_7);
    __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":429
 *         for n in nurbs:
 *             m += "%d %d\n0\n%f\n" % tuple(n)
 *         m += "0\n"             # <<<<<<<<<<<<<<
 *         self.load_str(m)
 * 
 */
  __pyx_t_2 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_m), ((PyObject *)__pyx_kp_s_13)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(PyString_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected str, got %.200s", Py_TYPE(__pyx_t_2)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_v_m));
  __pyx_v_m = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":430
 *             m += "%d %d\n0\n%f\n" % tuple(n)
 *         m += "0\n"
 *         self.load_str(m)             # <<<<<<<<<<<<<<
 * 
 *     def save(self, char* filename):
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__load_str); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_INCREF(((PyObject *)__pyx_v_m));
  PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)__pyx_v_m));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_m));
  __pyx_t_5 = PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.create");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_m);
  __Pyx_DECREF(__pyx_v_node);
  __Pyx_DECREF(__pyx_v_el);
  __Pyx_DECREF(__pyx_v_b);
  __Pyx_DECREF(__pyx_v_n);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_DECREF(__pyx_v_nodes);
  __Pyx_DECREF(__pyx_v_elements);
  __Pyx_DECREF(__pyx_v_boundary);
  __Pyx_DECREF(__pyx_v_nurbs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":432
 *         self.load_str(m)
 * 
 *     def save(self, char* filename):             # <<<<<<<<<<<<<<
 *         self.thisptr.save(filename)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_save(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_save(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.save");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":433
 * 
 *     def save(self, char* filename):
 *         self.thisptr.save(filename)             # <<<<<<<<<<<<<<
 * 
 *     def refine_element(self, int id, int refinement=0):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->save(__pyx_v_filename);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":435
 *         self.thisptr.save(filename)
 * 
 *     def refine_element(self, int id, int refinement=0):             # <<<<<<<<<<<<<<
 *         self.thisptr.refine_element(id, refinement)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_element(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_element(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_id;
  int __pyx_v_refinement;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__id,&__pyx_n_s__refinement,0};
  __Pyx_RefNannySetupContext("refine_element");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__id);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__refinement);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "refine_element") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_id = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_refinement = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_refinement == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_refinement = ((int)0);
    }
  } else {
    __pyx_v_refinement = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_refinement = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_refinement == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_id = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("refine_element", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.refine_element");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":436
 * 
 *     def refine_element(self, int id, int refinement=0):
 *         self.thisptr.refine_element(id, refinement)             # <<<<<<<<<<<<<<
 * 
 *     def refine_all_elements(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->refine_element(__pyx_v_id, __pyx_v_refinement);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":438
 *         self.thisptr.refine_element(id, refinement)
 * 
 *     def refine_all_elements(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.refine_all_elements()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_all_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_all_elements(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("refine_all_elements");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":439
 * 
 *     def refine_all_elements(self):
 *         self.thisptr.refine_all_elements()             # <<<<<<<<<<<<<<
 * 
 *     def refine_towards_boundary(self, int marker, int depth):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->refine_all_elements();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":441
 *         self.thisptr.refine_all_elements()
 * 
 *     def refine_towards_boundary(self, int marker, int depth):             # <<<<<<<<<<<<<<
 *         self.thisptr.refine_towards_boundary(marker, depth)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_boundary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_boundary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_marker;
  int __pyx_v_depth;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__marker,&__pyx_n_s__depth,0};
  __Pyx_RefNannySetupContext("refine_towards_boundary");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__marker);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__depth);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("refine_towards_boundary", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "refine_towards_boundary") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_marker = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_marker == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_depth = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_marker = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_marker == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_depth = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("refine_towards_boundary", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.refine_towards_boundary");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":442
 * 
 *     def refine_towards_boundary(self, int marker, int depth):
 *         self.thisptr.refine_towards_boundary(marker, depth)             # <<<<<<<<<<<<<<
 * 
 *     def refine_towards_vertex(self, int marker, int depth):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->refine_towards_boundary(__pyx_v_marker, __pyx_v_depth);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":444
 *         self.thisptr.refine_towards_boundary(marker, depth)
 * 
 *     def refine_towards_vertex(self, int marker, int depth):             # <<<<<<<<<<<<<<
 *         self.thisptr.refine_towards_vertex(marker, depth)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_vertex(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_marker;
  int __pyx_v_depth;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__marker,&__pyx_n_s__depth,0};
  __Pyx_RefNannySetupContext("refine_towards_vertex");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__marker);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__depth);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("refine_towards_vertex", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "refine_towards_vertex") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_marker = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_marker == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_depth = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_marker = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_marker == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_depth = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("refine_towards_vertex", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.refine_towards_vertex");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":445
 * 
 *     def refine_towards_vertex(self, int marker, int depth):
 *         self.thisptr.refine_towards_vertex(marker, depth)             # <<<<<<<<<<<<<<
 * 
 *     def get_element(self, int id):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->refine_towards_vertex(__pyx_v_marker, __pyx_v_depth);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":447
 *         self.thisptr.refine_towards_vertex(marker, depth)
 * 
 *     def get_element(self, int id):             # <<<<<<<<<<<<<<
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.get_element(id)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_element(PyObject *__pyx_v_self, PyObject *__pyx_arg_id); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_element(PyObject *__pyx_v_self, PyObject *__pyx_arg_id) {
  int __pyx_v_id;
  struct __pyx_obj_8hermes2d_9_hermes2d_Element *__pyx_v_e = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_element");
  assert(__pyx_arg_id); {
    __pyx_v_id = __Pyx_PyInt_AsInt(__pyx_arg_id); if (unlikely((__pyx_v_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.get_element");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":448
 * 
 *     def get_element(self, int id):
 *         cdef Element e = Element()             # <<<<<<<<<<<<<<
 *         e.thisptr = self.thisptr.get_element(id)
 *         return e
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Element)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_e = ((struct __pyx_obj_8hermes2d_9_hermes2d_Element *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":449
 *     def get_element(self, int id):
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.get_element(id)             # <<<<<<<<<<<<<<
 *         return e
 * 
 */
  __pyx_v_e->thisptr = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->get_element(__pyx_v_id);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":450
 *         cdef Element e = Element()
 *         e.thisptr = self.thisptr.get_element(id)
 *         return e             # <<<<<<<<<<<<<<
 * 
 *     def plot(self, *args, **kwargs):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_e));
  __pyx_r = ((PyObject *)__pyx_v_e);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.get_element");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":452
 *         return e
 * 
 *     def plot(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Plots the mesh and shows it to the user.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_4Mesh_plot[] = "\n        Plots the mesh and shows it to the user.\n\n        It passes all arguments to the MeshView.show() function, so read its\n        documentation for the meaning.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_v_MeshView;
  PyObject *__pyx_v_m;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("plot");
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "plot", 1))) return NULL;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_v_MeshView = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_m = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":459
 *         documentation for the meaning.
 *         """
 *         from hermes2d import MeshView             # <<<<<<<<<<<<<<
 *         m = MeshView()
 *         m.show(self, *args, **kwargs)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__MeshView));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__MeshView));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__MeshView));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__hermes2d), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__MeshView); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_MeshView);
  __pyx_v_MeshView = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":460
 *         """
 *         from hermes2d import MeshView
 *         m = MeshView()             # <<<<<<<<<<<<<<
 *         m.show(self, *args, **kwargs)
 * 
 */
  __pyx_t_2 = PyObject_Call(__pyx_v_MeshView, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_m);
  __pyx_v_m = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":461
 *         from hermes2d import MeshView
 *         m = MeshView()
 *         m.show(self, *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def convert_triangles_to_quads(self):
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_m, __pyx_n_s__show); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PySequence_Tuple(((PyObject *)__pyx_v_args)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_2, __pyx_t_4, ((PyObject *)__pyx_v_kwargs)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh.plot");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_DECREF(__pyx_v_MeshView);
  __Pyx_DECREF(__pyx_v_m);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":463
 *         m.show(self, *args, **kwargs)
 * 
 *     def convert_triangles_to_quads(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.convert_triangles_to_quads()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_triangles_to_quads(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_triangles_to_quads(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("convert_triangles_to_quads");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":464
 * 
 *     def convert_triangles_to_quads(self):
 *         self.thisptr.convert_triangles_to_quads()             # <<<<<<<<<<<<<<
 * 
 *     def convert_quads_to_triangles(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->convert_triangles_to_quads();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":466
 *         self.thisptr.convert_triangles_to_quads()
 * 
 *     def convert_quads_to_triangles(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.convert_quads_to_triangles()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_quads_to_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_quads_to_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("convert_quads_to_triangles");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":467
 * 
 *     def convert_quads_to_triangles(self):
 *         self.thisptr.convert_quads_to_triangles()             # <<<<<<<<<<<<<<
 * 
 * cdef class H1Shapeset:
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_self)->thisptr->convert_quads_to_triangles();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":472
 *     cdef c_H1Shapeset *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_H1Shapeset()
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":473
 * 
 *     def __cinit__(self):
 *         self.thisptr = new_H1Shapeset()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)__pyx_v_self)->thisptr = new H1Shapeset();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":475
 *         self.thisptr = new_H1Shapeset()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":476
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class PrecalcShapeset:
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":481
 *     cdef c_PrecalcShapeset *thisptr
 * 
 *     def __cinit__(self, H1Shapeset h):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_PrecalcShapeset(h.thisptr)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *__pyx_v_h = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__h,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__h);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_h = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_h = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.PrecalcShapeset.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_h), __pyx_ptype_8hermes2d_9_hermes2d_H1Shapeset, 1, "h", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":482
 * 
 *     def __cinit__(self, H1Shapeset h):
 *         self.thisptr = new_PrecalcShapeset(h.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)__pyx_v_self)->thisptr = new PrecalcShapeset(__pyx_v_h->thisptr);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.PrecalcShapeset.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":484
 *         self.thisptr = new_PrecalcShapeset(h.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":485
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class H1Space:
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":489
 * cdef class H1Space:
 * 
 *     def __init__(self, Mesh m, H1Shapeset s):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_H1Space(m.thisptr, s.thisptr)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_7H1Space___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_7H1Space___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *__pyx_v_m = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *__pyx_v_s = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__m,&__pyx_n_s__s,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__m);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__s);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_m = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)values[0]);
    __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_m = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.__init__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_8hermes2d_9_hermes2d_Mesh, 1, "m", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_H1Shapeset, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":490
 * 
 *     def __init__(self, Mesh m, H1Shapeset s):
 *         self.thisptr = new_H1Space(m.thisptr, s.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr = new H1Space(__pyx_v_m->thisptr, __pyx_v_s->thisptr);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":492
 *         self.thisptr = new_H1Space(m.thisptr, s.thisptr)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_7H1Space___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_7H1Space___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":493
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def set_uniform_order(self, int tri_order):
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":495
 *         delete(self.thisptr)
 * 
 *     def set_uniform_order(self, int tri_order):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_uniform_order(tri_order)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_set_uniform_order(PyObject *__pyx_v_self, PyObject *__pyx_arg_tri_order); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_set_uniform_order(PyObject *__pyx_v_self, PyObject *__pyx_arg_tri_order) {
  int __pyx_v_tri_order;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("set_uniform_order");
  assert(__pyx_arg_tri_order); {
    __pyx_v_tri_order = __Pyx_PyInt_AsInt(__pyx_arg_tri_order); if (unlikely((__pyx_v_tri_order == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.set_uniform_order");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":496
 * 
 *     def set_uniform_order(self, int tri_order):
 *         self.thisptr.set_uniform_order(tri_order)             # <<<<<<<<<<<<<<
 * 
 *     def assign_dofs(self, first_dof=0, stride=1):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr->set_uniform_order(__pyx_v_tri_order);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":498
 *         self.thisptr.set_uniform_order(tri_order)
 * 
 *     def assign_dofs(self, first_dof=0, stride=1):             # <<<<<<<<<<<<<<
 *         return self.thisptr.assign_dofs(first_dof, stride)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_assign_dofs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_assign_dofs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_first_dof = 0;
  PyObject *__pyx_v_stride = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__first_dof,&__pyx_n_s__stride,0};
  __Pyx_RefNannySetupContext("assign_dofs");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_int_0);
    values[1] = ((PyObject *)__pyx_int_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__first_dof);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__stride);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "assign_dofs") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_first_dof = values[0];
    __pyx_v_stride = values[1];
  } else {
    __pyx_v_first_dof = ((PyObject *)__pyx_int_0);
    __pyx_v_stride = ((PyObject *)__pyx_int_1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_stride = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_first_dof = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("assign_dofs", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.assign_dofs");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":499
 * 
 *     def assign_dofs(self, first_dof=0, stride=1):
 *         return self.thisptr.assign_dofs(first_dof, stride)             # <<<<<<<<<<<<<<
 * 
 *     def copy_orders(self, H1Space s, int inc=0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_first_dof); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_stride); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr->assign_dofs(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.assign_dofs");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":501
 *         return self.thisptr.assign_dofs(first_dof, stride)
 * 
 *     def copy_orders(self, H1Space s, int inc=0):             # <<<<<<<<<<<<<<
 *         self.thisptr.copy_orders(s.thisptr, inc)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_copy_orders(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_copy_orders(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_s = 0;
  int __pyx_v_inc;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__s,&__pyx_n_s__inc,0};
  __Pyx_RefNannySetupContext("copy_orders");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__s);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inc);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "copy_orders") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)values[0]);
    if (values[1]) {
      __pyx_v_inc = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_inc == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_inc = ((int)0);
    }
  } else {
    __pyx_v_inc = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_inc = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_inc == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("copy_orders", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.copy_orders");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_H1Space, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":502
 * 
 *     def copy_orders(self, H1Space s, int inc=0):
 *         self.thisptr.copy_orders(s.thisptr, inc)             # <<<<<<<<<<<<<<
 * 
 *     def get_element_order(self, int el_id):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr->copy_orders(__pyx_v_s->thisptr, __pyx_v_inc);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.copy_orders");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":504
 *         self.thisptr.copy_orders(s.thisptr, inc)
 * 
 *     def get_element_order(self, int el_id):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_element_order(el_id)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_element_order(PyObject *__pyx_v_self, PyObject *__pyx_arg_el_id); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_element_order(PyObject *__pyx_v_self, PyObject *__pyx_arg_el_id) {
  int __pyx_v_el_id;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_element_order");
  assert(__pyx_arg_el_id); {
    __pyx_v_el_id = __Pyx_PyInt_AsInt(__pyx_arg_el_id); if (unlikely((__pyx_v_el_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.get_element_order");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":505
 * 
 *     def get_element_order(self, int el_id):
 *         return self.thisptr.get_element_order(el_id)             # <<<<<<<<<<<<<<
 * 
 *     def get_num_dofs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr->get_element_order(__pyx_v_el_id)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.get_element_order");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":507
 *         return self.thisptr.get_element_order(el_id)
 * 
 *     def get_num_dofs(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_dofs()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_num_dofs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_num_dofs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_num_dofs");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":508
 * 
 *     def get_num_dofs(self):
 *         return self.thisptr.get_num_dofs()             # <<<<<<<<<<<<<<
 * 
 * cdef api object H1Space_from_C(c_H1Space *h):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_self)->thisptr->get_num_dofs()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space.get_num_dofs");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":510
 *         return self.thisptr.get_num_dofs()
 * 
 * cdef api object H1Space_from_C(c_H1Space *h):             # <<<<<<<<<<<<<<
 *     cdef H1Space n
 *     n = <H1Space>PY_NEW(H1Space)
 */

static  PyObject *H1Space_from_C(struct H1Space *__pyx_v_h) {
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("H1Space_from_C");
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":512
 * cdef api object H1Space_from_C(c_H1Space *h):
 *     cdef H1Space n
 *     n = <H1Space>PY_NEW(H1Space)             # <<<<<<<<<<<<<<
 *     n.thisptr = h
 *     return n
 */
  __pyx_t_1 = PY_NEW(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_H1Space))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_1)));
  __Pyx_DECREF(((PyObject *)__pyx_v_n));
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":513
 *     cdef H1Space n
 *     n = <H1Space>PY_NEW(H1Space)
 *     n.thisptr = h             # <<<<<<<<<<<<<<
 *     return n
 * 
 */
  __pyx_v_n->thisptr = __pyx_v_h;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":514
 *     n = <H1Space>PY_NEW(H1Space)
 *     n.thisptr = h
 *     return n             # <<<<<<<<<<<<<<
 * 
 * cdef api object Mesh_from_C(c_Mesh *h):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1Space_from_C");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":516
 *     return n
 * 
 * cdef api object Mesh_from_C(c_Mesh *h):             # <<<<<<<<<<<<<<
 *     cdef Mesh n
 *     n = <Mesh>PY_NEW(Mesh)
 */

static  PyObject *Mesh_from_C(struct Mesh *__pyx_v_h) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *__pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("Mesh_from_C");
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":518
 * cdef api object Mesh_from_C(c_Mesh *h):
 *     cdef Mesh n
 *     n = <Mesh>PY_NEW(Mesh)             # <<<<<<<<<<<<<<
 *     n.thisptr = h
 *     return n
 */
  __pyx_t_1 = PY_NEW(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Mesh))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_t_1)));
  __Pyx_DECREF(((PyObject *)__pyx_v_n));
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":519
 *     cdef Mesh n
 *     n = <Mesh>PY_NEW(Mesh)
 *     n.thisptr = h             # <<<<<<<<<<<<<<
 *     return n
 * 
 */
  __pyx_v_n->thisptr = __pyx_v_h;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":520
 *     n = <Mesh>PY_NEW(Mesh)
 *     n.thisptr = h
 *     return n             # <<<<<<<<<<<<<<
 * 
 * cdef class Transformable:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Mesh_from_C");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":533
 * cdef class MeshFunction(ScalarFunction):
 * 
 *     def __add__(x, y):             # <<<<<<<<<<<<<<
 *         return SumFilter(x, y)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___add__(PyObject *__pyx_v_x, PyObject *__pyx_v_y); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___add__(PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__add__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":534
 * 
 *     def __add__(x, y):
 *         return SumFilter(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(x, y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_SumFilter)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.__add__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":536
 *         return SumFilter(x, y)
 * 
 *     def __sub__(x, y):             # <<<<<<<<<<<<<<
 *         return DiffFilter(x, y)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___sub__(PyObject *__pyx_v_x, PyObject *__pyx_v_y); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___sub__(PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__sub__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":537
 * 
 *     def __sub__(x, y):
 *         return DiffFilter(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def __pow__(x, y, z):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_DiffFilter)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.__sub__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":539
 *         return DiffFilter(x, y)
 * 
 *     def __pow__(x, y, z):             # <<<<<<<<<<<<<<
 *         if y == 2:
 *             return SquareFilter(x)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___pow__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___pow__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pow__");
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_INCREF(__pyx_v_z);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":540
 * 
 *     def __pow__(x, y, z):
 *         if y == 2:             # <<<<<<<<<<<<<<
 *             return SquareFilter(x)
 *         return NotImplemented
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_int_2, Py_EQ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":541
 *     def __pow__(x, y, z):
 *         if y == 2:
 *             return SquareFilter(x)             # <<<<<<<<<<<<<<
 *         return NotImplemented
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_SquareFilter)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":542
 *         if y == 2:
 *             return SquareFilter(x)
 *         return NotImplemented             # <<<<<<<<<<<<<<
 * 
 *     def __neg__(x):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_builtin_NotImplemented);
  __pyx_r = __pyx_builtin_NotImplemented;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.__pow__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_DECREF(__pyx_v_z);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":544
 *         return NotImplemented
 * 
 *     def __neg__(x):             # <<<<<<<<<<<<<<
 *         return x-x-x
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___neg__(PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___neg__(PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__neg__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":545
 * 
 *     def __neg__(x):
 *         return x-x-x             # <<<<<<<<<<<<<<
 * 
 *     #def integrate(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_x, __pyx_v_x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_1, __pyx_v_x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.__neg__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":551
 *     #    return integrate(m)
 * 
 *     def l2_norm(self):             # <<<<<<<<<<<<<<
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return l2_norm(m)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_l2_norm(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_l2_norm(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct MeshFunction *__pyx_v_m;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("l2_norm");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":552
 * 
 *     def l2_norm(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         return l2_norm(m)
 * 
 */
  __pyx_v_m = ((struct MeshFunction *)((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":553
 *     def l2_norm(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return l2_norm(m)             # <<<<<<<<<<<<<<
 * 
 *     def h1_norm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(l2_norm(__pyx_v_m)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.l2_norm");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":555
 *         return l2_norm(m)
 * 
 *     def h1_norm(self):             # <<<<<<<<<<<<<<
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return h1_norm(m)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_h1_norm(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_h1_norm(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct MeshFunction *__pyx_v_m;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("h1_norm");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":556
 * 
 *     def h1_norm(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         return h1_norm(m)
 * 
 */
  __pyx_v_m = ((struct MeshFunction *)((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":557
 *     def h1_norm(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return h1_norm(m)             # <<<<<<<<<<<<<<
 * 
 *     def get_pt_value(self, x, y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(h1_norm(__pyx_v_m)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.h1_norm");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":559
 *         return h1_norm(m)
 * 
 *     def get_pt_value(self, x, y):             # <<<<<<<<<<<<<<
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return m.get_pt_value(x, y)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_pt_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_pt_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  struct MeshFunction *__pyx_v_m;
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("get_pt_value");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_pt_value", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_pt_value") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_y = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_pt_value", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.get_pt_value");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":560
 * 
 *     def get_pt_value(self, x, y):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         return m.get_pt_value(x, y)
 * 
 */
  __pyx_v_m = ((struct MeshFunction *)((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":561
 *     def get_pt_value(self, x, y):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return m.get_pt_value(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def get_mesh(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_m->get_pt_value(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.get_pt_value");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":563
 *         return m.get_pt_value(x, y)
 * 
 *     def get_mesh(self):             # <<<<<<<<<<<<<<
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return Mesh_from_C(m.get_mesh())
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_mesh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_mesh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct MeshFunction *__pyx_v_m;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_mesh");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":564
 * 
 *     def get_mesh(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         return Mesh_from_C(m.get_mesh())
 * 
 */
  __pyx_v_m = ((struct MeshFunction *)((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":565
 *     def get_mesh(self):
 *         cdef c_MeshFunction *m = <c_MeshFunction *>(self.thisptr)
 *         return Mesh_from_C(m.get_mesh())             # <<<<<<<<<<<<<<
 * 
 * cdef api object Solution_from_C(c_Solution *s):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = Mesh_from_C(__pyx_v_m->get_mesh()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshFunction.get_mesh");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":567
 *         return Mesh_from_C(m.get_mesh())
 * 
 * cdef api object Solution_from_C(c_Solution *s):             # <<<<<<<<<<<<<<
 *     cdef Solution n
 *     n = <Solution>PY_NEW(Solution)
 */

static  PyObject *Solution_from_C(struct Solution *__pyx_v_s) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Solution *__pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("Solution_from_C");
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":569
 * cdef api object Solution_from_C(c_Solution *s):
 *     cdef Solution n
 *     n = <Solution>PY_NEW(Solution)             # <<<<<<<<<<<<<<
 *     n.thisptr = <c_Function *>s
 *     return n
 */
  __pyx_t_1 = PY_NEW(((PyObject *)((PyObject*)__pyx_ptype_8hermes2d_9_hermes2d_Solution))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_1)));
  __Pyx_DECREF(((PyObject *)__pyx_v_n));
  __pyx_v_n = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":570
 *     cdef Solution n
 *     n = <Solution>PY_NEW(Solution)
 *     n.thisptr = <c_Function *>s             # <<<<<<<<<<<<<<
 *     return n
 * 
 */
  __pyx_v_n->__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)__pyx_v_s);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":571
 *     n = <Solution>PY_NEW(Solution)
 *     n.thisptr = <c_Function *>s
 *     return n             # <<<<<<<<<<<<<<
 * 
 * cdef class Solution(MeshFunction):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_n));
  __pyx_r = ((PyObject *)__pyx_v_n);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution_from_C");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":575
 * cdef class Solution(MeshFunction):
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_Solution()
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_8Solution___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_8Solution___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":576
 * 
 *     def __cinit__(self):
 *         self.thisptr = <c_Function *>new_Solution()             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new Solution());

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":581
 *     #    delete(self.thisptr)
 * 
 *     def set_zero(self, Mesh m):             # <<<<<<<<<<<<<<
 *         (<c_Solution *>(self.thisptr)).set_zero(m.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_zero(PyObject *__pyx_v_self, PyObject *__pyx_v_m); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_zero(PyObject *__pyx_v_self, PyObject *__pyx_v_m) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("set_zero");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_8hermes2d_9_hermes2d_Mesh, 1, "m", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":582
 * 
 *     def set_zero(self, Mesh m):
 *         (<c_Solution *>(self.thisptr)).set_zero(m.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def set_const(self, Mesh m, scalar):
 */
  ((struct Solution *)((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr)->set_zero(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_m)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.set_zero");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":584
 *         (<c_Solution *>(self.thisptr)).set_zero(m.thisptr)
 * 
 *     def set_const(self, Mesh m, scalar):             # <<<<<<<<<<<<<<
 *         (<c_Solution *>(self.thisptr)).set_const(m.thisptr, scalar)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_const(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_const(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *__pyx_v_m = 0;
  PyObject *__pyx_v_scalar = 0;
  PyObject *__pyx_r = NULL;
  scalar __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__m,&__pyx_n_s__scalar,0};
  __Pyx_RefNannySetupContext("set_const");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__m);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__scalar);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_const", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_const") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_m = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)values[0]);
    __pyx_v_scalar = values[1];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_m = ((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_scalar = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_const", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.set_const");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_8hermes2d_9_hermes2d_Mesh, 1, "m", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":585
 * 
 *     def set_const(self, Mesh m, scalar):
 *         (<c_Solution *>(self.thisptr)).set_const(m.thisptr, scalar)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_scalar); if (unlikely((__pyx_t_1 == (scalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct Solution *)((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr)->set_const(__pyx_v_m->thisptr, __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.set_const");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":588
 * 
 * 
 *     def set_fe_solution(self, H1Space s, PrecalcShapeset pss, ndarray v):             # <<<<<<<<<<<<<<
 *         """
 *         Sets the solution using the coefficient vector Y.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_fe_solution(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_8Solution_set_fe_solution[] = "\n        Sets the solution using the coefficient vector Y.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_fe_solution(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_s = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *__pyx_v_pss = 0;
  PyArrayObject *__pyx_v_v = 0;
  int __pyx_v_n;
  PyObject *__pyx_v_array;
  PyArrayObject *__pyx_v_vec = 0;
  scalar *__pyx_v_pvec;
  PyObject *__pyx_r = NULL;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__s,&__pyx_n_s__pss,&__pyx_n_s__v,0};
  __Pyx_RefNannySetupContext("set_fe_solution");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__s);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__pss);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_fe_solution", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__v);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_fe_solution", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_fe_solution") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)values[0]);
    __pyx_v_pss = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)values[1]);
    __pyx_v_v = ((PyArrayObject *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_pss = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_v = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_fe_solution", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.set_fe_solution");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_array = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_H1Space, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pss), __pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset, 1, "pss", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_8hermes2d_9_hermes2d_ndarray, 1, "v", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":592
 *         Sets the solution using the coefficient vector Y.
 *         """
 *         cdef int n = len(v)             # <<<<<<<<<<<<<<
 *         cdef int i
 *         from numpy import array
 */
  __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_v)); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":594
 *         cdef int n = len(v)
 *         cdef int i
 *         from numpy import array             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = array(v, dtype="double")
 *         cdef scalar *pvec = <scalar *>vec.data
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__array));
  PyList_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_n_s__array));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__array));
  __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__array); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_array);
  __pyx_v_array = __pyx_t_2;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":595
 *         cdef int i
 *         from numpy import array
 *         cdef ndarray vec = array(v, dtype="double")             # <<<<<<<<<<<<<<
 *         cdef scalar *pvec = <scalar *>vec.data
 *         (<c_Solution *>(self.thisptr)).set_fe_solution(s.thisptr, pss.thisptr,
 */
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_v));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_v));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_v));
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__dtype), ((PyObject *)__pyx_n_s__double)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = PyEval_CallObjectWithKeywords(__pyx_v_array, __pyx_t_3, ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":596
 *         from numpy import array
 *         cdef ndarray vec = array(v, dtype="double")
 *         cdef scalar *pvec = <scalar *>vec.data             # <<<<<<<<<<<<<<
 *         (<c_Solution *>(self.thisptr)).set_fe_solution(s.thisptr, pss.thisptr,
 *                 pvec)
 */
  __pyx_v_pvec = ((scalar *)__pyx_v_vec->data);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":598
 *         cdef scalar *pvec = <scalar *>vec.data
 *         (<c_Solution *>(self.thisptr)).set_fe_solution(s.thisptr, pss.thisptr,
 *                 pvec)             # <<<<<<<<<<<<<<
 * 
 *     def plot(self, *args, **kwargs):
 */
  ((struct Solution *)((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr)->set_fe_solution(__pyx_v_s->thisptr, __pyx_v_pss->thisptr, __pyx_v_pvec);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.set_fe_solution");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_array);
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":600
 *                 pvec)
 * 
 *     def plot(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Plots the solution and shows it to the user.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_8Solution_plot[] = "\n        Plots the solution and shows it to the user.\n\n        It passes all arguments to the ScalarView.show() function, so read its\n        documentation for the meaning.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8Solution_plot(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_v_ScalarView;
  PyObject *__pyx_v_sview;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("plot");
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "plot", 1))) return NULL;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_v_ScalarView = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_sview = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":607
 *         documentation for the meaning.
 *         """
 *         from hermes2d import ScalarView             # <<<<<<<<<<<<<<
 *         sview = ScalarView()
 *         sview.show(self, *args, **kwargs)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__ScalarView));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__ScalarView));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__ScalarView));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__hermes2d), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__ScalarView); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_ScalarView);
  __pyx_v_ScalarView = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":608
 *         """
 *         from hermes2d import ScalarView
 *         sview = ScalarView()             # <<<<<<<<<<<<<<
 *         sview.show(self, *args, **kwargs)
 * 
 */
  __pyx_t_2 = PyObject_Call(__pyx_v_ScalarView, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_sview);
  __pyx_v_sview = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":609
 *         from hermes2d import ScalarView
 *         sview = ScalarView()
 *         sview.show(self, *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     # the get_fe_solution() method is is not yet implemented in the C++ hermes:
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_sview, __pyx_n_s__show); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PySequence_Tuple(((PyObject *)__pyx_v_args)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_2, __pyx_t_4, ((PyObject *)__pyx_v_kwargs)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.Solution.plot");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_DECREF(__pyx_v_ScalarView);
  __Pyx_DECREF(__pyx_v_sview);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":635
 * cdef class VonMisesFilter(Filter):
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, double l, double m):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_VonMisesFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, l, m)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_14VonMisesFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_14VonMisesFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln2 = 0;
  double __pyx_v_l;
  double __pyx_v_m;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln1,&__pyx_n_s__sln2,&__pyx_n_s__l,&__pyx_n_s__m,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__l);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__m);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    __pyx_v_l = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_l == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_m = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_m == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_l = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_l == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_m = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_m == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VonMisesFilter.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":636
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, double l, double m):
 *         self.thisptr = <c_Function *>new_VonMisesFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, l, m)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_VonMisesFilter *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new VonMisesFilter(((struct MeshFunction *)__pyx_v_sln1->__pyx_base.__pyx_base.thisptr), ((struct MeshFunction *)__pyx_v_sln2->__pyx_base.__pyx_base.thisptr), __pyx_v_l, __pyx_v_m));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VonMisesFilter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":643
 * cdef class MagFilter(SimpleFilter):
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, int item1, int item2):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_MagFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9MagFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9MagFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln2 = 0;
  int __pyx_v_item1;
  int __pyx_v_item2;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln1,&__pyx_n_s__sln2,&__pyx_n_s__item1,&__pyx_n_s__item2,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item1);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item2);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    __pyx_v_item1 = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_item2 = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_item1 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_item2 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.MagFilter.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":644
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2, int item1, int item2):
 *         self.thisptr = <c_Function *>new_MagFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_MagFilter *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new MagFilter(((struct MeshFunction *)__pyx_v_sln1->__pyx_base.__pyx_base.thisptr), ((struct MeshFunction *)__pyx_v_sln2->__pyx_base.__pyx_base.thisptr), __pyx_v_item1, __pyx_v_item2));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.MagFilter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":651
 * cdef class DiffFilter(SimpleFilter):
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,             # <<<<<<<<<<<<<<
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):
 *         self.thisptr = <c_Function *>new_DiffFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10DiffFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10DiffFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln2 = 0;
  int __pyx_v_item1;
  int __pyx_v_item2;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln1,&__pyx_n_s__sln2,&__pyx_n_s__item1,&__pyx_n_s__item2,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item1);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item2);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    if (values[2]) {
      __pyx_v_item1 = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_item1 = __pyx_k_18;
    }
    if (values[3]) {
      __pyx_v_item2 = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_item2 = __pyx_k_19;
    }
  } else {
    __pyx_v_item1 = __pyx_k_18;
    __pyx_v_item2 = __pyx_k_19;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_item2 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_item1 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.DiffFilter.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":653
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):
 *         self.thisptr = <c_Function *>new_DiffFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_DiffFilter *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new DiffFilter(((struct MeshFunction *)__pyx_v_sln1->__pyx_base.__pyx_base.thisptr), ((struct MeshFunction *)__pyx_v_sln2->__pyx_base.__pyx_base.thisptr), __pyx_v_item1, __pyx_v_item2));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.DiffFilter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":660
 * cdef class SumFilter(SimpleFilter):
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,             # <<<<<<<<<<<<<<
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):
 *         self.thisptr = <c_Function *>new_SumFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9SumFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9SumFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln2 = 0;
  int __pyx_v_item1;
  int __pyx_v_item2;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln1,&__pyx_n_s__sln2,&__pyx_n_s__item1,&__pyx_n_s__item2,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item1);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item2);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    if (values[2]) {
      __pyx_v_item1 = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_item1 = __pyx_k_20;
    }
    if (values[3]) {
      __pyx_v_item2 = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_item2 = __pyx_k_21;
    }
  } else {
    __pyx_v_item1 = __pyx_k_20;
    __pyx_v_item2 = __pyx_k_21;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_item2 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_item2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_item1 = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_item1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.SumFilter.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":662
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):
 *         self.thisptr = <c_Function *>new_SumFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_SumFilter *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new SumFilter(((struct MeshFunction *)__pyx_v_sln1->__pyx_base.__pyx_base.thisptr), ((struct MeshFunction *)__pyx_v_sln2->__pyx_base.__pyx_base.thisptr), __pyx_v_item1, __pyx_v_item2));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.SumFilter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":669
 * cdef class SquareFilter(SimpleFilter):
 * 
 *     def __cinit__(self, MeshFunction sln, int item=H2D_FN_VAL):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_SquareFilter(<c_MeshFunction *>sln.thisptr, item)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_12SquareFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_12SquareFilter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln = 0;
  int __pyx_v_item;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln,&__pyx_n_s__item,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__item);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    if (values[1]) {
      __pyx_v_item = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_item == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_item = __pyx_k_22;
    }
  } else {
    __pyx_v_item = __pyx_k_22;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_item = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_item == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.SquareFilter.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":670
 * 
 *     def __cinit__(self, MeshFunction sln, int item=H2D_FN_VAL):
 *         self.thisptr = <c_Function *>new_SquareFilter(<c_MeshFunction *>sln.thisptr, item)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_SquareFilter *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_base.thisptr = ((struct MeshFunction *)new SquareFilter(((struct MeshFunction *)__pyx_v_sln->__pyx_base.__pyx_base.thisptr), __pyx_v_item));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.SquareFilter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":677
 * cdef class WeakForm:
 * 
 *     def __cinit__(self, int neq=1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_WeakForm(neq)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_8WeakForm___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_8WeakForm___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_neq;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__neq,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__neq);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_neq = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_neq == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_neq = ((int)1);
    }
  } else {
    __pyx_v_neq = ((int)1);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_neq = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_neq == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.WeakForm.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":678
 * 
 *     def __cinit__(self, int neq=1):
 *         self.thisptr = new_WeakForm(neq)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm *)__pyx_v_self)->thisptr = new WeakForm(__pyx_v_neq);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":680
 *         self.thisptr = new_WeakForm(neq)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_8WeakForm___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_8WeakForm___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":681
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class DummySolver(Solver):
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":685
 * cdef class DummySolver(Solver):
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Solver *>(new_DummySolver())
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_11DummySolver___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_11DummySolver___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":686
 * 
 *     def __cinit__(self):
 *         self.thisptr = <c_Solver *>(new_DummySolver())             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_DummySolver *)__pyx_v_self)->__pyx_base.thisptr = ((struct Solver *)new DummySolver());

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":688
 *         self.thisptr = <c_Solver *>(new_DummySolver())
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_11DummySolver___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_11DummySolver___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":689
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class LinSystem:
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_DummySolver *)__pyx_v_self)->__pyx_base.thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":693
 * cdef class LinSystem:
 * 
 *     def __init__(self, WeakForm wf, Solver solver):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_LinSystem(wf.thisptr, solver.thisptr)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9LinSystem___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9LinSystem___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm *__pyx_v_wf = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_Solver *__pyx_v_solver = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__wf,&__pyx_n_s__solver,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__wf);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__solver);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_wf = ((struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm *)values[0]);
    __pyx_v_solver = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solver *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_wf = ((struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_solver = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solver *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.__init__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wf), __pyx_ptype_8hermes2d_9_hermes2d_WeakForm, 1, "wf", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solver), __pyx_ptype_8hermes2d_9_hermes2d_Solver, 1, "solver", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":694
 * 
 *     def __init__(self, WeakForm wf, Solver solver):
 *         self.thisptr = new_LinSystem(wf.thisptr, solver.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr = new LinSystem(__pyx_v_wf->thisptr, __pyx_v_solver->thisptr);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":699
 *     #    delete(self.thisptr)
 * 
 *     def set_spaces(self, *args):             # <<<<<<<<<<<<<<
 *         self._spaces = args
 *         cdef int n = len(args)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_spaces(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_spaces(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  int __pyx_v_n;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_a;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_b;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_c;
  PyObject *__pyx_r = NULL;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("set_spaces");
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_spaces", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":700
 * 
 *     def set_spaces(self, *args):
 *         self._spaces = args             # <<<<<<<<<<<<<<
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_args));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_args));
  __Pyx_GOTREF(((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_spaces);
  __Pyx_DECREF(((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_spaces);
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_spaces = ((PyObject *)__pyx_v_args);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":701
 *     def set_spaces(self, *args):
 *         self._spaces = args
 *         cdef int n = len(args)             # <<<<<<<<<<<<<<
 *         cdef H1Space a, b, c
 *         if n == 1:
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); 
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":703
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c
 *         if n == 1:             # <<<<<<<<<<<<<<
 *             a = args[0]
 *             self.thisptr.set_spaces(n, a.thisptr)
 */
  switch (__pyx_v_n) {
    case 1:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":704
 *         cdef H1Space a, b, c
 *         if n == 1:
 *             a = args[0]             # <<<<<<<<<<<<<<
 *             self.thisptr.set_spaces(n, a.thisptr)
 *         elif n == 2:
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_a));
    __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":705
 *         if n == 1:
 *             a = args[0]
 *             self.thisptr.set_spaces(n, a.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 2:
 *             a, b = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->set_spaces(__pyx_v_n, __pyx_v_a->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":706
 *             a = args[0]
 *             self.thisptr.set_spaces(n, a.thisptr)
 *         elif n == 2:             # <<<<<<<<<<<<<<
 *             a, b = args
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr)
 */
    case 2:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":707
 *             self.thisptr.set_spaces(n, a.thisptr)
 *         elif n == 2:
 *             a, b = args             # <<<<<<<<<<<<<<
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 2);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":708
 *         elif n == 2:
 *             a, b = args
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 3:
 *             a, b, c = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->set_spaces(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":709
 *             a, b = args
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr)
 *         elif n == 3:             # <<<<<<<<<<<<<<
 *             a, b, c = args
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr, c.thisptr)
 */
    case 3:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":710
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 *             a, b, c = args             # <<<<<<<<<<<<<<
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr, c.thisptr)
 *         else:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 3)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_c));
      __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_4);
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 3);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":711
 *         elif n == 3:
 *             a, b, c = args
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr, c.thisptr)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError()
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->set_spaces(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr, __pyx_v_c->thisptr);
    break;
    default:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":713
 *             self.thisptr.set_spaces(n, a.thisptr, b.thisptr, c.thisptr)
 *         else:
 *             raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     def set_pss(self, *args):
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.set_spaces");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF((PyObject *)__pyx_v_a);
  __Pyx_DECREF((PyObject *)__pyx_v_b);
  __Pyx_DECREF((PyObject *)__pyx_v_c);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":715
 *             raise NotImplementedError()
 * 
 *     def set_pss(self, *args):             # <<<<<<<<<<<<<<
 *         self._pss = args
 *         cdef int n = len(args)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_pss(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_pss(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  int __pyx_v_n;
  struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *__pyx_v_s1;
  struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *__pyx_v_s2;
  PyObject *__pyx_r = NULL;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("set_pss");
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_pss", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":716
 * 
 *     def set_pss(self, *args):
 *         self._pss = args             # <<<<<<<<<<<<<<
 *         cdef int n = len(args)
 *         cdef PrecalcShapeset s1, s2
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_args));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_args));
  __Pyx_GOTREF(((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_pss);
  __Pyx_DECREF(((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_pss);
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->_pss = ((PyObject *)__pyx_v_args);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":717
 *     def set_pss(self, *args):
 *         self._pss = args
 *         cdef int n = len(args)             # <<<<<<<<<<<<<<
 *         cdef PrecalcShapeset s1, s2
 *         if n == 1:
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 717; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); 
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":719
 *         cdef int n = len(args)
 *         cdef PrecalcShapeset s1, s2
 *         if n == 1:             # <<<<<<<<<<<<<<
 *             s1 = args[0]
 *             self.thisptr.set_pss(n, s1.thisptr)
 */
  switch (__pyx_v_n) {
    case 1:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":720
 *         cdef PrecalcShapeset s1, s2
 *         if n == 1:
 *             s1 = args[0]             # <<<<<<<<<<<<<<
 *             self.thisptr.set_pss(n, s1.thisptr)
 *         elif n == 2:
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_s1));
    __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":721
 *         if n == 1:
 *             s1 = args[0]
 *             self.thisptr.set_pss(n, s1.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 2:
 *             s1 = args[0]
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->set_pss(__pyx_v_n, __pyx_v_s1->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":722
 *             s1 = args[0]
 *             self.thisptr.set_pss(n, s1.thisptr)
 *         elif n == 2:             # <<<<<<<<<<<<<<
 *             s1 = args[0]
 *             s2 = args[1]
 */
    case 2:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":723
 *             self.thisptr.set_pss(n, s1.thisptr)
 *         elif n == 2:
 *             s1 = args[0]             # <<<<<<<<<<<<<<
 *             s2 = args[1]
 *             self.thisptr.set_pss(n, s1.thisptr, s2.thisptr)
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_s1));
    __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":724
 *         elif n == 2:
 *             s1 = args[0]
 *             s2 = args[1]             # <<<<<<<<<<<<<<
 *             self.thisptr.set_pss(n, s1.thisptr, s2.thisptr)
 *         else:
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_s2));
    __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":725
 *             s1 = args[0]
 *             s2 = args[1]
 *             self.thisptr.set_pss(n, s1.thisptr, s2.thisptr)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError()
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->set_pss(__pyx_v_n, __pyx_v_s1->thisptr, __pyx_v_s2->thisptr);
    break;
    default:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":727
 *             self.thisptr.set_pss(n, s1.thisptr, s2.thisptr)
 *         else:
 *             raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     def solve_system(self, *args, lib="scipy"):
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.set_pss");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF((PyObject *)__pyx_v_s1);
  __Pyx_DECREF((PyObject *)__pyx_v_s2);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":729
 *             raise NotImplementedError()
 * 
 *     def solve_system(self, *args, lib="scipy"):             # <<<<<<<<<<<<<<
 *         """
 *         Solves the linear system using scipy.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_solve_system(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_9LinSystem_solve_system[] = "\n        Solves the linear system using scipy.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_solve_system(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lib = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_v_n;
  struct __pyx_obj_8hermes2d_9_hermes2d_Solution *__pyx_v_s0;
  struct __pyx_obj_8hermes2d_9_hermes2d_Solution *__pyx_v_s1;
  struct __pyx_obj_8hermes2d_9_hermes2d_Solution *__pyx_v_s2;
  struct __pyx_obj_8hermes2d_9_hermes2d_Solution *__pyx_v_s3;
  PyArrayObject *__pyx_v_vec;
  scalar *__pyx_v_pvec;
  PyObject *__pyx_v_cg;
  PyObject *__pyx_v_spsolve;
  PyObject *__pyx_v_array;
  PyObject *__pyx_v_A;
  PyObject *__pyx_v_rhs;
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_i;
  PyObject *__pyx_v_sln;
  PyObject *__pyx_r = NULL;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lib,0};
  __Pyx_RefNannySetupContext("solve_system");
  if (PyTuple_GET_SIZE(__pyx_args) > 0) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 0, PyTuple_GET_SIZE(__pyx_args)); __Pyx_GOTREF(__pyx_v_args);
    if (unlikely(!__pyx_v_args)) return NULL;
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_n_s__scipy);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  0: break;
    }
    while (kw_args > 0) {
      PyObject* value;
      value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lib);
      if (value) { values[0] = value; if (!(--kw_args)) break; }
      break;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, 0, "solve_system") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 729; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_lib = values[0];
  } else if (PyTuple_GET_SIZE(__pyx_args) < 0) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_lib = ((PyObject *)__pyx_n_s__scipy);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("solve_system", 0, 0, 0, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 729; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.solve_system");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_INCREF(__pyx_v_lib);
  __pyx_v_s0 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_s3 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_vec = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_cg = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_spsolve = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_array = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_A = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_rhs = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_i = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_sln = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":733
 *         Solves the linear system using scipy.
 *         """
 *         cdef int n = len(args)             # <<<<<<<<<<<<<<
 * 
 *         cdef Solution s0, s1, s2, s3
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); 
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":739
 *         cdef scalar *pvec
 * 
 *         if lib == "hermes":             # <<<<<<<<<<<<<<
 *             if n == 1:
 *                 s0 = args[0]
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_lib, ((PyObject *)__pyx_n_s__hermes), Py_EQ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":740
 * 
 *         if lib == "hermes":
 *             if n == 1:             # <<<<<<<<<<<<<<
 *                 s0 = args[0]
 *                 self.thisptr.solve(n, s0.thisptr)
 */
    switch (__pyx_v_n) {
      case 1:

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":741
 *         if lib == "hermes":
 *             if n == 1:
 *                 s0 = args[0]             # <<<<<<<<<<<<<<
 *                 self.thisptr.solve(n, s0.thisptr)
 *             elif n == 2:
 */
      __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_s0));
      __pyx_v_s0 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":742
 *             if n == 1:
 *                 s0 = args[0]
 *                 self.thisptr.solve(n, s0.thisptr)             # <<<<<<<<<<<<<<
 *             elif n == 2:
 *                 s0, s1 = args
 */
      ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->solve(__pyx_v_n, __pyx_v_s0->__pyx_base.__pyx_base.__pyx_base.thisptr);
      break;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":743
 *                 s0 = args[0]
 *                 self.thisptr.solve(n, s0.thisptr)
 *             elif n == 2:             # <<<<<<<<<<<<<<
 *                 s0, s1 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr)
 */
      case 2:

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":744
 *                 self.thisptr.solve(n, s0.thisptr)
 *             elif n == 2:
 *                 s0, s1 = args             # <<<<<<<<<<<<<<
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr)
 *             elif n == 3:
 */
      if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 2)) {
        PyObject* tuple = ((PyObject *)__pyx_v_args);
        __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_4 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_4);
        if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(((PyObject *)__pyx_v_s0));
        __pyx_v_s0 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s1));
        __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_4);
        __pyx_t_4 = 0;
      } else {
        __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 2);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":745
 *             elif n == 2:
 *                 s0, s1 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr)             # <<<<<<<<<<<<<<
 *             elif n == 3:
 *                 s0, s1, s2 = args
 */
      ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->solve(__pyx_v_n, __pyx_v_s0->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s1->__pyx_base.__pyx_base.__pyx_base.thisptr);
      break;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":746
 *                 s0, s1 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr)
 *             elif n == 3:             # <<<<<<<<<<<<<<
 *                 s0, s1, s2 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr)
 */
      case 3:

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":747
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr)
 *             elif n == 3:
 *                 s0, s1, s2 = args             # <<<<<<<<<<<<<<
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr)
 *             elif n == 4:
 */
      if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 3)) {
        PyObject* tuple = ((PyObject *)__pyx_v_args);
        __pyx_t_4 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_4);
        if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_5 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(((PyObject *)__pyx_v_s0));
        __pyx_v_s0 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s1));
        __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s2));
        __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_5);
        __pyx_t_5 = 0;
      } else {
        __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 3);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":748
 *             elif n == 3:
 *                 s0, s1, s2 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr)             # <<<<<<<<<<<<<<
 *             elif n == 4:
 *                 s0, s1, s2, s3 = args
 */
      ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->solve(__pyx_v_n, __pyx_v_s0->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s1->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s2->__pyx_base.__pyx_base.__pyx_base.thisptr);
      break;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":749
 *                 s0, s1, s2 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr)
 *             elif n == 4:             # <<<<<<<<<<<<<<
 *                 s0, s1, s2, s3 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr,
 */
      case 4:

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":750
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr)
 *             elif n == 4:
 *                 s0, s1, s2, s3 = args             # <<<<<<<<<<<<<<
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr,
 *                         s3.thisptr)
 */
      if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 4)) {
        PyObject* tuple = ((PyObject *)__pyx_v_args);
        __pyx_t_5 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
        if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_6 = PyTuple_GET_ITEM(tuple, 3); __Pyx_INCREF(__pyx_t_6);
        if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_8hermes2d_9_hermes2d_Solution))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(((PyObject *)__pyx_v_s0));
        __pyx_v_s0 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s1));
        __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s2));
        __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_DECREF(((PyObject *)__pyx_v_s3));
        __pyx_v_s3 = ((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_t_6);
        __pyx_t_6 = 0;
      } else {
        __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 4);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":752
 *                 s0, s1, s2, s3 = args
 *                 self.thisptr.solve(n, s0.thisptr, s1.thisptr, s2.thisptr,
 *                         s3.thisptr)             # <<<<<<<<<<<<<<
 *             else:
 *                 raise NotImplementedError()
 */
      ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->solve(__pyx_v_n, __pyx_v_s0->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s1->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s2->__pyx_base.__pyx_base.__pyx_base.thisptr, __pyx_v_s3->__pyx_base.__pyx_base.__pyx_base.thisptr);
      break;
      default:

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":754
 *                         s3.thisptr)
 *             else:
 *                 raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *         elif lib == "scipy":
 */
      __pyx_t_6 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }
    goto __pyx_L6;
  }

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":756
 *                 raise NotImplementedError()
 * 
 *         elif lib == "scipy":             # <<<<<<<<<<<<<<
 *             from scipy.sparse.linalg import cg
 *             from scipy.sparse.linalg import spsolve
 */
  __pyx_t_6 = PyObject_RichCompare(__pyx_v_lib, ((PyObject *)__pyx_n_s__scipy), Py_EQ); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_3) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":757
 * 
 *         elif lib == "scipy":
 *             from scipy.sparse.linalg import cg             # <<<<<<<<<<<<<<
 *             from scipy.sparse.linalg import spsolve
 *             from numpy import array
 */
    __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_6));
    __Pyx_INCREF(((PyObject *)__pyx_n_s__cg));
    PyList_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_n_s__cg));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__cg));
    __pyx_t_4 = __Pyx_Import(((PyObject *)__pyx_n_s_23), ((PyObject *)__pyx_t_6)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_4, __pyx_n_s__cg); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_v_cg);
    __pyx_v_cg = __pyx_t_6;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":758
 *         elif lib == "scipy":
 *             from scipy.sparse.linalg import cg
 *             from scipy.sparse.linalg import spsolve             # <<<<<<<<<<<<<<
 *             from numpy import array
 *             A = self.get_matrix()
 */
    __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __Pyx_INCREF(((PyObject *)__pyx_n_s__spsolve));
    PyList_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_n_s__spsolve));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__spsolve));
    __pyx_t_6 = __Pyx_Import(((PyObject *)__pyx_n_s_23), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetAttr(__pyx_t_6, __pyx_n_s__spsolve); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_v_spsolve);
    __pyx_v_spsolve = __pyx_t_4;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":759
 *             from scipy.sparse.linalg import cg
 *             from scipy.sparse.linalg import spsolve
 *             from numpy import array             # <<<<<<<<<<<<<<
 *             A = self.get_matrix()
 *             rhs = self.get_rhs()
 */
    __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_6));
    __Pyx_INCREF(((PyObject *)__pyx_n_s__array));
    PyList_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_n_s__array));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__array));
    __pyx_t_4 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), ((PyObject *)__pyx_t_6)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_4, __pyx_n_s__array); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_v_array);
    __pyx_v_array = __pyx_t_6;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":760
 *             from scipy.sparse.linalg import spsolve
 *             from numpy import array
 *             A = self.get_matrix()             # <<<<<<<<<<<<<<
 *             rhs = self.get_rhs()
 *             #x, res = cg(A, rhs)
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_matrix); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_A);
    __pyx_v_A = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":761
 *             from numpy import array
 *             A = self.get_matrix()
 *             rhs = self.get_rhs()             # <<<<<<<<<<<<<<
 *             #x, res = cg(A, rhs)
 *             x = spsolve(A, rhs)
 */
    __pyx_t_6 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_rhs); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyObject_Call(__pyx_t_6, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_v_rhs);
    __pyx_v_rhs = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":763
 *             rhs = self.get_rhs()
 *             #x, res = cg(A, rhs)
 *             x = spsolve(A, rhs)             # <<<<<<<<<<<<<<
 *             vec = array(x, dtype="double")
 *             pvec = <scalar *>vec.data
 */
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_A);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_A);
    __Pyx_GIVEREF(__pyx_v_A);
    __Pyx_INCREF(__pyx_v_rhs);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_rhs);
    __Pyx_GIVEREF(__pyx_v_rhs);
    __pyx_t_6 = PyObject_Call(__pyx_v_spsolve, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":764
 *             #x, res = cg(A, rhs)
 *             x = spsolve(A, rhs)
 *             vec = array(x, dtype="double")             # <<<<<<<<<<<<<<
 *             pvec = <scalar *>vec.data
 * 
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__dtype), ((PyObject *)__pyx_n_s__double)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = PyEval_CallObjectWithKeywords(__pyx_v_array, __pyx_t_6, ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_vec));
    __pyx_v_vec = ((PyArrayObject *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":765
 *             x = spsolve(A, rhs)
 *             vec = array(x, dtype="double")
 *             pvec = <scalar *>vec.data             # <<<<<<<<<<<<<<
 * 
 *             for i, sln in enumerate(args):
 */
    __pyx_v_pvec = ((scalar *)__pyx_v_vec->data);

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":767
 *             pvec = <scalar *>vec.data
 * 
 *             for i, sln in enumerate(args):             # <<<<<<<<<<<<<<
 *                 (<c_Solution *>((<Solution>sln).thisptr)).set_fe_solution(
 *                         self.thisptr.get_space(i),
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_2 = __pyx_int_0;
    if (likely(((PyObject *)__pyx_v_args) != Py_None)) {
      __pyx_t_1 = 0; __pyx_t_4 = ((PyObject *)__pyx_v_args); __Pyx_INCREF(__pyx_t_4);
    } else {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    for (;;) {
      if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_1); __Pyx_INCREF(__pyx_t_6); __pyx_t_1++;
      __Pyx_DECREF(__pyx_v_sln);
      __pyx_v_sln = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_v_i);
      __pyx_v_i = __pyx_t_2;
      __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":769
 *             for i, sln in enumerate(args):
 *                 (<c_Solution *>((<Solution>sln).thisptr)).set_fe_solution(
 *                         self.thisptr.get_space(i),             # <<<<<<<<<<<<<<
 *                         self.thisptr.get_pss(i),
 *                         pvec)
 */
      __pyx_t_7 = __Pyx_PyInt_AsInt(__pyx_v_i); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":770
 *                 (<c_Solution *>((<Solution>sln).thisptr)).set_fe_solution(
 *                         self.thisptr.get_space(i),
 *                         self.thisptr.get_pss(i),             # <<<<<<<<<<<<<<
 *                         pvec)
 *         else:
 */
      __pyx_t_8 = __Pyx_PyInt_AsInt(__pyx_v_i); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":771
 *                         self.thisptr.get_space(i),
 *                         self.thisptr.get_pss(i),
 *                         pvec)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError("Unknown library")
 */
      ((struct Solution *)((struct __pyx_obj_8hermes2d_9_hermes2d_Solution *)__pyx_v_sln)->__pyx_base.__pyx_base.__pyx_base.thisptr)->set_fe_solution(((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->get_space(__pyx_t_7), ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->get_pss(__pyx_t_8), __pyx_v_pvec);
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":773
 *                         pvec)
 *         else:
 *             raise NotImplementedError("Unknown library")             # <<<<<<<<<<<<<<
 * 
 *     def assemble(self):
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_24));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_kp_s_24));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_24));
    __pyx_t_4 = PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.solve_system");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF((PyObject *)__pyx_v_s0);
  __Pyx_DECREF((PyObject *)__pyx_v_s1);
  __Pyx_DECREF((PyObject *)__pyx_v_s2);
  __Pyx_DECREF((PyObject *)__pyx_v_s3);
  __Pyx_DECREF((PyObject *)__pyx_v_vec);
  __Pyx_DECREF(__pyx_v_cg);
  __Pyx_DECREF(__pyx_v_spsolve);
  __Pyx_DECREF(__pyx_v_array);
  __Pyx_DECREF(__pyx_v_A);
  __Pyx_DECREF(__pyx_v_rhs);
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_i);
  __Pyx_DECREF(__pyx_v_sln);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_DECREF(__pyx_v_lib);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":775
 *             raise NotImplementedError("Unknown library")
 * 
 *     def assemble(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.assemble()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_assemble(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_assemble(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("assemble");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":776
 * 
 *     def assemble(self):
 *         self.thisptr.assemble()             # <<<<<<<<<<<<<<
 * 
 *     def get_matrix_csc(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->assemble();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":778
 *         self.thisptr.assemble()
 * 
 *     def get_matrix_csc(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns the matrix A as a (Ap, Ai, Ax) tuple.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix_csc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_matrix_csc[] = "\n        Returns the matrix A as a (Ap, Ai, Ax) tuple.\n\n        See also DiscreteProblem.get_matrix() to get a SciPy matrix.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix_csc(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  int *__pyx_v_Ap;
  int *__pyx_v_Ai;
  int __pyx_v_n;
  int __pyx_v_nnz;
  scalar *__pyx_v_Ax;
  PyObject *__pyx_v_aAp;
  PyObject *__pyx_v_aAi;
  PyObject *__pyx_v_aAx;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_matrix_csc");
  __pyx_v_aAp = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_aAi = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_aAx = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":786
 *         cdef int *Ap, *Ai, n, nnz
 *         cdef scalar *Ax
 *         self.thisptr.get_matrix(Ap, Ai, Ax, n)             # <<<<<<<<<<<<<<
 *         nnz = Ap[n]
 *         aAp = c2numpy_int(Ap, n+1)
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->get_matrix(__pyx_v_Ap, __pyx_v_Ai, __pyx_v_Ax, __pyx_v_n);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":787
 *         cdef scalar *Ax
 *         self.thisptr.get_matrix(Ap, Ai, Ax, n)
 *         nnz = Ap[n]             # <<<<<<<<<<<<<<
 *         aAp = c2numpy_int(Ap, n+1)
 *         aAi = c2numpy_int(Ai, nnz)
 */
  __pyx_v_nnz = (__pyx_v_Ap[__pyx_v_n]);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":788
 *         self.thisptr.get_matrix(Ap, Ai, Ax, n)
 *         nnz = Ap[n]
 *         aAp = c2numpy_int(Ap, n+1)             # <<<<<<<<<<<<<<
 *         aAi = c2numpy_int(Ai, nnz)
 *         aAx = c2numpy_double(Ax, nnz)
 */
  __pyx_t_1 = c2numpy_int(__pyx_v_Ap, (__pyx_v_n + 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_aAp);
  __pyx_v_aAp = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":789
 *         nnz = Ap[n]
 *         aAp = c2numpy_int(Ap, n+1)
 *         aAi = c2numpy_int(Ai, nnz)             # <<<<<<<<<<<<<<
 *         aAx = c2numpy_double(Ax, nnz)
 *         return aAp, aAi, aAx
 */
  __pyx_t_1 = c2numpy_int(__pyx_v_Ai, __pyx_v_nnz); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_aAi);
  __pyx_v_aAi = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":790
 *         aAp = c2numpy_int(Ap, n+1)
 *         aAi = c2numpy_int(Ai, nnz)
 *         aAx = c2numpy_double(Ax, nnz)             # <<<<<<<<<<<<<<
 *         return aAp, aAi, aAx
 * 
 */
  __pyx_t_1 = c2numpy_double(__pyx_v_Ax, __pyx_v_nnz); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_aAx);
  __pyx_v_aAx = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":791
 *         aAi = c2numpy_int(Ai, nnz)
 *         aAx = c2numpy_double(Ax, nnz)
 *         return aAp, aAi, aAx             # <<<<<<<<<<<<<<
 * 
 *     def get_matrix(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_aAp);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_aAp);
  __Pyx_GIVEREF(__pyx_v_aAp);
  __Pyx_INCREF(__pyx_v_aAi);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_aAi);
  __Pyx_GIVEREF(__pyx_v_aAi);
  __Pyx_INCREF(__pyx_v_aAx);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_aAx);
  __Pyx_GIVEREF(__pyx_v_aAx);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.get_matrix_csc");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_aAp);
  __Pyx_DECREF(__pyx_v_aAi);
  __Pyx_DECREF(__pyx_v_aAx);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":793
 *         return aAp, aAi, aAx
 * 
 *     def get_matrix(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns the global matrix A as a SciPy matrix.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_matrix[] = "\n        Returns the global matrix A as a SciPy matrix.\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_csc_matrix;
  PyObject *__pyx_v_Ap;
  PyObject *__pyx_v_Ai;
  PyObject *__pyx_v_Ax;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("get_matrix");
  __pyx_v_csc_matrix = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_Ap = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_Ai = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_Ax = Py_None; __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":797
 *         Returns the global matrix A as a SciPy matrix.
 *         """
 *         from scipy.sparse import csc_matrix             # <<<<<<<<<<<<<<
 *         Ap, Ai, Ax = self.get_matrix_csc()
 *         return csc_matrix((Ax, Ai, Ap))
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__csc_matrix));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__csc_matrix));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__csc_matrix));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s_25), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__csc_matrix); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_v_csc_matrix);
  __pyx_v_csc_matrix = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":798
 *         """
 *         from scipy.sparse import csc_matrix
 *         Ap, Ai, Ax = self.get_matrix_csc()             # <<<<<<<<<<<<<<
 *         return csc_matrix((Ax, Ai, Ap))
 * 
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_matrix_csc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyTuple_CheckExact(__pyx_t_1) && likely(PyTuple_GET_SIZE(__pyx_t_1) == 3)) {
    PyObject* tuple = __pyx_t_1;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_Ap);
    __pyx_v_Ap = __pyx_t_2;
    __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_Ai);
    __pyx_v_Ai = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_Ax);
    __pyx_v_Ax = __pyx_t_4;
    __pyx_t_4 = 0;
  } else {
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = __Pyx_UnpackItem(__pyx_t_5, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_UnpackItem(__pyx_t_5, 1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_UnpackItem(__pyx_t_5, 2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_EndUnpack(__pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_v_Ap);
    __pyx_v_Ap = __pyx_t_2;
    __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_Ai);
    __pyx_v_Ai = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_Ax);
    __pyx_v_Ax = __pyx_t_4;
    __pyx_t_4 = 0;
  }

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":799
 *         from scipy.sparse import csc_matrix
 *         Ap, Ai, Ax = self.get_matrix_csc()
 *         return csc_matrix((Ax, Ai, Ap))             # <<<<<<<<<<<<<<
 * 
 *     def get_rhs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_Ax);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_Ax);
  __Pyx_GIVEREF(__pyx_v_Ax);
  __Pyx_INCREF(__pyx_v_Ai);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_Ai);
  __Pyx_GIVEREF(__pyx_v_Ai);
  __Pyx_INCREF(__pyx_v_Ap);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_Ap);
  __Pyx_GIVEREF(__pyx_v_Ap);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_v_csc_matrix, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.get_matrix");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_csc_matrix);
  __Pyx_DECREF(__pyx_v_Ap);
  __Pyx_DECREF(__pyx_v_Ai);
  __Pyx_DECREF(__pyx_v_Ax);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":801
 *         return csc_matrix((Ax, Ai, Ap))
 * 
 *     def get_rhs(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the RHS as a numpy array
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_rhs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_rhs[] = "\n        Return the RHS as a numpy array\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_rhs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  scalar *__pyx_v_rhs;
  int __pyx_v_n;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_rhs");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":807
 *         cdef scalar *rhs
 *         cdef int n
 *         self.thisptr.get_rhs(rhs, n)             # <<<<<<<<<<<<<<
 *         return c2numpy_double(rhs, n)
 * 
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)__pyx_v_self)->thisptr->get_rhs(__pyx_v_rhs, __pyx_v_n);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":808
 *         cdef int n
 *         self.thisptr.get_rhs(rhs, n)
 *         return c2numpy_double(rhs, n)             # <<<<<<<<<<<<<<
 * 
 * cdef class RefSystem(LinSystem):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = c2numpy_double(__pyx_v_rhs, __pyx_v_n); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.LinSystem.get_rhs");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":812
 * cdef class RefSystem(LinSystem):
 * 
 *     def __init__(self, LinSystem ls):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_LinSystem *>new_RefSystem(ls.thisptr)
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9RefSystem___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9RefSystem___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *__pyx_v_ls = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__ls,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__ls);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_ls = ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_ls = ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.RefSystem.__init__");
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ls), __pyx_ptype_8hermes2d_9_hermes2d_LinSystem, 1, "ls", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":813
 * 
 *     def __init__(self, LinSystem ls):
 *         self.thisptr = <c_LinSystem *>new_RefSystem(ls.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def assemble(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_RefSystem *)__pyx_v_self)->__pyx_base.thisptr = ((struct LinSystem *)new RefSystem(__pyx_v_ls->thisptr));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.RefSystem.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":815
 *         self.thisptr = <c_LinSystem *>new_RefSystem(ls.thisptr)
 * 
 *     def assemble(self):             # <<<<<<<<<<<<<<
 *         (<c_RefSystem *>(self.thisptr)).assemble()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9RefSystem_assemble(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9RefSystem_assemble(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("assemble");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":816
 * 
 *     def assemble(self):
 *         (<c_RefSystem *>(self.thisptr)).assemble()             # <<<<<<<<<<<<<<
 * 
 *     # this is commented out, because get_ref_space() is not yet implemented in
 */
  ((struct RefSystem *)((struct __pyx_obj_8hermes2d_9_hermes2d_RefSystem *)__pyx_v_self)->__pyx_base.thisptr)->assemble();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":952
 *     cdef c_L2OrthoHP *thisptr
 * 
 *     def __cinit__(self, *args):             # <<<<<<<<<<<<<<
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  int __pyx_v_n;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_a;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_b;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_c;
  int __pyx_r;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":953
 * 
 *     def __cinit__(self, *args):
 *         cdef int n = len(args)             # <<<<<<<<<<<<<<
 *         cdef H1Space a, b, c
 *         if n == 1:
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); 
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":955
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c
 *         if n == 1:             # <<<<<<<<<<<<<<
 *             a = args[0]
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr)
 */
  switch (__pyx_v_n) {
    case 1:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":956
 *         cdef H1Space a, b, c
 *         if n == 1:
 *             a = args[0]             # <<<<<<<<<<<<<<
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr)
 *         elif n == 2:
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_a));
    __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":957
 *         if n == 1:
 *             a = args[0]
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 2:
 *             a, b = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr = new L2OrthoHP(__pyx_v_n, __pyx_v_a->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":958
 *             a = args[0]
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr)
 *         elif n == 2:             # <<<<<<<<<<<<<<
 *             a, b = args
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr)
 */
    case 2:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":959
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr)
 *         elif n == 2:
 *             a, b = args             # <<<<<<<<<<<<<<
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 2);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":960
 *         elif n == 2:
 *             a, b = args
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 3:
 *             a, b, c = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr = new L2OrthoHP(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":961
 *             a, b = args
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:             # <<<<<<<<<<<<<<
 *             a, b, c = args
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 */
    case 3:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":962
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 *             a, b, c = args             # <<<<<<<<<<<<<<
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 *         else:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 3)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_c));
      __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_4);
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 3);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":963
 *         elif n == 3:
 *             a, b, c = args
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError()
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr = new L2OrthoHP(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr, __pyx_v_c->thisptr);
    break;
    default:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":965
 *             self.thisptr = new_L2OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 *         else:
 *             raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("hermes2d._hermes2d.L2OrthoHP.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF((PyObject *)__pyx_v_a);
  __Pyx_DECREF((PyObject *)__pyx_v_b);
  __Pyx_DECREF((PyObject *)__pyx_v_c);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":967
 *             raise NotImplementedError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":968
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def calc_error(self, MeshFunction sln, MeshFunction rsln):
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":970
 *         delete(self.thisptr)
 * 
 *     def calc_error(self, MeshFunction sln, MeshFunction rsln):             # <<<<<<<<<<<<<<
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_calc_error(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_calc_error(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_rsln = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln,&__pyx_n_s__rsln,0};
  __Pyx_RefNannySetupContext("calc_error");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rsln);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 970; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_error") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 970; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_rsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_rsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_error", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 970; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.L2OrthoHP.calc_error");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rsln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "rsln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":971
 * 
 *     def calc_error(self, MeshFunction sln, MeshFunction rsln):
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr->calc_error(__pyx_v_sln->__pyx_base.__pyx_base.thisptr, __pyx_v_rsln->__pyx_base.__pyx_base.thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.L2OrthoHP.calc_error");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":973
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.adapt(thr, strat, h_only)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_adapt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_adapt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_thr;
  int __pyx_v_strat;
  PyObject *__pyx_v_h_only = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__thr,&__pyx_n_s__strat,&__pyx_n_s__h_only,0};
  __Pyx_RefNannySetupContext("adapt");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = __pyx_k_26;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__thr);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strat);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__h_only);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "adapt") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_thr = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_thr == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_strat = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_strat == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_strat = ((int)0);
    }
    __pyx_v_h_only = values[2];
  } else {
    __pyx_v_strat = ((int)0);
    __pyx_v_h_only = __pyx_k_26;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_h_only = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_strat = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_strat == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_thr = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_thr == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("adapt", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.L2OrthoHP.adapt");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":974
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):
 *         self.thisptr.adapt(thr, strat, h_only)             # <<<<<<<<<<<<<<
 * 
 * cdef class H1OrthoHP:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_h_only); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP *)__pyx_v_self)->thisptr->adapt(__pyx_v_thr, __pyx_v_strat, __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.L2OrthoHP.adapt");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":979
 *     #cdef c_H1OrthoHP *thisptr
 * 
 *     def __cinit__(self, *args):             # <<<<<<<<<<<<<<
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c, d
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  int __pyx_v_n;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_a;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_b;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_c;
  struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *__pyx_v_d;
  int __pyx_r;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_d = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)Py_None); __Pyx_INCREF(Py_None);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":980
 * 
 *     def __cinit__(self, *args):
 *         cdef int n = len(args)             # <<<<<<<<<<<<<<
 *         cdef H1Space a, b, c, d
 *         if n == 1:
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 980; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)); 
  __pyx_v_n = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":982
 *         cdef int n = len(args)
 *         cdef H1Space a, b, c, d
 *         if n == 1:             # <<<<<<<<<<<<<<
 *             a = args[0]
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr)
 */
  switch (__pyx_v_n) {
    case 1:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":983
 *         cdef H1Space a, b, c, d
 *         if n == 1:
 *             a = args[0]             # <<<<<<<<<<<<<<
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr)
 *         elif n == 2:
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_args), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_a));
    __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":984
 *         if n == 1:
 *             a = args[0]
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 2:
 *             a, b = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr = new H1OrthoHP(__pyx_v_n, __pyx_v_a->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":985
 *             a = args[0]
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr)
 *         elif n == 2:             # <<<<<<<<<<<<<<
 *             a, b = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr)
 */
    case 2:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":986
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr)
 *         elif n == 2:
 *             a, b = args             # <<<<<<<<<<<<<<
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 2);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":987
 *         elif n == 2:
 *             a, b = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 3:
 *             a, b, c = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr = new H1OrthoHP(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":988
 *             a, b = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:             # <<<<<<<<<<<<<<
 *             a, b, c = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 */
    case 3:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":989
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr)
 *         elif n == 3:
 *             a, b, c = args             # <<<<<<<<<<<<<<
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 *         elif n == 4:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 3)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_4);
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_c));
      __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_4);
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 3);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":990
 *         elif n == 3:
 *             a, b, c = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)             # <<<<<<<<<<<<<<
 *         elif n == 4:
 *             a, b, c, d = args
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr = new H1OrthoHP(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr, __pyx_v_c->thisptr);
    break;

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":991
 *             a, b, c = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 *         elif n == 4:             # <<<<<<<<<<<<<<
 *             a, b, c, d = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr, d.thisptr)
 */
    case 4:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":992
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr)
 *         elif n == 4:
 *             a, b, c, d = args             # <<<<<<<<<<<<<<
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr, d.thisptr)
 *         else:
 */
    if (likely(((PyObject *)__pyx_v_args) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_args)) == 4)) {
      PyObject* tuple = ((PyObject *)__pyx_v_args);
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_4);
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_5 = PyTuple_GET_ITEM(tuple, 3); __Pyx_INCREF(__pyx_t_5);
      if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_8hermes2d_9_hermes2d_H1Space))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_a));
      __pyx_v_a = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_4);
      __pyx_t_4 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_b));
      __pyx_v_b = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_c));
      __pyx_v_c = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_d));
      __pyx_v_d = ((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_t_5);
      __pyx_t_5 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_args), 4);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":993
 *         elif n == 4:
 *             a, b, c, d = args
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr, d.thisptr)             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError()
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr = new H1OrthoHP(__pyx_v_n, __pyx_v_a->thisptr, __pyx_v_b->thisptr, __pyx_v_c->thisptr, __pyx_v_d->thisptr);
    break;
    default:

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":995
 *             self.thisptr = new_H1OrthoHP(n, a.thisptr, b.thisptr, c.thisptr, d.thisptr)
 *         else:
 *             raise NotImplementedError()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_5 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_Raise(__pyx_t_5, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF((PyObject *)__pyx_v_a);
  __Pyx_DECREF((PyObject *)__pyx_v_b);
  __Pyx_DECREF((PyObject *)__pyx_v_c);
  __Pyx_DECREF((PyObject *)__pyx_v_d);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":997
 *             raise NotImplementedError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":998
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1001
 * 
 * 
 *     def calc_error(self, MeshFunction sln, MeshFunction rsln):             # <<<<<<<<<<<<<<
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_rsln = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln,&__pyx_n_s__rsln,0};
  __Pyx_RefNannySetupContext("calc_error");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rsln);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_error") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_rsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_rsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_error", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rsln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "rsln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1002
 * 
 *     def calc_error(self, MeshFunction sln, MeshFunction rsln):
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def calc_error_2(self, MeshFunction sln1, MeshFunction sln2, MeshFunction rsln1, MeshFunction rsln2):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr->calc_error(__pyx_v_sln->__pyx_base.__pyx_base.thisptr, __pyx_v_rsln->__pyx_base.__pyx_base.thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1004
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)
 * 
 *     def calc_error_2(self, MeshFunction sln1, MeshFunction sln2, MeshFunction rsln1, MeshFunction rsln2):             # <<<<<<<<<<<<<<
 *         return self.thisptr.calc_error_2(sln1.thisptr, sln2.thisptr, rsln1.thisptr, rsln2.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln2 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_rsln1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_rsln2 = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln1,&__pyx_n_s__sln2,&__pyx_n_s__rsln1,&__pyx_n_s__rsln2,0};
  __Pyx_RefNannySetupContext("calc_error_2");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error_2", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rsln1);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error_2", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rsln2);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error_2", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_error_2") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    __pyx_v_rsln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[2]);
    __pyx_v_rsln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[3]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_sln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_rsln1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 2));
    __pyx_v_rsln2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 3));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_error_2", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error_2");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rsln1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "rsln1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rsln2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "rsln2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1005
 * 
 *     def calc_error_2(self, MeshFunction sln1, MeshFunction sln2, MeshFunction rsln1, MeshFunction rsln2):
 *         return self.thisptr.calc_error_2(sln1.thisptr, sln2.thisptr, rsln1.thisptr, rsln2.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def calc_error_4(self, sln_list, rsln_list):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr->calc_error_2(__pyx_v_sln1->__pyx_base.__pyx_base.thisptr, __pyx_v_sln2->__pyx_base.__pyx_base.thisptr, __pyx_v_rsln1->__pyx_base.__pyx_base.thisptr, __pyx_v_rsln2->__pyx_base.__pyx_base.thisptr)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error_2");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1007
 *         return self.thisptr.calc_error_2(sln1.thisptr, sln2.thisptr, rsln1.thisptr, rsln2.thisptr)
 * 
 *     def calc_error_4(self, sln_list, rsln_list):             # <<<<<<<<<<<<<<
 *         return self.thisptr.calc_error_n(4,
 *                 (<MeshFunction>(sln_list[0])).thisptr,
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sln_list = 0;
  PyObject *__pyx_v_rsln_list = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln_list,&__pyx_n_s__rsln_list,0};
  __Pyx_RefNannySetupContext("calc_error_4");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln_list);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rsln_list);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("calc_error_4", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "calc_error_4") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln_list = values[0];
    __pyx_v_rsln_list = values[1];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_sln_list = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_rsln_list = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_error_4", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error_4");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1008
 * 
 *     def calc_error_4(self, sln_list, rsln_list):
 *         return self.thisptr.calc_error_n(4,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(sln_list[0])).thisptr,
 *                 (<MeshFunction>(sln_list[1])).thisptr,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1009
 *     def calc_error_4(self, sln_list, rsln_list):
 *         return self.thisptr.calc_error_n(4,
 *                 (<MeshFunction>(sln_list[0])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(sln_list[1])).thisptr,
 *                 (<MeshFunction>(sln_list[2])).thisptr,
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_sln_list, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1010
 *         return self.thisptr.calc_error_n(4,
 *                 (<MeshFunction>(sln_list[0])).thisptr,
 *                 (<MeshFunction>(sln_list[1])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(sln_list[2])).thisptr,
 *                 (<MeshFunction>(sln_list[3])).thisptr,
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_sln_list, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1011
 *                 (<MeshFunction>(sln_list[0])).thisptr,
 *                 (<MeshFunction>(sln_list[1])).thisptr,
 *                 (<MeshFunction>(sln_list[2])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(sln_list[3])).thisptr,
 *                 (<MeshFunction>(rsln_list[0])).thisptr,
 */
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_sln_list, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1012
 *                 (<MeshFunction>(sln_list[1])).thisptr,
 *                 (<MeshFunction>(sln_list[2])).thisptr,
 *                 (<MeshFunction>(sln_list[3])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(rsln_list[0])).thisptr,
 *                 (<MeshFunction>(rsln_list[1])).thisptr,
 */
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_sln_list, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1013
 *                 (<MeshFunction>(sln_list[2])).thisptr,
 *                 (<MeshFunction>(sln_list[3])).thisptr,
 *                 (<MeshFunction>(rsln_list[0])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(rsln_list[1])).thisptr,
 *                 (<MeshFunction>(rsln_list[2])).thisptr,
 */
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_rsln_list, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1014
 *                 (<MeshFunction>(sln_list[3])).thisptr,
 *                 (<MeshFunction>(rsln_list[0])).thisptr,
 *                 (<MeshFunction>(rsln_list[1])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(rsln_list[2])).thisptr,
 *                 (<MeshFunction>(rsln_list[3])).thisptr,
 */
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_rsln_list, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_6) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1015
 *                 (<MeshFunction>(rsln_list[0])).thisptr,
 *                 (<MeshFunction>(rsln_list[1])).thisptr,
 *                 (<MeshFunction>(rsln_list[2])).thisptr,             # <<<<<<<<<<<<<<
 *                 (<MeshFunction>(rsln_list[3])).thisptr,
 *                 )
 */
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_rsln_list, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1016
 *                 (<MeshFunction>(rsln_list[1])).thisptr,
 *                 (<MeshFunction>(rsln_list[2])).thisptr,
 *                 (<MeshFunction>(rsln_list[3])).thisptr,             # <<<<<<<<<<<<<<
 *                 )
 * 
 */
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_rsln_list, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_8) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr->calc_error_n(4, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_1)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_2)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_3)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_4)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_5)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_6)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_7)->__pyx_base.__pyx_base.thisptr, ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_t_8)->__pyx_base.__pyx_base.thisptr)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_r = __pyx_t_9;
  __pyx_t_9 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.calc_error_4");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1019
 *                 )
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.adapt(thr, strat, h_only)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_adapt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_adapt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_thr;
  int __pyx_v_strat;
  PyObject *__pyx_v_h_only = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__thr,&__pyx_n_s__strat,&__pyx_n_s__h_only,0};
  __Pyx_RefNannySetupContext("adapt");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = __pyx_k_27;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__thr);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strat);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__h_only);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "adapt") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_thr = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_thr == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_strat = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_strat == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_strat = ((int)0);
    }
    __pyx_v_h_only = values[2];
  } else {
    __pyx_v_strat = ((int)0);
    __pyx_v_h_only = __pyx_k_27;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_h_only = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_strat = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_strat == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_thr = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_thr == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("adapt", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.adapt");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1020
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):
 *         self.thisptr.adapt(thr, strat, h_only)             # <<<<<<<<<<<<<<
 * 
 * cdef class Linearizer:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_h_only); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP *)__pyx_v_self)->thisptr->adapt(__pyx_v_thr, __pyx_v_strat, __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.H1OrthoHP.adapt");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1058
 *     """
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new_Linearizer()
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10Linearizer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10Linearizer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1059
 * 
 *     def __cinit__(self):
 *         self.thisptr = new_Linearizer()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr = new Linearizer();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1061
 *         self.thisptr = new_Linearizer()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete(self.thisptr)
 * 
 */

static void __pyx_pf_8hermes2d_9_hermes2d_10Linearizer___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8hermes2d_9_hermes2d_10Linearizer___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1062
 * 
 *     def __dealloc__(self):
 *         delete(self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def process_solution(self, MeshFunction sln):
 */
  delete(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr);

  __Pyx_RefNannyFinishContext();
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1064
 *         delete(self.thisptr)
 * 
 *     def process_solution(self, MeshFunction sln):             # <<<<<<<<<<<<<<
 *         self.thisptr.process_solution(<c_MeshFunction *>sln.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_process_solution(PyObject *__pyx_v_self, PyObject *__pyx_v_sln); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_process_solution(PyObject *__pyx_v_self, PyObject *__pyx_v_sln) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("process_solution");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1065
 * 
 *     def process_solution(self, MeshFunction sln):
 *         self.thisptr.process_solution(<c_MeshFunction *>sln.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def get_vertices(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->process_solution(((struct MeshFunction *)((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)__pyx_v_sln)->__pyx_base.__pyx_base.thisptr));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.process_solution");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1067
 *         self.thisptr.process_solution(<c_MeshFunction *>sln.thisptr)
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns the list of vertices.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_vertices[] = "\n        Returns the list of vertices.\n\n        It's a list of triples, where each triple contains (x, y, val), where\n        x, y are the \"x\" and \"y\" coordinates of the vertex and \"val\" is the\n        value of the solution at the vertex.\n\n        Example::\n\n            In [45]: l.get_vertices()\n            Out[45]:\n            array([[  0.00000000e+00,  -1.00000000e+00,  -2.22396971e-17],\n                   [  1.00000000e+00,  -1.00000000e+00,  -1.64798730e-17],\n                   [ -1.00000000e+00,   0.00000000e+00,   8.09899023e-17],\n                   ...,\n                   [  1.48437500e-01,  -1.56250000e-02,   1.62359362e-01],\n                   [  1.32812500e-01,   0.00000000e+00,   1.56012622e-01],\n                   [  1.32812500e-01,  -1.56250000e-02,   1.50562411e-01]])\n\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  double3 *__pyx_v_vert;
  int __pyx_v_nvert;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_vertices");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1088
 * 
 *         """
 *         cdef double3 *vert = self.thisptr.get_vertices()             # <<<<<<<<<<<<<<
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 3*nvert)
 */
  __pyx_v_vert = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_vertices();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1089
 *         """
 *         cdef double3 *vert = self.thisptr.get_vertices()
 *         cdef int nvert = self.thisptr.get_num_vertices()             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 3*nvert)
 *         return vec.reshape((nvert, 3))
 */
  __pyx_v_nvert = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_vertices();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1090
 *         cdef double3 *vert = self.thisptr.get_vertices()
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 3*nvert)             # <<<<<<<<<<<<<<
 *         return vec.reshape((nvert, 3))
 * 
 */
  __pyx_t_1 = c2numpy_double(((double *)__pyx_v_vert), (3 * __pyx_v_nvert)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1091
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 3*nvert)
 *         return vec.reshape((nvert, 3))             # <<<<<<<<<<<<<<
 * 
 *     def get_num_vertices(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_nvert); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_vertices");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1093
 *         return vec.reshape((nvert, 3))
 * 
 *     def get_num_vertices(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_vertices()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_num_vertices");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1094
 * 
 *     def get_num_vertices(self):
 *         return self.thisptr.get_num_vertices()             # <<<<<<<<<<<<<<
 * 
 *     def get_triangles(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_vertices()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_num_vertices");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1096
 *         return self.thisptr.get_num_vertices()
 * 
 *     def get_triangles(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a list of triangles.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_triangles[] = "\n        Returns a list of triangles.\n\n        The list contains triples of vertices IDs. Use get_vertices() to obtain\n        vertices coordinates.\n\n        Example::\n\n            In [46]: l.get_triangles()\n            Out[46]:\n            array([[   3, 5448,   29],\n                   [  27, 5445,   28],\n                   [  29,   28,   26],\n                   ...,\n                   [5499, 5498, 5479],\n                   [5510, 5493, 5491],\n                   [5513, 5508, 5491]], dtype=int32)\n\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  int3 *__pyx_v_tri;
  int __pyx_v_ntri;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_triangles");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1116
 * 
 *         """
 *         cdef int3 *tri = self.thisptr.get_triangles()             # <<<<<<<<<<<<<<
 *         cdef int ntri = self.thisptr.get_num_triangles()
 *         cdef ndarray vec = c2numpy_int(<int *>tri, 3*ntri)
 */
  __pyx_v_tri = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_triangles();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1117
 *         """
 *         cdef int3 *tri = self.thisptr.get_triangles()
 *         cdef int ntri = self.thisptr.get_num_triangles()             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_int(<int *>tri, 3*ntri)
 *         return vec.reshape((ntri, 3))
 */
  __pyx_v_ntri = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_triangles();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1118
 *         cdef int3 *tri = self.thisptr.get_triangles()
 *         cdef int ntri = self.thisptr.get_num_triangles()
 *         cdef ndarray vec = c2numpy_int(<int *>tri, 3*ntri)             # <<<<<<<<<<<<<<
 *         return vec.reshape((ntri, 3))
 * 
 */
  __pyx_t_1 = c2numpy_int(((int *)__pyx_v_tri), (3 * __pyx_v_ntri)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1119
 *         cdef int ntri = self.thisptr.get_num_triangles()
 *         cdef ndarray vec = c2numpy_int(<int *>tri, 3*ntri)
 *         return vec.reshape((ntri, 3))             # <<<<<<<<<<<<<<
 * 
 *     def get_num_triangles(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_ntri); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_triangles");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1121
 *         return vec.reshape((ntri, 3))
 * 
 *     def get_num_triangles(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_triangles()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_triangles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_num_triangles");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1122
 * 
 *     def get_num_triangles(self):
 *         return self.thisptr.get_num_triangles()             # <<<<<<<<<<<<<<
 * 
 *     def get_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_triangles()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_num_triangles");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1124
 *         return self.thisptr.get_num_triangles()
 * 
 *     def get_edges(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a list of edges.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_edges[] = "\n        Returns a list of edges.\n\n        The list contains triples of vertices IDs. Use get_vertices() to obtain\n        vertices coordinates.\n\n        Example::\n\n            In [47]: l.get_edges()\n            Out[47]:\n            array([[   3,   27,    0],\n                   [  27,   24,    0],\n                   [  24,   30,    0],\n                   ...,\n                   [5339, 5070,    4],\n                   [5070, 5077,    4],\n                   [5077,   11,    4]], dtype=int32)\n\n        ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  int3 *__pyx_v_edges;
  int __pyx_v_nedges;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_edges");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1144
 * 
 *         """
 *         cdef int3 *edges = self.thisptr.get_edges()             # <<<<<<<<<<<<<<
 *         cdef int nedges = self.thisptr.get_num_edges()
 *         cdef ndarray vec = c2numpy_int(<int *>edges, 3*nedges)
 */
  __pyx_v_edges = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_edges();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1145
 *         """
 *         cdef int3 *edges = self.thisptr.get_edges()
 *         cdef int nedges = self.thisptr.get_num_edges()             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_int(<int *>edges, 3*nedges)
 *         return vec.reshape((nedges, 3))
 */
  __pyx_v_nedges = ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_edges();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1146
 *         cdef int3 *edges = self.thisptr.get_edges()
 *         cdef int nedges = self.thisptr.get_num_edges()
 *         cdef ndarray vec = c2numpy_int(<int *>edges, 3*nedges)             # <<<<<<<<<<<<<<
 *         return vec.reshape((nedges, 3))
 * 
 */
  __pyx_t_1 = c2numpy_int(((int *)__pyx_v_edges), (3 * __pyx_v_nedges)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1147
 *         cdef int nedges = self.thisptr.get_num_edges()
 *         cdef ndarray vec = c2numpy_int(<int *>edges, 3*nedges)
 *         return vec.reshape((nedges, 3))             # <<<<<<<<<<<<<<
 * 
 *     def get_num_edges(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_nedges); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_edges");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1149
 *         return vec.reshape((nedges, 3))
 * 
 *     def get_num_edges(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_edges()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_edges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_num_edges");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1150
 * 
 *     def get_num_edges(self):
 *         return self.thisptr.get_num_edges()             # <<<<<<<<<<<<<<
 * 
 *     def get_min_value(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_num_edges()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_num_edges");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1152
 *         return self.thisptr.get_num_edges()
 * 
 *     def get_min_value(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_min_value()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_min_value(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_min_value(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_min_value");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1153
 * 
 *     def get_min_value(self):
 *         return self.thisptr.get_min_value()             # <<<<<<<<<<<<<<
 * 
 *     def get_max_value(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_min_value()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_min_value");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1155
 *         return self.thisptr.get_min_value()
 * 
 *     def get_max_value(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_max_value()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_max_value(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_max_value(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_max_value");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1156
 * 
 *     def get_max_value(self):
 *         return self.thisptr.get_max_value()             # <<<<<<<<<<<<<<
 * 
 *     def save_data(self, char* filename):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->get_max_value()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.get_max_value");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1158
 *         return self.thisptr.get_max_value()
 * 
 *     def save_data(self, char* filename):             # <<<<<<<<<<<<<<
 *         self.thisptr.save_data(filename)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_save_data(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_save_data(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save_data");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.save_data");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1159
 * 
 *     def save_data(self, char* filename):
 *         self.thisptr.save_data(filename)             # <<<<<<<<<<<<<<
 * 
 *     def load_data(self, char* filename):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->save_data(__pyx_v_filename);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1161
 *         self.thisptr.save_data(filename)
 * 
 *     def load_data(self, char* filename):             # <<<<<<<<<<<<<<
 *         self.thisptr.load_data(filename)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_load_data(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_load_data(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("load_data");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Linearizer.load_data");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1162
 * 
 *     def load_data(self, char* filename):
 *         self.thisptr.load_data(filename)             # <<<<<<<<<<<<<<
 * 
 * cdef class Vectorizer(Linearizer):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer *)__pyx_v_self)->thisptr->load_data(__pyx_v_filename);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1166
 * cdef class Vectorizer(Linearizer):
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Linearizer *>new_Vectorizer()
 * 
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10Vectorizer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10Vectorizer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1167
 * 
 *     def __cinit__(self):
 *         self.thisptr = <c_Linearizer *>new_Vectorizer()             # <<<<<<<<<<<<<<
 * 
 *     # this segfaults:
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer *)__pyx_v_self)->__pyx_base.thisptr = ((struct Linearizer *)new Vectorizer());

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1173
 *     #    delete(<c_Vectorizer *>(self.thisptr))
 * 
 *     def process_solution(self, MeshFunction xsln, MeshFunction ysln,             # <<<<<<<<<<<<<<
 *             int xitem=c_H2D_FN_VAL_0, int yitem=c_H2D_FN_VAL_0, double eps=c_H2D_EPS_LOW):
 *         (<c_Vectorizer *>(self.thisptr)).process_solution(
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_process_solution(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_process_solution(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_xsln = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_ysln = 0;
  int __pyx_v_xitem;
  int __pyx_v_yitem;
  double __pyx_v_eps;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__xsln,&__pyx_n_s__ysln,&__pyx_n_s__xitem,&__pyx_n_s__yitem,&__pyx_n_s__eps,0};
  __Pyx_RefNannySetupContext("process_solution");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__xsln);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__ysln);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("process_solution", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__xitem);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__yitem);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__eps);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "process_solution") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_xsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_ysln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    if (values[2]) {
      __pyx_v_xitem = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_xitem == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_xitem = __pyx_k_28;
    }
    if (values[3]) {
      __pyx_v_yitem = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_yitem == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_yitem = __pyx_k_29;
    }
    if (values[4]) {
      __pyx_v_eps = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_eps == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_eps = __pyx_k_30;
    }
  } else {
    __pyx_v_xitem = __pyx_k_28;
    __pyx_v_yitem = __pyx_k_29;
    __pyx_v_eps = __pyx_k_30;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5:
      __pyx_v_eps = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_eps == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4:
      __pyx_v_yitem = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_yitem == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_xitem = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_xitem == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_ysln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_xsln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("process_solution", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Vectorizer.process_solution");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xsln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "xsln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ysln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "ysln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1178
 *                 <c_MeshFunction *>xsln.thisptr, xitem,
 *                 <c_MeshFunction *>ysln.thisptr, yitem,
 *                 eps)             # <<<<<<<<<<<<<<
 * 
 *     def get_vertices(self):
 */
  ((struct Vectorizer *)((struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer *)__pyx_v_self)->__pyx_base.thisptr)->process_solution(((struct MeshFunction *)__pyx_v_xsln->__pyx_base.__pyx_base.thisptr), __pyx_v_xitem, ((struct MeshFunction *)__pyx_v_ysln->__pyx_base.__pyx_base.thisptr), __pyx_v_yitem, __pyx_v_eps);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.Vectorizer.process_solution");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1180
 *                 eps)
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef double4 *vert = _self.get_vertices()
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_vertices(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct Vectorizer *__pyx_v__self;
  double4 *__pyx_v_vert;
  int __pyx_v_nvert;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_vertices");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1181
 * 
 *     def get_vertices(self):
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         cdef double4 *vert = _self.get_vertices()
 *         cdef int nvert = self.thisptr.get_num_vertices()
 */
  __pyx_v__self = ((struct Vectorizer *)((struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1182
 *     def get_vertices(self):
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef double4 *vert = _self.get_vertices()             # <<<<<<<<<<<<<<
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 4*nvert)
 */
  __pyx_v_vert = __pyx_v__self->get_vertices();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1183
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef double4 *vert = _self.get_vertices()
 *         cdef int nvert = self.thisptr.get_num_vertices()             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 4*nvert)
 *         return vec.reshape((nvert, 4))
 */
  __pyx_v_nvert = ((struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer *)__pyx_v_self)->__pyx_base.thisptr->get_num_vertices();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1184
 *         cdef double4 *vert = _self.get_vertices()
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 4*nvert)             # <<<<<<<<<<<<<<
 *         return vec.reshape((nvert, 4))
 * 
 */
  __pyx_t_1 = c2numpy_double(((double *)__pyx_v_vert), (4 * __pyx_v_nvert)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1185
 *         cdef int nvert = self.thisptr.get_num_vertices()
 *         cdef ndarray vec = c2numpy_double(<double *>vert, 4*nvert)
 *         return vec.reshape((nvert, 4))             # <<<<<<<<<<<<<<
 * 
 *     def get_dashes(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_nvert); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Vectorizer.get_vertices");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1187
 *         return vec.reshape((nvert, 4))
 * 
 *     def get_dashes(self):             # <<<<<<<<<<<<<<
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef int2 *dashes = _self.get_dashes()
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_dashes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_dashes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct Vectorizer *__pyx_v__self;
  int2 *__pyx_v_dashes;
  int __pyx_v_ndashes;
  PyArrayObject *__pyx_v_vec = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_dashes");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1188
 * 
 *     def get_dashes(self):
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)             # <<<<<<<<<<<<<<
 *         cdef int2 *dashes = _self.get_dashes()
 *         cdef int ndashes = _self.get_num_dashes()
 */
  __pyx_v__self = ((struct Vectorizer *)((struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1189
 *     def get_dashes(self):
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef int2 *dashes = _self.get_dashes()             # <<<<<<<<<<<<<<
 *         cdef int ndashes = _self.get_num_dashes()
 *         cdef ndarray vec = c2numpy_int(<int *>dashes, 2*ndashes)
 */
  __pyx_v_dashes = __pyx_v__self->get_dashes();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1190
 *         cdef c_Vectorizer *_self = <c_Vectorizer *>(self.thisptr)
 *         cdef int2 *dashes = _self.get_dashes()
 *         cdef int ndashes = _self.get_num_dashes()             # <<<<<<<<<<<<<<
 *         cdef ndarray vec = c2numpy_int(<int *>dashes, 2*ndashes)
 *         return vec.reshape((ndashes, 2))
 */
  __pyx_v_ndashes = __pyx_v__self->get_num_dashes();

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1191
 *         cdef int2 *dashes = _self.get_dashes()
 *         cdef int ndashes = _self.get_num_dashes()
 *         cdef ndarray vec = c2numpy_int(<int *>dashes, 2*ndashes)             # <<<<<<<<<<<<<<
 *         return vec.reshape((ndashes, 2))
 * 
 */
  __pyx_t_1 = c2numpy_int(((int *)__pyx_v_dashes), (2 * __pyx_v_ndashes)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8hermes2d_9_hermes2d_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_vec = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1192
 *         cdef int ndashes = _self.get_num_dashes()
 *         cdef ndarray vec = c2numpy_int(<int *>dashes, 2*ndashes)
 *         return vec.reshape((ndashes, 2))             # <<<<<<<<<<<<<<
 * 
 * cdef class View:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_vec), __pyx_n_s__reshape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_ndashes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("hermes2d._hermes2d.Vectorizer.get_dashes");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1195
 * 
 * cdef class View:
 *     def wait(self):             # <<<<<<<<<<<<<<
 *         View_wait()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4View_wait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_4View_wait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("wait");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1196
 * cdef class View:
 *     def wait(self):
 *         View_wait()             # <<<<<<<<<<<<<<
 * 
 * cdef class ScalarView(View):
 */
  View::wait();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1201
 *     cdef c_ScalarView *thisptr
 * 
 *     def __cinit__(self, char *title, int x=-1, int y=-1, int width=1000,             # <<<<<<<<<<<<<<
 *                 int height = 800):
 *         self.thisptr = new_ScalarView(title, x, y, width, height)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10ScalarView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10ScalarView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_title;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_title = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)1000);
    }
    if (values[4]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)800);
    }
  } else {
    __pyx_v_x = ((int)-1);
    __pyx_v_y = ((int)-1);
    __pyx_v_width = ((int)1000);
    __pyx_v_height = ((int)800);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1203
 *     def __cinit__(self, char *title, int x=-1, int y=-1, int width=1000,
 *                 int height = 800):
 *         self.thisptr = new_ScalarView(title, x, y, width, height)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr = new ScalarView(__pyx_v_title, __pyx_v_x, __pyx_v_y, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1208
 *     #    delete(self.thisptr)
 * 
 *     def show(self, MeshFunction sln, eps=None):             # <<<<<<<<<<<<<<
 *         cdef Function s = <Function>sln
 *         if eps is None:
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_sln = 0;
  PyObject *__pyx_v_eps = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_Function *__pyx_v_s = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  double __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__sln,&__pyx_n_s__eps,0};
  __Pyx_RefNannySetupContext("show");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sln);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__eps);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "show") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_eps = values[1];
  } else {
    __pyx_v_eps = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_eps = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_sln = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_INCREF((PyObject *)__pyx_v_sln);
  __Pyx_INCREF(__pyx_v_eps);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sln), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "sln", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1209
 * 
 *     def show(self, MeshFunction sln, eps=None):
 *         cdef Function s = <Function>sln             # <<<<<<<<<<<<<<
 *         if eps is None:
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr)
 */
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8hermes2d_9_hermes2d_Function *)__pyx_v_sln)));
  __pyx_v_s = ((struct __pyx_obj_8hermes2d_9_hermes2d_Function *)__pyx_v_sln);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1210
 *     def show(self, MeshFunction sln, eps=None):
 *         cdef Function s = <Function>sln
 *         if eps is None:             # <<<<<<<<<<<<<<
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr)
 *         else:
 */
  __pyx_t_1 = (__pyx_v_eps == Py_None);
  if (__pyx_t_1) {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1211
 *         cdef Function s = <Function>sln
 *         if eps is None:
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr)             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr, <double>eps)
 */
    ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->show(((struct MeshFunction *)__pyx_v_s->thisptr));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1213
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr)
 *         else:
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr, <double>eps)             # <<<<<<<<<<<<<<
 * 
 *     def show_mesh(self, show=True):
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_eps); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->show(((struct MeshFunction *)__pyx_v_s->thisptr), __pyx_t_2);
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_s);
  __Pyx_DECREF((PyObject *)__pyx_v_self);
  __Pyx_DECREF((PyObject *)__pyx_v_sln);
  __Pyx_DECREF(__pyx_v_eps);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1215
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr, <double>eps)
 * 
 *     def show_mesh(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_mesh(show)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_mesh(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_mesh(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_show = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__show,0};
  __Pyx_RefNannySetupContext("show_mesh");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = __pyx_k_31;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__show);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "show_mesh") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_show = values[0];
  } else {
    __pyx_v_show = __pyx_k_31;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_show = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show_mesh", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show_mesh");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1216
 * 
 *     def show_mesh(self, show=True):
 *         self.thisptr.show_mesh(show)             # <<<<<<<<<<<<<<
 * 
 *     def show_scale(self, show=True):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_show); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->show_mesh(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show_mesh");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1218
 *         self.thisptr.show_mesh(show)
 * 
 *     def show_scale(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_scale(show)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_show = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__show,0};
  __Pyx_RefNannySetupContext("show_scale");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = __pyx_k_32;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__show);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "show_scale") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_show = values[0];
  } else {
    __pyx_v_show = __pyx_k_32;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_show = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show_scale", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show_scale");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1219
 * 
 *     def show_scale(self, show=True):
 *         self.thisptr.show_scale(show)             # <<<<<<<<<<<<<<
 * 
 *     def set_min_max_range(self, double min, double max):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_show); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->show_scale(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.show_scale");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1221
 *         self.thisptr.show_scale(show)
 * 
 *     def set_min_max_range(self, double min, double max):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_min_max_range(min, max)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_min_max_range(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_min_max_range(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_min;
  double __pyx_v_max;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__min,&__pyx_n_s__max,0};
  __Pyx_RefNannySetupContext("set_min_max_range");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__min);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__max);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_min_max_range", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_min_max_range") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_min = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_min == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_max = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_max == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_min = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_min == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_max = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_max == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_min_max_range", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.set_min_max_range");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1222
 * 
 *     def set_min_max_range(self, double min, double max):
 *         self.thisptr.set_min_max_range(min, max)             # <<<<<<<<<<<<<<
 * 
 *     def set_title(self, char *title):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->set_min_max_range(__pyx_v_min, __pyx_v_max);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1224
 *         self.thisptr.set_min_max_range(min, max)
 * 
 *     def set_title(self, char *title):             # <<<<<<<<<<<<<<
 *         ((self.thisptr)).set_title(title)
 *         #(<c_View *>(self.thisptr)).set_title(title)
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_title(PyObject *__pyx_v_self, PyObject *__pyx_arg_title); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_title(PyObject *__pyx_v_self, PyObject *__pyx_arg_title) {
  char *__pyx_v_title;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("set_title");
  assert(__pyx_arg_title); {
    __pyx_v_title = PyBytes_AsString(__pyx_arg_title); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.ScalarView.set_title");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1225
 * 
 *     def set_title(self, char *title):
 *         ((self.thisptr)).set_title(title)             # <<<<<<<<<<<<<<
 *         #(<c_View *>(self.thisptr)).set_title(title)
 * 
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->set_title(__pyx_v_title);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1228
 *         #(<c_View *>(self.thisptr)).set_title(title)
 * 
 *     def wait(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.wait()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_wait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_wait(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("wait");

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1229
 * 
 *     def wait(self):
 *         self.thisptr.wait()             # <<<<<<<<<<<<<<
 * 
 * cdef class BaseView(View):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView *)__pyx_v_self)->thisptr->wait();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1234
 *     cdef c_BaseView *thisptr
 * 
 *     def __cinit__(self, char *title="BaseView", int x=-1, int y=-1,             # <<<<<<<<<<<<<<
 *             int width=1000, int height = 800):
 *         self.thisptr = new_BaseView(title, x, y, width, height)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_8BaseView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_8BaseView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_title;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_title = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_title = ((char *)__pyx_k__BaseView);
    }
    if (values[1]) {
      __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)1000);
    }
    if (values[4]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)800);
    }
  } else {
    __pyx_v_title = ((char *)__pyx_k__BaseView);
    __pyx_v_x = ((int)-1);
    __pyx_v_y = ((int)-1);
    __pyx_v_width = ((int)1000);
    __pyx_v_height = ((int)800);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.BaseView.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1236
 *     def __cinit__(self, char *title="BaseView", int x=-1, int y=-1,
 *             int width=1000, int height = 800):
 *         self.thisptr = new_BaseView(title, x, y, width, height)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_BaseView *)__pyx_v_self)->thisptr = new BaseView(__pyx_v_title, __pyx_v_x, __pyx_v_y, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1241
 *     #    delete(self.thisptr)
 * 
 *     def show(self, H1Space s):             # <<<<<<<<<<<<<<
 *         self.thisptr.show(s.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8BaseView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8BaseView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("show");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_H1Space, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1242
 * 
 *     def show(self, H1Space s):
 *         self.thisptr.show(s.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class MeshView(View):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_BaseView *)__pyx_v_self)->thisptr->show(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_s)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.BaseView.show");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1247
 *     cdef c_MeshView *thisptr
 * 
 *     def __cinit__(self, char *title="MeshView", int x=-1, int y=-1,             # <<<<<<<<<<<<<<
 *             int width=1000, int height = 800):
 *         self.thisptr = new_MeshView(title, x, y, width, height)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_8MeshView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_8MeshView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_title;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_title = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_title = ((char *)__pyx_k__MeshView);
    }
    if (values[1]) {
      __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)1000);
    }
    if (values[4]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)800);
    }
  } else {
    __pyx_v_title = ((char *)__pyx_k__MeshView);
    __pyx_v_x = ((int)-1);
    __pyx_v_y = ((int)-1);
    __pyx_v_width = ((int)1000);
    __pyx_v_height = ((int)800);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1248; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1247; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshView.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1249
 *     def __cinit__(self, char *title="MeshView", int x=-1, int y=-1,
 *             int width=1000, int height = 800):
 *         self.thisptr = new_MeshView(title, x, y, width, height)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshView *)__pyx_v_self)->thisptr = new MeshView(__pyx_v_title, __pyx_v_x, __pyx_v_y, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1254
 *     #    delete(self.thisptr)
 * 
 *     def show(self, Mesh s):             # <<<<<<<<<<<<<<
 *         self.thisptr.show(s.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8MeshView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_8MeshView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("show");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_Mesh, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1255
 * 
 *     def show(self, Mesh s):
 *         self.thisptr.show(s.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class OrderView(View):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshView *)__pyx_v_self)->thisptr->show(((struct __pyx_obj_8hermes2d_9_hermes2d_Mesh *)__pyx_v_s)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.MeshView.show");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1260
 *     cdef c_OrderView *thisptr
 * 
 *     def __cinit__(self, char *title="OrderView", int x=-1, int y=-1,             # <<<<<<<<<<<<<<
 *             int width=1000, int height = 800):
 *         self.thisptr = new_OrderView(title, x, y, width, height)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_9OrderView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_9OrderView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_title;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_title = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_title = ((char *)__pyx_k__OrderView);
    }
    if (values[1]) {
      __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)1000);
    }
    if (values[4]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)800);
    }
  } else {
    __pyx_v_title = ((char *)__pyx_k__OrderView);
    __pyx_v_x = ((int)-1);
    __pyx_v_y = ((int)-1);
    __pyx_v_width = ((int)1000);
    __pyx_v_height = ((int)800);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1260; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.OrderView.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1262
 *     def __cinit__(self, char *title="OrderView", int x=-1, int y=-1,
 *             int width=1000, int height = 800):
 *         self.thisptr = new_OrderView(title, x, y, width, height)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_OrderView *)__pyx_v_self)->thisptr = new OrderView(__pyx_v_title, __pyx_v_x, __pyx_v_y, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1267
 *     #    delete(self.thisptr)
 * 
 *     def show(self, H1Space s):             # <<<<<<<<<<<<<<
 *         self.thisptr.show(s.thisptr)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9OrderView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_9OrderView_show(PyObject *__pyx_v_self, PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("show");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s), __pyx_ptype_8hermes2d_9_hermes2d_H1Space, 1, "s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1268
 * 
 *     def show(self, H1Space s):
 *         self.thisptr.show(s.thisptr)             # <<<<<<<<<<<<<<
 * 
 * cdef class VectorView(View):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_OrderView *)__pyx_v_self)->thisptr->show(((struct __pyx_obj_8hermes2d_9_hermes2d_H1Space *)__pyx_v_s)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.OrderView.show");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1273
 *     cdef c_VectorView *thisptr
 * 
 *     def __cinit__(self, char *title, int x=-1, int y=-1, int width=1000,             # <<<<<<<<<<<<<<
 *             int height = 800):
 *         self.thisptr = new_VectorView(title, x, y, width, height)
 */

static int __pyx_pf_8hermes2d_9_hermes2d_10VectorView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8hermes2d_9_hermes2d_10VectorView___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_title;
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__title,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
        if (unlikely(value)) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (unlikely(value)) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (unlikely(value)) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_title = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_y = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)1000);
    }
    if (values[4]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[4]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)800);
    }
  } else {
    __pyx_v_x = ((int)-1);
    __pyx_v_y = ((int)-1);
    __pyx_v_width = ((int)1000);
    __pyx_v_height = ((int)800);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1274; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1273; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.__cinit__");
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1275
 *     def __cinit__(self, char *title, int x=-1, int y=-1, int width=1000,
 *             int height = 800):
 *         self.thisptr = new_VectorView(title, x, y, width, height)             # <<<<<<<<<<<<<<
 * 
 *     #def __dealloc__(self):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_VectorView *)__pyx_v_self)->thisptr = new VectorView(__pyx_v_title, __pyx_v_x, __pyx_v_y, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1280
 *     #    delete(self.thisptr)
 * 
 *     def show(self, MeshFunction s1, MeshFunction s2, eps = 0.008):             # <<<<<<<<<<<<<<
 *         (<c_VectorView *>(self.thisptr)).show(<c_MeshFunction *>s1.thisptr, <c_MeshFunction *>s2.thisptr, eps)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_s1 = 0;
  struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *__pyx_v_s2 = 0;
  PyObject *__pyx_v_eps = 0;
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__s1,&__pyx_n_s__s2,&__pyx_n_s__eps,0};
  __Pyx_RefNannySetupContext("show");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = __pyx_k_33;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__s1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__s2);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("show", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__eps);
        if (unlikely(value)) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "show") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[0]);
    __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)values[1]);
    __pyx_v_eps = values[2];
  } else {
    __pyx_v_eps = __pyx_k_33;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_eps = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_s2 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_s1 = ((struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.show");
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s1), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "s1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_s2), __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction, 1, "s2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1281
 * 
 *     def show(self, MeshFunction s1, MeshFunction s2, eps = 0.008):
 *         (<c_VectorView *>(self.thisptr)).show(<c_MeshFunction *>s1.thisptr, <c_MeshFunction *>s2.thisptr, eps)             # <<<<<<<<<<<<<<
 * 
 *     def show_scale(self, show=True):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_eps); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct VectorView *)((struct __pyx_obj_8hermes2d_9_hermes2d_VectorView *)__pyx_v_self)->thisptr)->show(((struct MeshFunction *)__pyx_v_s1->__pyx_base.__pyx_base.thisptr), ((struct MeshFunction *)__pyx_v_s2->__pyx_base.__pyx_base.thisptr), __pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.show");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1283
 *         (<c_VectorView *>(self.thisptr)).show(<c_MeshFunction *>s1.thisptr, <c_MeshFunction *>s2.thisptr, eps)
 * 
 *     def show_scale(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_scale(show)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show_scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show_scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_show = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__show,0};
  __Pyx_RefNannySetupContext("show_scale");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = __pyx_k_34;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 1) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__show);
        if (unlikely(value)) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "show_scale") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1283; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_show = values[0];
  } else {
    __pyx_v_show = __pyx_k_34;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_show = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show_scale", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1283; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.show_scale");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1284
 * 
 *     def show_scale(self, show=True):
 *         self.thisptr.show_scale(show)             # <<<<<<<<<<<<<<
 * 
 *     def set_min_max_range(self, double min, double max):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_show); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8hermes2d_9_hermes2d_VectorView *)__pyx_v_self)->thisptr->show_scale(__pyx_t_1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.show_scale");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1286
 *         self.thisptr.show_scale(show)
 * 
 *     def set_min_max_range(self, double min, double max):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_min_max_range(min, max)
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_set_min_max_range(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_10VectorView_set_min_max_range(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_min;
  double __pyx_v_max;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__min,&__pyx_n_s__max,0};
  __Pyx_RefNannySetupContext("set_min_max_range");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__min);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__max);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_min_max_range", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_min_max_range") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_min = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_min == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_max = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_max == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_min = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_min == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_max = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_max == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_min_max_range", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("hermes2d._hermes2d.VectorView.set_min_max_range");
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1287
 * 
 *     def set_min_max_range(self, double min, double max):
 *         self.thisptr.set_min_max_range(min, max)             # <<<<<<<<<<<<<<
 * 
 * #cdef class MatrixView(View):
 */
  ((struct __pyx_obj_8hermes2d_9_hermes2d_VectorView *)__pyx_v_self)->thisptr->set_min_max_range(__pyx_v_min, __pyx_v_max);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1302
 *     #    self.thisptr.show(ep.thisptr)
 * 
 * def init_hermes2d_wrappers():             # <<<<<<<<<<<<<<
 *     init_global_empty_tuple()
 * 
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_init_hermes2d_wrappers(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_init_hermes2d_wrappers(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("init_hermes2d_wrappers");
  __pyx_self = __pyx_self;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1303
 * 
 * def init_hermes2d_wrappers():
 *     init_global_empty_tuple()             # <<<<<<<<<<<<<<
 * 
 * def set_verbose(verbose):
 */
  init_global_empty_tuple();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1305
 *     init_global_empty_tuple()
 * 
 * def set_verbose(verbose):             # <<<<<<<<<<<<<<
 *     """
 *     Sets the global verbose_mode variable.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_set_verbose(PyObject *__pyx_self, PyObject *__pyx_v_verbose); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_set_verbose[] = "\n    Sets the global verbose_mode variable.\n\n    That variable controls how verbose hermes2d is.\n\n    Returns the old status.\n    ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_set_verbose(PyObject *__pyx_self, PyObject *__pyx_v_verbose) {
  int __pyx_v_old_flag;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("set_verbose");
  __pyx_self = __pyx_self;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1315
 *     global c_verbose_mode
 *     global c_info_mode
 *     old_flag = c_verbose_mode             # <<<<<<<<<<<<<<
 *     c_verbose_mode = verbose
 *     c_info_mode = verbose
 */
  __pyx_v_old_flag = __h2d_report_verbose;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1316
 *     global c_info_mode
 *     old_flag = c_verbose_mode
 *     c_verbose_mode = verbose             # <<<<<<<<<<<<<<
 *     c_info_mode = verbose
 *     return old_flag
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_verbose); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __h2d_report_verbose = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1317
 *     old_flag = c_verbose_mode
 *     c_verbose_mode = verbose
 *     c_info_mode = verbose             # <<<<<<<<<<<<<<
 *     return old_flag
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_verbose); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __h2d_report_info = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1318
 *     c_verbose_mode = verbose
 *     c_info_mode = verbose
 *     return old_flag             # <<<<<<<<<<<<<<
 * 
 * def set_warn_integration(warn_integration):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_old_flag); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.set_verbose");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1320
 *     return old_flag
 * 
 * def set_warn_integration(warn_integration):             # <<<<<<<<<<<<<<
 *     """
 *     Sets the global warn_integration variable.
 */

static PyObject *__pyx_pf_8hermes2d_9_hermes2d_set_warn_integration(PyObject *__pyx_self, PyObject *__pyx_v_warn_integration); /*proto*/
static char __pyx_doc_8hermes2d_9_hermes2d_set_warn_integration[] = "\n    Sets the global warn_integration variable.\n\n    That variable controls if warn_order() in the C++ hermes2d should emit the\n    warning about integration rules.\n\n    Returns the old status.\n    ";
static PyObject *__pyx_pf_8hermes2d_9_hermes2d_set_warn_integration(PyObject *__pyx_self, PyObject *__pyx_v_warn_integration) {
  int __pyx_v_old_flag;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("set_warn_integration");
  __pyx_self = __pyx_self;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1330
 *     """
 *     global c_warn_integration
 *     old_flag = c_warn_integration             # <<<<<<<<<<<<<<
 *     c_warn_integration = warn_integration
 *     return old_flag
 */
  __pyx_v_old_flag = __h2d_report_warn_intr;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1331
 *     global c_warn_integration
 *     old_flag = c_warn_integration
 *     c_warn_integration = warn_integration             # <<<<<<<<<<<<<<
 *     return old_flag
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_warn_integration); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __h2d_report_warn_intr = __pyx_t_1;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1332
 *     old_flag = c_warn_integration
 *     c_warn_integration = warn_integration
 *     return old_flag             # <<<<<<<<<<<<<<
 * 
 * #def glut_main_loop():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_old_flag); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("hermes2d._hermes2d.set_warn_integration");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_LinSystem(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)o);
  p->_spaces = Py_None; Py_INCREF(Py_None);
  p->_pss = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_LinSystem(PyObject *o) {
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *p = (struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)o;
  Py_XDECREF(p->_spaces);
  Py_XDECREF(p->_pss);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8hermes2d_9_hermes2d_LinSystem(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *p = (struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)o;
  if (p->_spaces) {
    e = (*v)(p->_spaces, a); if (e) return e;
  }
  if (p->_pss) {
    e = (*v)(p->_pss, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8hermes2d_9_hermes2d_LinSystem(PyObject *o) {
  struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *p = (struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_spaces);
  p->_spaces = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_pss);
  p->_pss = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_LinSystem[] = {
  {__Pyx_NAMESTR("set_spaces"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_spaces, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_pss"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_set_pss, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("solve_system"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_solve_system, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_9LinSystem_solve_system)},
  {__Pyx_NAMESTR("assemble"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_assemble, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_matrix_csc"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix_csc, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_matrix_csc)},
  {__Pyx_NAMESTR("get_matrix"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_matrix, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_matrix)},
  {__Pyx_NAMESTR("get_rhs"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9LinSystem_get_rhs, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_9LinSystem_get_rhs)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LinSystem = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LinSystem = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LinSystem = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LinSystem = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_LinSystem = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.LinSystem"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_LinSystem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_LinSystem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_LinSystem, /*tp_as_number*/
  &__pyx_tp_as_sequence_LinSystem, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LinSystem, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LinSystem, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8hermes2d_9_hermes2d_LinSystem, /*tp_traverse*/
  __pyx_tp_clear_8hermes2d_9_hermes2d_LinSystem, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_LinSystem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_8hermes2d_9_hermes2d_9LinSystem___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_LinSystem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_RefSystem(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_LinSystem(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_RefSystem[] = {
  {__Pyx_NAMESTR("assemble"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9RefSystem_assemble, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_RefSystem = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_RefSystem = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_RefSystem = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_RefSystem = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_RefSystem = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.RefSystem"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_RefSystem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_LinSystem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_RefSystem, /*tp_as_number*/
  &__pyx_tp_as_sequence_RefSystem, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_RefSystem, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_RefSystem, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8hermes2d_9_hermes2d_LinSystem, /*tp_traverse*/
  __pyx_tp_clear_8hermes2d_9_hermes2d_LinSystem, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_RefSystem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_8hermes2d_9_hermes2d_9RefSystem___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_RefSystem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Solver(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Solver(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Solver[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Solver = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Solver = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Solver = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Solver = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Solver = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Solver"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Solver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Solver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Solver, /*tp_as_number*/
  &__pyx_tp_as_sequence_Solver, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Solver, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Solver, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Solver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Solver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_DummySolver(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Solver(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_11DummySolver___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_DummySolver(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_11DummySolver___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Solver(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_DummySolver[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_DummySolver = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_DummySolver = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DummySolver = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_DummySolver = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_DummySolver = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.DummySolver"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_DummySolver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_DummySolver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_DummySolver, /*tp_as_number*/
  &__pyx_tp_as_sequence_DummySolver, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DummySolver, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_DummySolver, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_DummySolver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_DummySolver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_WeakForm(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_8WeakForm___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_WeakForm(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_8WeakForm___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_WeakForm[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_WeakForm = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_WeakForm = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_WeakForm = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_WeakForm = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_WeakForm = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.WeakForm"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_WeakForm), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_WeakForm, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_WeakForm, /*tp_as_number*/
  &__pyx_tp_as_sequence_WeakForm, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_WeakForm, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_WeakForm, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_WeakForm, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_WeakForm, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_H1OrthoHP(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1OrthoHP(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_H1OrthoHP[] = {
  {__Pyx_NAMESTR("calc_error"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_error_2"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_2, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_error_4"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_calc_error_4, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("adapt"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9H1OrthoHP_adapt, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_H1OrthoHP = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_H1OrthoHP = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_H1OrthoHP = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_H1OrthoHP = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_H1OrthoHP = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.H1OrthoHP"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_H1OrthoHP), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1OrthoHP, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_H1OrthoHP, /*tp_as_number*/
  &__pyx_tp_as_sequence_H1OrthoHP, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_H1OrthoHP, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_H1OrthoHP, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_H1OrthoHP, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_H1OrthoHP, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_H1Space(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1Space(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_7H1Space___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_H1Space[] = {
  {__Pyx_NAMESTR("set_uniform_order"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7H1Space_set_uniform_order, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("assign_dofs"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7H1Space_assign_dofs, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("copy_orders"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7H1Space_copy_orders, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_element_order"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_element_order, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_num_dofs"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7H1Space_get_num_dofs, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_H1Space = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_H1Space = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_H1Space = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_H1Space = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_H1Space = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.H1Space"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_H1Space), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1Space, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_H1Space, /*tp_as_number*/
  &__pyx_tp_as_sequence_H1Space, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_H1Space, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_H1Space, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_H1Space, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_8hermes2d_9_hermes2d_7H1Space___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_H1Space, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Transformable(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Transformable[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Transformable = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Transformable = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Transformable = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Transformable = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Transformable = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Transformable"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Transformable), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Transformable, /*tp_as_number*/
  &__pyx_tp_as_sequence_Transformable, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Transformable, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Transformable, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Transformable, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Transformable, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Function(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Function[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Function = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Function = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Function = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Function = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Function = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Function"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Function), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Function, /*tp_as_number*/
  &__pyx_tp_as_sequence_Function, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Function, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Function, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Function, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Function, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_ScalarFunction(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_ScalarFunction[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ScalarFunction = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ScalarFunction = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ScalarFunction = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ScalarFunction = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_ScalarFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.ScalarFunction"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_ScalarFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ScalarFunction, /*tp_as_number*/
  &__pyx_tp_as_sequence_ScalarFunction, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ScalarFunction, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ScalarFunction, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_ScalarFunction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_ScalarFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_MeshFunction(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_MeshFunction[] = {
  {__Pyx_NAMESTR("__add__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___add__, METH_O|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__sub__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___sub__, METH_O|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__neg__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___neg__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("l2_norm"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_l2_norm, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("h1_norm"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_h1_norm, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_pt_value"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_pt_value, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_mesh"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_12MeshFunction_get_mesh, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_MeshFunction = {
  __pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___add__, /*nb_add*/
  __pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  __pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___pow__, /*nb_power*/
  __pyx_pf_8hermes2d_9_hermes2d_12MeshFunction___neg__, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_MeshFunction = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MeshFunction = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_MeshFunction = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_MeshFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.MeshFunction"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_MeshFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_MeshFunction, /*tp_as_number*/
  &__pyx_tp_as_sequence_MeshFunction, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MeshFunction, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_MeshFunction, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_MeshFunction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_MeshFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Solution(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_8Solution___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Solution[] = {
  {__Pyx_NAMESTR("set_zero"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_zero, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_const"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_const, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_fe_solution"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8Solution_set_fe_solution, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_8Solution_set_fe_solution)},
  {__Pyx_NAMESTR("plot"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8Solution_plot, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_8Solution_plot)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Solution = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Solution = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Solution = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Solution = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Solution = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Solution"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Solution), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Solution, /*tp_as_number*/
  &__pyx_tp_as_sequence_Solution, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Solution, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Solution, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Solution, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Solution, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Linearizer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10Linearizer___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Linearizer(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_10Linearizer___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Linearizer[] = {
  {__Pyx_NAMESTR("process_solution"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_process_solution, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_vertices"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_vertices, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_vertices)},
  {__Pyx_NAMESTR("get_num_vertices"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_vertices, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_triangles"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_triangles, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_triangles)},
  {__Pyx_NAMESTR("get_num_triangles"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_triangles, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_edges"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_edges, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_10Linearizer_get_edges)},
  {__Pyx_NAMESTR("get_num_edges"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_num_edges, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_min_value"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_min_value, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_max_value"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_get_max_value, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("save_data"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_save_data, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_data"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Linearizer_load_data, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Linearizer = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Linearizer = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Linearizer = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Linearizer = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Linearizer = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Linearizer"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Linearizer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Linearizer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Linearizer, /*tp_as_number*/
  &__pyx_tp_as_sequence_Linearizer, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Linearizer, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Linearizer, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  __Pyx_DOCSTR("\n    Linearizes the solution.\n\n    It returns the triangles and vertices and you can then use it to visualize\n    the solution.\n\n    Example::\n\n        In [40]: l = Linearizer(sln)\n\n        In [44]: l.process_solution(sln)\n        Linearizer: 5519 verts, 10847 tris in 0.05 sec\n\n        In [45]: l.get_vertices()\n        Out[45]:\n        array([[  0.00000000e+00,  -1.00000000e+00,  -2.22396971e-17],\n               [  1.00000000e+00,  -1.00000000e+00,  -1.64798730e-17],\n               [ -1.00000000e+00,   0.00000000e+00,   8.09899023e-17],\n               ...,\n               [  1.48437500e-01,  -1.56250000e-02,   1.62359362e-01],\n               [  1.32812500e-01,   0.00000000e+00,   1.56012622e-01],\n               [  1.32812500e-01,  -1.56250000e-02,   1.50562411e-01]])\n\n        In [46]: l.get_triangles()\n        Out[46]:\n        array([[   3, 5448,   29],\n               [  27, 5445,   28],\n               [  29,   28,   26],\n               ...,\n               [5499, 5498, 5479],\n               [5510, 5493, 5491],\n               [5513, 5508, 5491]], dtype=int32)\n\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Linearizer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Linearizer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Vectorizer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Linearizer(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Vectorizer[] = {
  {__Pyx_NAMESTR("process_solution"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_process_solution, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_vertices"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_vertices, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_dashes"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10Vectorizer_get_dashes, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vectorizer = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Vectorizer = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Vectorizer = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Vectorizer = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Vectorizer = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Vectorizer"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Vectorizer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Linearizer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Vectorizer, /*tp_as_number*/
  &__pyx_tp_as_sequence_Vectorizer, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Vectorizer, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Vectorizer, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Vectorizer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Vectorizer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Nurbs(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Nurbs(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Nurbs[] = {
  {__Pyx_NAMESTR("degree"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_degree, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("np"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_np, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("pt"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_pt, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nk"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_nk, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("kv"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_kv, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("ref"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_5Nurbs_ref, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Nurbs = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Nurbs = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Nurbs = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Nurbs = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Nurbs = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Nurbs"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Nurbs), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Nurbs, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Nurbs, /*tp_as_number*/
  &__pyx_tp_as_sequence_Nurbs, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Nurbs, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Nurbs, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Nurbs, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Nurbs, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_CurvMap(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_CurvMap(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_CurvMap[] = {
  {__Pyx_NAMESTR("order"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_order, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("toplevel"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_toplevel, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_nurbs"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7CurvMap_get_nurbs, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CurvMap = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CurvMap = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CurvMap = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CurvMap = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_CurvMap = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.CurvMap"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_CurvMap), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_CurvMap, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CurvMap, /*tp_as_number*/
  &__pyx_tp_as_sequence_CurvMap, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CurvMap, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CurvMap, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_CurvMap, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_CurvMap, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Node(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Node(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Node[] = {
  {__Pyx_NAMESTR("id"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_id, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("ref"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_ref, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("type"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_type, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("bnd"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_bnd, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("used"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_used, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__str__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node___str__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("coord"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Node_coord, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Node = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Node = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Node = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Node = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Node = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Node"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Node), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Node, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Node, /*tp_as_number*/
  &__pyx_tp_as_sequence_Node, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Node, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pf_8hermes2d_9_hermes2d_4Node___str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Node, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Node, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Node, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Element(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Element(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Element[] = {
  {__Pyx_NAMESTR("id"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_id, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nvert"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_nvert, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("active"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_active, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("used"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_used, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("marker"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_marker, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nodes_vertex"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nodes_vertex_id"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_vertex_id, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nodes_edge"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_nodes_edge, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_vertex_node"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_get_vertex_node, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("curved_map"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_curved_map, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_edge_node"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_get_edge_node, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_son_element"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_get_son_element, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__str__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element___str__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_diameter"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_get_diameter, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_area"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_7Element_get_area, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Element = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Element = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Element = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Element = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Element = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Element"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Element), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Element, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Element, /*tp_as_number*/
  &__pyx_tp_as_sequence_Element, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Element, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pf_8hermes2d_9_hermes2d_7Element___str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Element, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Element, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Element, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Mesh(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_4Mesh___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_Mesh(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_4Mesh___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Mesh[] = {
  {__Pyx_NAMESTR("copy"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_copy, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_str"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_str, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("elements_markers"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements_markers, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_elements_markers)},
  {__Pyx_NAMESTR("elements"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_elements, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_elements)},
  {__Pyx_NAMESTR("nodes"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_nodes)},
  {__Pyx_NAMESTR("nodes_dict"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_nodes_dict, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_nodes_dict)},
  {__Pyx_NAMESTR("curves"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_curves, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_curves)},
  {__Pyx_NAMESTR("get_polygonal_boundary"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_polygonal_boundary, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_get_polygonal_boundary)},
  {__Pyx_NAMESTR("num_elements"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_elements, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("num_base_elements"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_base_elements, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("num_active_elements"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_num_active_elements, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("max_element_id"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_max_element_id, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__str__"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh___str__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_hermes"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_load_hermes, METH_O, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_load_hermes)},
  {__Pyx_NAMESTR("get_elements_order"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_elements_order, METH_O, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_get_elements_order)},
  {__Pyx_NAMESTR("create"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_create, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_create)},
  {__Pyx_NAMESTR("save"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_save, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("refine_element"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_element, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("refine_all_elements"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_all_elements, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("refine_towards_boundary"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_boundary, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("refine_towards_vertex"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_refine_towards_vertex, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_element"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_get_element, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("plot"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_plot, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_4Mesh_plot)},
  {__Pyx_NAMESTR("convert_triangles_to_quads"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_triangles_to_quads, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("convert_quads_to_triangles"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4Mesh_convert_quads_to_triangles, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Mesh = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Mesh = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Mesh = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Mesh = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Mesh = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Mesh"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Mesh), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Mesh, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Mesh, /*tp_as_number*/
  &__pyx_tp_as_sequence_Mesh, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Mesh, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pf_8hermes2d_9_hermes2d_4Mesh___str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Mesh, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Mesh, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Mesh, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_H1Shapeset(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1Shapeset(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_10H1Shapeset___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_H1Shapeset[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_H1Shapeset = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_H1Shapeset = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_H1Shapeset = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_H1Shapeset = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_H1Shapeset = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.H1Shapeset"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_H1Shapeset), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_H1Shapeset, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_H1Shapeset, /*tp_as_number*/
  &__pyx_tp_as_sequence_H1Shapeset, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_H1Shapeset, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_H1Shapeset, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_H1Shapeset, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_H1Shapeset, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_PrecalcShapeset(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_PrecalcShapeset(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_15PrecalcShapeset___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_PrecalcShapeset[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_PrecalcShapeset = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_PrecalcShapeset = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PrecalcShapeset = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_PrecalcShapeset = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_PrecalcShapeset = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.PrecalcShapeset"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_PrecalcShapeset), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_PrecalcShapeset, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_PrecalcShapeset, /*tp_as_number*/
  &__pyx_tp_as_sequence_PrecalcShapeset, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PrecalcShapeset, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_PrecalcShapeset, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_PrecalcShapeset, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_PrecalcShapeset, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_Filter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_Filter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Filter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Filter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Filter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Filter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_Filter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.Filter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_Filter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Filter, /*tp_as_number*/
  &__pyx_tp_as_sequence_Filter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Filter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Filter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_Filter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_Filter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_SimpleFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_SimpleFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SimpleFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SimpleFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SimpleFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SimpleFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_SimpleFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.SimpleFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_SimpleFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SimpleFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_SimpleFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SimpleFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SimpleFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_SimpleFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_SimpleFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_VonMisesFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_14VonMisesFilter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_VonMisesFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_VonMisesFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_VonMisesFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_VonMisesFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_VonMisesFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_VonMisesFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.VonMisesFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_VonMisesFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_VonMisesFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_VonMisesFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_VonMisesFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_VonMisesFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_VonMisesFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_VonMisesFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_MagFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_9MagFilter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_MagFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_MagFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_MagFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MagFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_MagFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_MagFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.MagFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_MagFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_MagFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_MagFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MagFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_MagFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_MagFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_MagFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_DiffFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10DiffFilter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_DiffFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_DiffFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_DiffFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DiffFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_DiffFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_DiffFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.DiffFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_DiffFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_DiffFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_DiffFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DiffFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_DiffFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_DiffFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_DiffFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_SumFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_9SumFilter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_SumFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SumFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SumFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SumFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SumFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_SumFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.SumFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_SumFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SumFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_SumFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SumFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SumFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_SumFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_SumFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_SquareFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_Transformable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_12SquareFilter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_SquareFilter[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SquareFilter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SquareFilter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SquareFilter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SquareFilter = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_SquareFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.SquareFilter"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_SquareFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_Transformable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SquareFilter, /*tp_as_number*/
  &__pyx_tp_as_sequence_SquareFilter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SquareFilter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SquareFilter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_SquareFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_SquareFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_L2OrthoHP(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_L2OrthoHP(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_L2OrthoHP[] = {
  {__Pyx_NAMESTR("calc_error"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_calc_error, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("adapt"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9L2OrthoHP_adapt, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_L2OrthoHP = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_L2OrthoHP = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_L2OrthoHP = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_L2OrthoHP = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_L2OrthoHP = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.L2OrthoHP"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_L2OrthoHP), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_L2OrthoHP, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_L2OrthoHP, /*tp_as_number*/
  &__pyx_tp_as_sequence_L2OrthoHP, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_L2OrthoHP, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_L2OrthoHP, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_L2OrthoHP, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_L2OrthoHP, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_View(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_8hermes2d_9_hermes2d_View(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_View[] = {
  {__Pyx_NAMESTR("wait"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_4View_wait, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_View = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_View = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_View = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_View = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_View = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.View"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_View), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_View, /*tp_as_number*/
  &__pyx_tp_as_sequence_View, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_View, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_View, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_View, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_View, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_ScalarView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_View(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10ScalarView___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_ScalarView[] = {
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("show_mesh"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_mesh, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("show_scale"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_show_scale, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_min_max_range"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_min_max_range, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_title"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_set_title, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("wait"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10ScalarView_wait, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ScalarView = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ScalarView = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ScalarView = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ScalarView = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_ScalarView = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.ScalarView"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_ScalarView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ScalarView, /*tp_as_number*/
  &__pyx_tp_as_sequence_ScalarView, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ScalarView, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ScalarView, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_ScalarView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_ScalarView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_BaseView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_View(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_8BaseView___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_BaseView[] = {
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8BaseView_show, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BaseView = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BaseView = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BaseView = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BaseView = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_BaseView = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.BaseView"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_BaseView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BaseView, /*tp_as_number*/
  &__pyx_tp_as_sequence_BaseView, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BaseView, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BaseView, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_BaseView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_BaseView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_MeshView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_View(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_8MeshView___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_MeshView[] = {
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_8MeshView_show, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_MeshView = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_MeshView = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MeshView = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_MeshView = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_MeshView = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.MeshView"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_MeshView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_MeshView, /*tp_as_number*/
  &__pyx_tp_as_sequence_MeshView, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MeshView, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_MeshView, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_MeshView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_MeshView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_OrderView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_View(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_9OrderView___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_OrderView[] = {
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_9OrderView_show, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_OrderView = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_OrderView = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_OrderView = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_OrderView = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_OrderView = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.OrderView"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_OrderView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_OrderView, /*tp_as_number*/
  &__pyx_tp_as_sequence_OrderView, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_OrderView, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_OrderView, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_OrderView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_OrderView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_8hermes2d_9_hermes2d_VectorView(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_8hermes2d_9_hermes2d_View(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_8hermes2d_9_hermes2d_10VectorView___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_8hermes2d_9_hermes2d_VectorView[] = {
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("show_scale"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10VectorView_show_scale, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_min_max_range"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_10VectorView_set_min_max_range, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_VectorView = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_VectorView = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_VectorView = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_VectorView = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_8hermes2d_9_hermes2d_VectorView = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("hermes2d._hermes2d.VectorView"), /*tp_name*/
  sizeof(struct __pyx_obj_8hermes2d_9_hermes2d_VectorView), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8hermes2d_9_hermes2d_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_VectorView, /*tp_as_number*/
  &__pyx_tp_as_sequence_VectorView, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_VectorView, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_VectorView, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8hermes2d_9_hermes2d_VectorView, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8hermes2d_9_hermes2d_VectorView, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {__Pyx_NAMESTR("get_node_id"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_get_node_id, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("init_hermes2d_wrappers"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_init_hermes2d_wrappers, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_verbose"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_set_verbose, METH_O, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_set_verbose)},
  {__Pyx_NAMESTR("set_warn_integration"), (PyCFunction)__pyx_pf_8hermes2d_9_hermes2d_set_warn_integration, METH_O, __Pyx_DOCSTR(__pyx_doc_8hermes2d_9_hermes2d_set_warn_integration)},
  {0, 0, 0, 0}
};

static void __pyx_init_filenames(void); /*proto*/

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("_hermes2d"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_n_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 1},
  {&__pyx_n_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 1},
  {&__pyx_n_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 1},
  {&__pyx_n_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 1},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_n_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 1},
  {&__pyx_kp_s_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 0, 1, 0},
  {&__pyx_n_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 1},
  {&__pyx_n_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 1},
  {&__pyx_n_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 1},
  {&__pyx_kp_u_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 1, 0, 0},
  {&__pyx_kp_u_37, __pyx_k_37, sizeof(__pyx_k_37), 0, 1, 0, 0},
  {&__pyx_kp_u_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 1, 0, 0},
  {&__pyx_kp_u_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 1, 0, 0},
  {&__pyx_n_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 1},
  {&__pyx_kp_u_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 1, 0, 0},
  {&__pyx_kp_u_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 1, 0, 0},
  {&__pyx_n_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 1},
  {&__pyx_kp_u_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 1, 0, 0},
  {&__pyx_kp_u_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 1, 0, 0},
  {&__pyx_kp_u_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 1, 0, 0},
  {&__pyx_kp_u_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 1, 0, 0},
  {&__pyx_kp_u_47, __pyx_k_47, sizeof(__pyx_k_47), 0, 1, 0, 0},
  {&__pyx_kp_u_48, __pyx_k_48, sizeof(__pyx_k_48), 0, 1, 0, 0},
  {&__pyx_kp_u_49, __pyx_k_49, sizeof(__pyx_k_49), 0, 1, 0, 0},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_u_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 1, 0, 0},
  {&__pyx_kp_u_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 1, 0, 0},
  {&__pyx_kp_u_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 1, 0, 0},
  {&__pyx_kp_u_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 1, 0, 0},
  {&__pyx_kp_u_54, __pyx_k_54, sizeof(__pyx_k_54), 0, 1, 0, 0},
  {&__pyx_kp_u_55, __pyx_k_55, sizeof(__pyx_k_55), 0, 1, 0, 0},
  {&__pyx_kp_u_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 1, 0, 0},
  {&__pyx_kp_u_57, __pyx_k_57, sizeof(__pyx_k_57), 0, 1, 0, 0},
  {&__pyx_n_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 1},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_n_s__H2D_EPS_HIGH, __pyx_k__H2D_EPS_HIGH, sizeof(__pyx_k__H2D_EPS_HIGH), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_EPS_NORMAL, __pyx_k__H2D_EPS_NORMAL, sizeof(__pyx_k__H2D_EPS_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_ALL, __pyx_k__H2D_FN_ALL, sizeof(__pyx_k__H2D_FN_ALL), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DEFAULT, __pyx_k__H2D_FN_DEFAULT, sizeof(__pyx_k__H2D_FN_DEFAULT), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DX, __pyx_k__H2D_FN_DX, sizeof(__pyx_k__H2D_FN_DX), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DXX, __pyx_k__H2D_FN_DXX, sizeof(__pyx_k__H2D_FN_DXX), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DXY, __pyx_k__H2D_FN_DXY, sizeof(__pyx_k__H2D_FN_DXY), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DY, __pyx_k__H2D_FN_DY, sizeof(__pyx_k__H2D_FN_DY), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_DYY, __pyx_k__H2D_FN_DYY, sizeof(__pyx_k__H2D_FN_DYY), 0, 0, 1, 1},
  {&__pyx_n_s__H2D_FN_VAL, __pyx_k__H2D_FN_VAL, sizeof(__pyx_k__H2D_FN_VAL), 0, 0, 1, 1},
  {&__pyx_n_s__LinSystem, __pyx_k__LinSystem, sizeof(__pyx_k__LinSystem), 0, 0, 1, 1},
  {&__pyx_n_s__Linearizer, __pyx_k__Linearizer, sizeof(__pyx_k__Linearizer), 0, 0, 1, 1},
  {&__pyx_n_s__Mesh, __pyx_k__Mesh, sizeof(__pyx_k__Mesh), 0, 0, 1, 1},
  {&__pyx_n_s__MeshView, __pyx_k__MeshView, sizeof(__pyx_k__MeshView), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplemented, __pyx_k__NotImplemented, sizeof(__pyx_k__NotImplemented), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplementedError, __pyx_k__NotImplementedError, sizeof(__pyx_k__NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s__ScalarView, __pyx_k__ScalarView, sizeof(__pyx_k__ScalarView), 0, 0, 1, 1},
  {&__pyx_n_s__Solution, __pyx_k__Solution, sizeof(__pyx_k__Solution), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___pss, __pyx_k___pss, sizeof(__pyx_k___pss), 0, 0, 1, 1},
  {&__pyx_n_s___spaces, __pyx_k___spaces, sizeof(__pyx_k___spaces), 0, 0, 1, 1},
  {&__pyx_n_s__active, __pyx_k__active, sizeof(__pyx_k__active), 0, 0, 1, 1},
  {&__pyx_n_s__adapt, __pyx_k__adapt, sizeof(__pyx_k__adapt), 0, 0, 1, 1},
  {&__pyx_n_s__array, __pyx_k__array, sizeof(__pyx_k__array), 0, 0, 1, 1},
  {&__pyx_n_s__assemble, __pyx_k__assemble, sizeof(__pyx_k__assemble), 0, 0, 1, 1},
  {&__pyx_n_s__assign_dofs, __pyx_k__assign_dofs, sizeof(__pyx_k__assign_dofs), 0, 0, 1, 1},
  {&__pyx_n_s__bnd, __pyx_k__bnd, sizeof(__pyx_k__bnd), 0, 0, 1, 1},
  {&__pyx_n_s__boundary, __pyx_k__boundary, sizeof(__pyx_k__boundary), 0, 0, 1, 1},
  {&__pyx_n_s__calc_error, __pyx_k__calc_error, sizeof(__pyx_k__calc_error), 0, 0, 1, 1},
  {&__pyx_n_s__calc_error_2, __pyx_k__calc_error_2, sizeof(__pyx_k__calc_error_2), 0, 0, 1, 1},
  {&__pyx_n_s__calc_error_n, __pyx_k__calc_error_n, sizeof(__pyx_k__calc_error_n), 0, 0, 1, 1},
  {&__pyx_n_s__cg, __pyx_k__cg, sizeof(__pyx_k__cg), 0, 0, 1, 1},
  {&__pyx_n_s__cm, __pyx_k__cm, sizeof(__pyx_k__cm), 0, 0, 1, 1},
  {&__pyx_n_s__coord, __pyx_k__coord, sizeof(__pyx_k__coord), 0, 0, 1, 1},
  {&__pyx_n_s__copy, __pyx_k__copy, sizeof(__pyx_k__copy), 0, 0, 1, 1},
  {&__pyx_n_s__copy_orders, __pyx_k__copy_orders, sizeof(__pyx_k__copy_orders), 0, 0, 1, 1},
  {&__pyx_n_s__create, __pyx_k__create, sizeof(__pyx_k__create), 0, 0, 1, 1},
  {&__pyx_n_s__csc_matrix, __pyx_k__csc_matrix, sizeof(__pyx_k__csc_matrix), 0, 0, 1, 1},
  {&__pyx_n_s__curved_map, __pyx_k__curved_map, sizeof(__pyx_k__curved_map), 0, 0, 1, 1},
  {&__pyx_n_s__curves, __pyx_k__curves, sizeof(__pyx_k__curves), 0, 0, 1, 1},
  {&__pyx_n_s__data, __pyx_k__data, sizeof(__pyx_k__data), 0, 0, 1, 1},
  {&__pyx_n_s__degree, __pyx_k__degree, sizeof(__pyx_k__degree), 0, 0, 1, 1},
  {&__pyx_n_s__depth, __pyx_k__depth, sizeof(__pyx_k__depth), 0, 0, 1, 1},
  {&__pyx_n_s__double, __pyx_k__double, sizeof(__pyx_k__double), 0, 0, 1, 1},
  {&__pyx_n_s__dtype, __pyx_k__dtype, sizeof(__pyx_k__dtype), 0, 0, 1, 1},
  {&__pyx_n_s__elements, __pyx_k__elements, sizeof(__pyx_k__elements), 0, 0, 1, 1},
  {&__pyx_n_s__elements_markers, __pyx_k__elements_markers, sizeof(__pyx_k__elements_markers), 0, 0, 1, 1},
  {&__pyx_n_s__en, __pyx_k__en, sizeof(__pyx_k__en), 0, 0, 1, 1},
  {&__pyx_n_s__enumerate, __pyx_k__enumerate, sizeof(__pyx_k__enumerate), 0, 0, 1, 1},
  {&__pyx_n_s__eps, __pyx_k__eps, sizeof(__pyx_k__eps), 0, 0, 1, 1},
  {&__pyx_n_s__extend, __pyx_k__extend, sizeof(__pyx_k__extend), 0, 0, 1, 1},
  {&__pyx_n_s__first_dof, __pyx_k__first_dof, sizeof(__pyx_k__first_dof), 0, 0, 1, 1},
  {&__pyx_n_s__get_area, __pyx_k__get_area, sizeof(__pyx_k__get_area), 0, 0, 1, 1},
  {&__pyx_n_s__get_dashes, __pyx_k__get_dashes, sizeof(__pyx_k__get_dashes), 0, 0, 1, 1},
  {&__pyx_n_s__get_diameter, __pyx_k__get_diameter, sizeof(__pyx_k__get_diameter), 0, 0, 1, 1},
  {&__pyx_n_s__get_edge_node, __pyx_k__get_edge_node, sizeof(__pyx_k__get_edge_node), 0, 0, 1, 1},
  {&__pyx_n_s__get_edges, __pyx_k__get_edges, sizeof(__pyx_k__get_edges), 0, 0, 1, 1},
  {&__pyx_n_s__get_element, __pyx_k__get_element, sizeof(__pyx_k__get_element), 0, 0, 1, 1},
  {&__pyx_n_s__get_element_order, __pyx_k__get_element_order, sizeof(__pyx_k__get_element_order), 0, 0, 1, 1},
  {&__pyx_n_s__get_elements_order, __pyx_k__get_elements_order, sizeof(__pyx_k__get_elements_order), 0, 0, 1, 1},
  {&__pyx_n_s__get_matrix, __pyx_k__get_matrix, sizeof(__pyx_k__get_matrix), 0, 0, 1, 1},
  {&__pyx_n_s__get_matrix_csc, __pyx_k__get_matrix_csc, sizeof(__pyx_k__get_matrix_csc), 0, 0, 1, 1},
  {&__pyx_n_s__get_max_element_id, __pyx_k__get_max_element_id, sizeof(__pyx_k__get_max_element_id), 0, 0, 1, 1},
  {&__pyx_n_s__get_max_value, __pyx_k__get_max_value, sizeof(__pyx_k__get_max_value), 0, 0, 1, 1},
  {&__pyx_n_s__get_mesh, __pyx_k__get_mesh, sizeof(__pyx_k__get_mesh), 0, 0, 1, 1},
  {&__pyx_n_s__get_min_value, __pyx_k__get_min_value, sizeof(__pyx_k__get_min_value), 0, 0, 1, 1},
  {&__pyx_n_s__get_node_id, __pyx_k__get_node_id, sizeof(__pyx_k__get_node_id), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_dashes, __pyx_k__get_num_dashes, sizeof(__pyx_k__get_num_dashes), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_dofs, __pyx_k__get_num_dofs, sizeof(__pyx_k__get_num_dofs), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_edges, __pyx_k__get_num_edges, sizeof(__pyx_k__get_num_edges), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_elements, __pyx_k__get_num_elements, sizeof(__pyx_k__get_num_elements), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_triangles, __pyx_k__get_num_triangles, sizeof(__pyx_k__get_num_triangles), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_vertices, __pyx_k__get_num_vertices, sizeof(__pyx_k__get_num_vertices), 0, 0, 1, 1},
  {&__pyx_n_s__get_nurbs, __pyx_k__get_nurbs, sizeof(__pyx_k__get_nurbs), 0, 0, 1, 1},
  {&__pyx_n_s__get_pss, __pyx_k__get_pss, sizeof(__pyx_k__get_pss), 0, 0, 1, 1},
  {&__pyx_n_s__get_pt_value, __pyx_k__get_pt_value, sizeof(__pyx_k__get_pt_value), 0, 0, 1, 1},
  {&__pyx_n_s__get_rhs, __pyx_k__get_rhs, sizeof(__pyx_k__get_rhs), 0, 0, 1, 1},
  {&__pyx_n_s__get_space, __pyx_k__get_space, sizeof(__pyx_k__get_space), 0, 0, 1, 1},
  {&__pyx_n_s__get_triangles, __pyx_k__get_triangles, sizeof(__pyx_k__get_triangles), 0, 0, 1, 1},
  {&__pyx_n_s__get_vertex_node, __pyx_k__get_vertex_node, sizeof(__pyx_k__get_vertex_node), 0, 0, 1, 1},
  {&__pyx_n_s__get_vertices, __pyx_k__get_vertices, sizeof(__pyx_k__get_vertices), 0, 0, 1, 1},
  {&__pyx_n_s__h, __pyx_k__h, sizeof(__pyx_k__h), 0, 0, 1, 1},
  {&__pyx_n_s__h_only, __pyx_k__h_only, sizeof(__pyx_k__h_only), 0, 0, 1, 1},
  {&__pyx_n_s__height, __pyx_k__height, sizeof(__pyx_k__height), 0, 0, 1, 1},
  {&__pyx_n_s__hermes, __pyx_k__hermes, sizeof(__pyx_k__hermes), 0, 0, 1, 1},
  {&__pyx_n_s__hermes2d, __pyx_k__hermes2d, sizeof(__pyx_k__hermes2d), 0, 0, 1, 1},
  {&__pyx_n_s__id, __pyx_k__id, sizeof(__pyx_k__id), 0, 0, 1, 1},
  {&__pyx_n_s__inc, __pyx_k__inc, sizeof(__pyx_k__inc), 0, 0, 1, 1},
  {&__pyx_n_s__item, __pyx_k__item, sizeof(__pyx_k__item), 0, 0, 1, 1},
  {&__pyx_n_s__item1, __pyx_k__item1, sizeof(__pyx_k__item1), 0, 0, 1, 1},
  {&__pyx_n_s__item2, __pyx_k__item2, sizeof(__pyx_k__item2), 0, 0, 1, 1},
  {&__pyx_n_s__key, __pyx_k__key, sizeof(__pyx_k__key), 0, 0, 1, 1},
  {&__pyx_n_s__kv, __pyx_k__kv, sizeof(__pyx_k__kv), 0, 0, 1, 1},
  {&__pyx_n_s__l, __pyx_k__l, sizeof(__pyx_k__l), 0, 0, 1, 1},
  {&__pyx_n_s__lib, __pyx_k__lib, sizeof(__pyx_k__lib), 0, 0, 1, 1},
  {&__pyx_n_s__load, __pyx_k__load, sizeof(__pyx_k__load), 0, 0, 1, 1},
  {&__pyx_n_s__load_data, __pyx_k__load_data, sizeof(__pyx_k__load_data), 0, 0, 1, 1},
  {&__pyx_n_s__load_hermes, __pyx_k__load_hermes, sizeof(__pyx_k__load_hermes), 0, 0, 1, 1},
  {&__pyx_n_s__load_str, __pyx_k__load_str, sizeof(__pyx_k__load_str), 0, 0, 1, 1},
  {&__pyx_n_s__ls, __pyx_k__ls, sizeof(__pyx_k__ls), 0, 0, 1, 1},
  {&__pyx_n_s__m, __pyx_k__m, sizeof(__pyx_k__m), 0, 0, 1, 1},
  {&__pyx_n_s__marker, __pyx_k__marker, sizeof(__pyx_k__marker), 0, 0, 1, 1},
  {&__pyx_n_s__math, __pyx_k__math, sizeof(__pyx_k__math), 0, 0, 1, 1},
  {&__pyx_n_s__max, __pyx_k__max, sizeof(__pyx_k__max), 0, 0, 1, 1},
  {&__pyx_n_s__max_element_id, __pyx_k__max_element_id, sizeof(__pyx_k__max_element_id), 0, 0, 1, 1},
  {&__pyx_n_s__mesh, __pyx_k__mesh, sizeof(__pyx_k__mesh), 0, 0, 1, 1},
  {&__pyx_n_s__min, __pyx_k__min, sizeof(__pyx_k__min), 0, 0, 1, 1},
  {&__pyx_n_s__neq, __pyx_k__neq, sizeof(__pyx_k__neq), 0, 0, 1, 1},
  {&__pyx_n_s__nk, __pyx_k__nk, sizeof(__pyx_k__nk), 0, 0, 1, 1},
  {&__pyx_n_s__nodes, __pyx_k__nodes, sizeof(__pyx_k__nodes), 0, 0, 1, 1},
  {&__pyx_n_s__nodes_dict, __pyx_k__nodes_dict, sizeof(__pyx_k__nodes_dict), 0, 0, 1, 1},
  {&__pyx_n_s__nodes_edge, __pyx_k__nodes_edge, sizeof(__pyx_k__nodes_edge), 0, 0, 1, 1},
  {&__pyx_n_s__nodes_vertex, __pyx_k__nodes_vertex, sizeof(__pyx_k__nodes_vertex), 0, 0, 1, 1},
  {&__pyx_n_s__nodes_vertex_id, __pyx_k__nodes_vertex_id, sizeof(__pyx_k__nodes_vertex_id), 0, 0, 1, 1},
  {&__pyx_n_s__np, __pyx_k__np, sizeof(__pyx_k__np), 0, 0, 1, 1},
  {&__pyx_n_s__num_active_elements, __pyx_k__num_active_elements, sizeof(__pyx_k__num_active_elements), 0, 0, 1, 1},
  {&__pyx_n_s__num_base_elements, __pyx_k__num_base_elements, sizeof(__pyx_k__num_base_elements), 0, 0, 1, 1},
  {&__pyx_n_s__num_elements, __pyx_k__num_elements, sizeof(__pyx_k__num_elements), 0, 0, 1, 1},
  {&__pyx_n_s__numpy, __pyx_k__numpy, sizeof(__pyx_k__numpy), 0, 0, 1, 1},
  {&__pyx_n_s__nurbs, __pyx_k__nurbs, sizeof(__pyx_k__nurbs), 0, 0, 1, 1},
  {&__pyx_n_s__nvert, __pyx_k__nvert, sizeof(__pyx_k__nvert), 0, 0, 1, 1},
  {&__pyx_n_s__order, __pyx_k__order, sizeof(__pyx_k__order), 0, 0, 1, 1},
  {&__pyx_n_s__plot, __pyx_k__plot, sizeof(__pyx_k__plot), 0, 0, 1, 1},
  {&__pyx_n_s__process_solution, __pyx_k__process_solution, sizeof(__pyx_k__process_solution), 0, 0, 1, 1},
  {&__pyx_n_s__property, __pyx_k__property, sizeof(__pyx_k__property), 0, 0, 1, 1},
  {&__pyx_n_s__pss, __pyx_k__pss, sizeof(__pyx_k__pss), 0, 0, 1, 1},
  {&__pyx_n_s__pt, __pyx_k__pt, sizeof(__pyx_k__pt), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__read_hermes_format, __pyx_k__read_hermes_format, sizeof(__pyx_k__read_hermes_format), 0, 0, 1, 1},
  {&__pyx_n_s__ref, __pyx_k__ref, sizeof(__pyx_k__ref), 0, 0, 1, 1},
  {&__pyx_n_s__refine_all_elements, __pyx_k__refine_all_elements, sizeof(__pyx_k__refine_all_elements), 0, 0, 1, 1},
  {&__pyx_n_s__refine_element, __pyx_k__refine_element, sizeof(__pyx_k__refine_element), 0, 0, 1, 1},
  {&__pyx_n_s__refinement, __pyx_k__refinement, sizeof(__pyx_k__refinement), 0, 0, 1, 1},
  {&__pyx_n_s__reshape, __pyx_k__reshape, sizeof(__pyx_k__reshape), 0, 0, 1, 1},
  {&__pyx_n_s__rsln, __pyx_k__rsln, sizeof(__pyx_k__rsln), 0, 0, 1, 1},
  {&__pyx_n_s__rsln1, __pyx_k__rsln1, sizeof(__pyx_k__rsln1), 0, 0, 1, 1},
  {&__pyx_n_s__rsln2, __pyx_k__rsln2, sizeof(__pyx_k__rsln2), 0, 0, 1, 1},
  {&__pyx_n_s__rsln_list, __pyx_k__rsln_list, sizeof(__pyx_k__rsln_list), 0, 0, 1, 1},
  {&__pyx_n_s__s, __pyx_k__s, sizeof(__pyx_k__s), 0, 0, 1, 1},
  {&__pyx_n_s__s1, __pyx_k__s1, sizeof(__pyx_k__s1), 0, 0, 1, 1},
  {&__pyx_n_s__s2, __pyx_k__s2, sizeof(__pyx_k__s2), 0, 0, 1, 1},
  {&__pyx_n_s__save, __pyx_k__save, sizeof(__pyx_k__save), 0, 0, 1, 1},
  {&__pyx_n_s__save_data, __pyx_k__save_data, sizeof(__pyx_k__save_data), 0, 0, 1, 1},
  {&__pyx_n_s__scalar, __pyx_k__scalar, sizeof(__pyx_k__scalar), 0, 0, 1, 1},
  {&__pyx_n_s__scipy, __pyx_k__scipy, sizeof(__pyx_k__scipy), 0, 0, 1, 1},
  {&__pyx_n_s__set_const, __pyx_k__set_const, sizeof(__pyx_k__set_const), 0, 0, 1, 1},
  {&__pyx_n_s__set_fe_solution, __pyx_k__set_fe_solution, sizeof(__pyx_k__set_fe_solution), 0, 0, 1, 1},
  {&__pyx_n_s__set_min_max_range, __pyx_k__set_min_max_range, sizeof(__pyx_k__set_min_max_range), 0, 0, 1, 1},
  {&__pyx_n_s__set_pss, __pyx_k__set_pss, sizeof(__pyx_k__set_pss), 0, 0, 1, 1},
  {&__pyx_n_s__set_spaces, __pyx_k__set_spaces, sizeof(__pyx_k__set_spaces), 0, 0, 1, 1},
  {&__pyx_n_s__set_title, __pyx_k__set_title, sizeof(__pyx_k__set_title), 0, 0, 1, 1},
  {&__pyx_n_s__set_uniform_order, __pyx_k__set_uniform_order, sizeof(__pyx_k__set_uniform_order), 0, 0, 1, 1},
  {&__pyx_n_s__set_verbose, __pyx_k__set_verbose, sizeof(__pyx_k__set_verbose), 0, 0, 1, 1},
  {&__pyx_n_s__set_zero, __pyx_k__set_zero, sizeof(__pyx_k__set_zero), 0, 0, 1, 1},
  {&__pyx_n_s__show, __pyx_k__show, sizeof(__pyx_k__show), 0, 0, 1, 1},
  {&__pyx_n_s__show_mesh, __pyx_k__show_mesh, sizeof(__pyx_k__show_mesh), 0, 0, 1, 1},
  {&__pyx_n_s__show_scale, __pyx_k__show_scale, sizeof(__pyx_k__show_scale), 0, 0, 1, 1},
  {&__pyx_n_s__sln, __pyx_k__sln, sizeof(__pyx_k__sln), 0, 0, 1, 1},
  {&__pyx_n_s__sln1, __pyx_k__sln1, sizeof(__pyx_k__sln1), 0, 0, 1, 1},
  {&__pyx_n_s__sln2, __pyx_k__sln2, sizeof(__pyx_k__sln2), 0, 0, 1, 1},
  {&__pyx_n_s__sln_list, __pyx_k__sln_list, sizeof(__pyx_k__sln_list), 0, 0, 1, 1},
  {&__pyx_n_s__solve, __pyx_k__solve, sizeof(__pyx_k__solve), 0, 0, 1, 1},
  {&__pyx_n_s__solve_system, __pyx_k__solve_system, sizeof(__pyx_k__solve_system), 0, 0, 1, 1},
  {&__pyx_n_s__solver, __pyx_k__solver, sizeof(__pyx_k__solver), 0, 0, 1, 1},
  {&__pyx_n_s__sons, __pyx_k__sons, sizeof(__pyx_k__sons), 0, 0, 1, 1},
  {&__pyx_n_s__sort, __pyx_k__sort, sizeof(__pyx_k__sort), 0, 0, 1, 1},
  {&__pyx_n_s__spsolve, __pyx_k__spsolve, sizeof(__pyx_k__spsolve), 0, 0, 1, 1},
  {&__pyx_n_s__strat, __pyx_k__strat, sizeof(__pyx_k__strat), 0, 0, 1, 1},
  {&__pyx_n_s__stride, __pyx_k__stride, sizeof(__pyx_k__stride), 0, 0, 1, 1},
  {&__pyx_n_s__thisptr, __pyx_k__thisptr, sizeof(__pyx_k__thisptr), 0, 0, 1, 1},
  {&__pyx_n_s__thr, __pyx_k__thr, sizeof(__pyx_k__thr), 0, 0, 1, 1},
  {&__pyx_n_s__title, __pyx_k__title, sizeof(__pyx_k__title), 0, 0, 1, 1},
  {&__pyx_n_s__toplevel, __pyx_k__toplevel, sizeof(__pyx_k__toplevel), 0, 0, 1, 1},
  {&__pyx_n_s__type, __pyx_k__type, sizeof(__pyx_k__type), 0, 0, 1, 1},
  {&__pyx_n_s__used, __pyx_k__used, sizeof(__pyx_k__used), 0, 0, 1, 1},
  {&__pyx_n_s__v, __pyx_k__v, sizeof(__pyx_k__v), 0, 0, 1, 1},
  {&__pyx_n_s__values, __pyx_k__values, sizeof(__pyx_k__values), 0, 0, 1, 1},
  {&__pyx_n_s__vn, __pyx_k__vn, sizeof(__pyx_k__vn), 0, 0, 1, 1},
  {&__pyx_n_s__wait, __pyx_k__wait, sizeof(__pyx_k__wait), 0, 0, 1, 1},
  {&__pyx_n_s__wf, __pyx_k__wf, sizeof(__pyx_k__wf), 0, 0, 1, 1},
  {&__pyx_n_s__width, __pyx_k__width, sizeof(__pyx_k__width), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__xitem, __pyx_k__xitem, sizeof(__pyx_k__xitem), 0, 0, 1, 1},
  {&__pyx_n_s__xsln, __pyx_k__xsln, sizeof(__pyx_k__xsln), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__yitem, __pyx_k__yitem, sizeof(__pyx_k__yitem), 0, 0, 1, 1},
  {&__pyx_n_s__ysln, __pyx_k__ysln, sizeof(__pyx_k__ysln), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_property = __Pyx_GetName(__pyx_b, __pyx_n_s__property); if (!__pyx_builtin_property) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_max = __Pyx_GetName(__pyx_b, __pyx_n_s__max); if (!__pyx_builtin_max) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplemented = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplemented); if (!__pyx_builtin_NotImplemented) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_enumerate = __Pyx_GetName(__pyx_b, __pyx_n_s__enumerate); if (!__pyx_builtin_enumerate) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_31 = PyInt_FromLong(31); if (unlikely(!__pyx_int_31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_hermes2d(void); /*proto*/
PyMODINIT_FUNC init_hermes2d(void)
#else
PyMODINIT_FUNC PyInit__hermes2d(void); /*proto*/
PyMODINIT_FUNC PyInit__hermes2d(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit__hermes2d(void)", __LINE__, __FILE__);
  #endif
  __pyx_init_filenames();
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("_hermes2d"), __pyx_methods, 0, 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_hermes2d___hermes2d) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("H1Space_from_C", (void (*)(void))H1Space_from_C, "PyObject *(struct H1Space *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("Mesh_from_C", (void (*)(void))Mesh_from_C, "PyObject *(struct Mesh *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ExportFunction("Solution_from_C", (void (*)(void))Solution_from_C, "PyObject *(struct Solution *)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Type init code ---*/
  __pyx_ptype_8hermes2d_9_hermes2d_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_8hermes2d_9_hermes2d_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_LinSystem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LinSystem", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_LinSystem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_LinSystem = &__pyx_type_8hermes2d_9_hermes2d_LinSystem;
  __pyx_type_8hermes2d_9_hermes2d_RefSystem.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_LinSystem;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_RefSystem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "RefSystem", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_RefSystem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_RefSystem = &__pyx_type_8hermes2d_9_hermes2d_RefSystem;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Solver) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Solver", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Solver) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Solver = &__pyx_type_8hermes2d_9_hermes2d_Solver;
  __pyx_type_8hermes2d_9_hermes2d_DummySolver.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Solver;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_DummySolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "DummySolver", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_DummySolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_DummySolver = &__pyx_type_8hermes2d_9_hermes2d_DummySolver;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_WeakForm) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "WeakForm", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_WeakForm) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_WeakForm = &__pyx_type_8hermes2d_9_hermes2d_WeakForm;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_H1OrthoHP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "H1OrthoHP", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_H1OrthoHP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_H1OrthoHP = &__pyx_type_8hermes2d_9_hermes2d_H1OrthoHP;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_H1Space) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "H1Space", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_H1Space) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_H1Space = &__pyx_type_8hermes2d_9_hermes2d_H1Space;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Transformable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Transformable", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Transformable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Transformable = &__pyx_type_8hermes2d_9_hermes2d_Transformable;
  __pyx_type_8hermes2d_9_hermes2d_Function.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Transformable;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Function) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Function", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Function) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Function = &__pyx_type_8hermes2d_9_hermes2d_Function;
  __pyx_type_8hermes2d_9_hermes2d_ScalarFunction.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Function;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_ScalarFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ScalarFunction", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_ScalarFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_ScalarFunction = &__pyx_type_8hermes2d_9_hermes2d_ScalarFunction;
  __pyx_type_8hermes2d_9_hermes2d_MeshFunction.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_ScalarFunction;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_MeshFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MeshFunction", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_MeshFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction = &__pyx_type_8hermes2d_9_hermes2d_MeshFunction;
  __pyx_type_8hermes2d_9_hermes2d_Solution.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Solution) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Solution", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Solution) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Solution = &__pyx_type_8hermes2d_9_hermes2d_Solution;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Linearizer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Linearizer", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Linearizer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Linearizer = &__pyx_type_8hermes2d_9_hermes2d_Linearizer;
  __pyx_type_8hermes2d_9_hermes2d_Vectorizer.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Linearizer;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Vectorizer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Vectorizer", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Vectorizer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Vectorizer = &__pyx_type_8hermes2d_9_hermes2d_Vectorizer;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Nurbs) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Nurbs", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Nurbs) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Nurbs = &__pyx_type_8hermes2d_9_hermes2d_Nurbs;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_CurvMap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CurvMap", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_CurvMap) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_CurvMap = &__pyx_type_8hermes2d_9_hermes2d_CurvMap;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Node) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Node", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Node) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Node = &__pyx_type_8hermes2d_9_hermes2d_Node;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Element) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Element", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Element) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Element = &__pyx_type_8hermes2d_9_hermes2d_Element;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Mesh) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Mesh", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Mesh) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Mesh = &__pyx_type_8hermes2d_9_hermes2d_Mesh;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_H1Shapeset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "H1Shapeset", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_H1Shapeset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_H1Shapeset = &__pyx_type_8hermes2d_9_hermes2d_H1Shapeset;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_PrecalcShapeset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PrecalcShapeset", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_PrecalcShapeset) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_PrecalcShapeset = &__pyx_type_8hermes2d_9_hermes2d_PrecalcShapeset;
  __pyx_type_8hermes2d_9_hermes2d_Filter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_MeshFunction;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_Filter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Filter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_Filter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_Filter = &__pyx_type_8hermes2d_9_hermes2d_Filter;
  __pyx_type_8hermes2d_9_hermes2d_SimpleFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Filter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_SimpleFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SimpleFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_SimpleFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter = &__pyx_type_8hermes2d_9_hermes2d_SimpleFilter;
  __pyx_type_8hermes2d_9_hermes2d_VonMisesFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_Filter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_VonMisesFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "VonMisesFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_VonMisesFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_VonMisesFilter = &__pyx_type_8hermes2d_9_hermes2d_VonMisesFilter;
  __pyx_type_8hermes2d_9_hermes2d_MagFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_MagFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MagFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_MagFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_MagFilter = &__pyx_type_8hermes2d_9_hermes2d_MagFilter;
  __pyx_type_8hermes2d_9_hermes2d_DiffFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_DiffFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "DiffFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_DiffFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_DiffFilter = &__pyx_type_8hermes2d_9_hermes2d_DiffFilter;
  __pyx_type_8hermes2d_9_hermes2d_SumFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_SumFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SumFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_SumFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_SumFilter = &__pyx_type_8hermes2d_9_hermes2d_SumFilter;
  __pyx_type_8hermes2d_9_hermes2d_SquareFilter.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_SimpleFilter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_SquareFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SquareFilter", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_SquareFilter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_SquareFilter = &__pyx_type_8hermes2d_9_hermes2d_SquareFilter;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_L2OrthoHP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "L2OrthoHP", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_L2OrthoHP) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_L2OrthoHP = &__pyx_type_8hermes2d_9_hermes2d_L2OrthoHP;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_View) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "View", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_View) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_View = &__pyx_type_8hermes2d_9_hermes2d_View;
  __pyx_type_8hermes2d_9_hermes2d_ScalarView.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_View;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_ScalarView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ScalarView", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_ScalarView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_ScalarView = &__pyx_type_8hermes2d_9_hermes2d_ScalarView;
  __pyx_type_8hermes2d_9_hermes2d_BaseView.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_View;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_BaseView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BaseView", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_BaseView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_BaseView = &__pyx_type_8hermes2d_9_hermes2d_BaseView;
  __pyx_type_8hermes2d_9_hermes2d_MeshView.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_View;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_MeshView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MeshView", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_MeshView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_MeshView = &__pyx_type_8hermes2d_9_hermes2d_MeshView;
  __pyx_type_8hermes2d_9_hermes2d_OrderView.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_View;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_OrderView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "OrderView", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_OrderView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_OrderView = &__pyx_type_8hermes2d_9_hermes2d_OrderView;
  __pyx_type_8hermes2d_9_hermes2d_VectorView.tp_base = __pyx_ptype_8hermes2d_9_hermes2d_View;
  if (PyType_Ready(&__pyx_type_8hermes2d_9_hermes2d_VectorView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "VectorView", (PyObject *)&__pyx_type_8hermes2d_9_hermes2d_VectorView) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8hermes2d_9_hermes2d_VectorView = &__pyx_type_8hermes2d_9_hermes2d_VectorView;
  /*--- Type import code ---*/
  __pyx_ptype_14_hermes_common_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_14_hermes_common_ndarray)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  __pyx_t_1 = __Pyx_ImportModule("_hermes_common"); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_1, "c2numpy_int", (void (**)(void))&c2numpy_int, "PyObject *(int *, int)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_1, "c2numpy_double", (void (**)(void))&c2numpy_double, "PyObject *(double *, int)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  /*--- Execution code ---*/

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":3
 * from _hermes_common cimport c2numpy_double, c2numpy_int
 * 
 * H2D_FN_DX = c_H2D_FN_DX             # <<<<<<<<<<<<<<
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_VAL = c_H2D_FN_VAL
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DX); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DX, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":4
 * 
 * H2D_FN_DX = c_H2D_FN_DX
 * H2D_FN_DY = c_H2D_FN_DY             # <<<<<<<<<<<<<<
 * H2D_FN_VAL = c_H2D_FN_VAL
 * H2D_FN_DX = c_H2D_FN_DX
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DY); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":5
 * H2D_FN_DX = c_H2D_FN_DX
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_VAL = c_H2D_FN_VAL             # <<<<<<<<<<<<<<
 * H2D_FN_DX = c_H2D_FN_DX
 * H2D_FN_DY = c_H2D_FN_DY
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_VAL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":6
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_VAL = c_H2D_FN_VAL
 * H2D_FN_DX = c_H2D_FN_DX             # <<<<<<<<<<<<<<
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_DXX = c_H2D_FN_DXX
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DX); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DX, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":7
 * H2D_FN_VAL = c_H2D_FN_VAL
 * H2D_FN_DX = c_H2D_FN_DX
 * H2D_FN_DY = c_H2D_FN_DY             # <<<<<<<<<<<<<<
 * H2D_FN_DXX = c_H2D_FN_DXX
 * H2D_FN_DYY = c_H2D_FN_DYY
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DY); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":8
 * H2D_FN_DX = c_H2D_FN_DX
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_DXX = c_H2D_FN_DXX             # <<<<<<<<<<<<<<
 * H2D_FN_DYY = c_H2D_FN_DYY
 * H2D_FN_DXY = c_H2D_FN_DXY
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DXX); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DXX, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":9
 * H2D_FN_DY = c_H2D_FN_DY
 * H2D_FN_DXX = c_H2D_FN_DXX
 * H2D_FN_DYY = c_H2D_FN_DYY             # <<<<<<<<<<<<<<
 * H2D_FN_DXY = c_H2D_FN_DXY
 * H2D_FN_DEFAULT = c_H2D_FN_DEFAULT
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DYY); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DYY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":10
 * H2D_FN_DXX = c_H2D_FN_DXX
 * H2D_FN_DYY = c_H2D_FN_DYY
 * H2D_FN_DXY = c_H2D_FN_DXY             # <<<<<<<<<<<<<<
 * H2D_FN_DEFAULT = c_H2D_FN_DEFAULT
 * H2D_FN_ALL = c_H2D_FN_ALL
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DXY); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DXY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":11
 * H2D_FN_DYY = c_H2D_FN_DYY
 * H2D_FN_DXY = c_H2D_FN_DXY
 * H2D_FN_DEFAULT = c_H2D_FN_DEFAULT             # <<<<<<<<<<<<<<
 * H2D_FN_ALL = c_H2D_FN_ALL
 * H2D_EPS_NORMAL = c_H2D_EPS_NORMAL
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_DEFAULT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_DEFAULT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":12
 * H2D_FN_DXY = c_H2D_FN_DXY
 * H2D_FN_DEFAULT = c_H2D_FN_DEFAULT
 * H2D_FN_ALL = c_H2D_FN_ALL             # <<<<<<<<<<<<<<
 * H2D_EPS_NORMAL = c_H2D_EPS_NORMAL
 * H2D_EPS_HIGH = c_H2D_EPS_HIGH
 */
  __pyx_t_2 = PyInt_FromLong(H2D_FN_ALL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_FN_ALL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":13
 * H2D_FN_DEFAULT = c_H2D_FN_DEFAULT
 * H2D_FN_ALL = c_H2D_FN_ALL
 * H2D_EPS_NORMAL = c_H2D_EPS_NORMAL             # <<<<<<<<<<<<<<
 * H2D_EPS_HIGH = c_H2D_EPS_HIGH
 * 
 */
  __pyx_t_2 = PyInt_FromLong(H2D_EPS_NORMAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_EPS_NORMAL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":14
 * H2D_FN_ALL = c_H2D_FN_ALL
 * H2D_EPS_NORMAL = c_H2D_EPS_NORMAL
 * H2D_EPS_HIGH = c_H2D_EPS_HIGH             # <<<<<<<<<<<<<<
 * 
 * cdef class Nurbs:
 */
  __pyx_t_2 = PyInt_FromLong(H2D_EPS_HIGH); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__H2D_EPS_HIGH, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":20
 * 
 *     @property
 *     def degree(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.degree
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__degree); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__degree, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":24
 * 
 *     @property
 *     def np(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.np
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__np, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":28
 * 
 *     @property
 *     def pt(self):             # <<<<<<<<<<<<<<
 *         cdef double3 *pt = self.thisptr.pt
 *         cdef int np = self.thisptr.np
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__pt); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__pt, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":35
 * 
 *     @property
 *     def nk(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nk
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__nk); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__nk, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":39
 * 
 *     @property
 *     def kv(self):             # <<<<<<<<<<<<<<
 *         cdef double *kv = self.thisptr.kv
 *         cdef int nk = self.thisptr.nk
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__kv); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__kv, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":47
 * 
 *     @property
 *     def ref(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nk
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs, __pyx_n_s__ref); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Nurbs->tp_dict, __pyx_n_s__ref, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Nurbs);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":54
 * 
 *     @property
 *     def order(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.order
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_CurvMap, __pyx_n_s__order); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_CurvMap->tp_dict, __pyx_n_s__order, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_CurvMap);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":58
 * 
 *     @property
 *     def toplevel(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.toplevel
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_CurvMap, __pyx_n_s__toplevel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_CurvMap->tp_dict, __pyx_n_s__toplevel, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_CurvMap);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":75
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.id
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__id, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":79
 * 
 *     @property
 *     def ref(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.ref
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__ref); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__ref, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":83
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.type
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":87
 * 
 *     @property
 *     def bnd(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.bnd
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__bnd); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__bnd, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":91
 * 
 *     @property
 *     def used(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.used == 1
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__used); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__used, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":98
 * 
 *     @property
 *     def coord(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.x, self.thisptr.y
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node, __pyx_n_s__coord); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Node->tp_dict, __pyx_n_s__coord, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Node);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":105
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.id
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__id, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":109
 * 
 *     @property
 *     def nvert(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.nvert
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__nvert); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__nvert, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":113
 * 
 *     @property
 *     def active(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.active == 1
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__active); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__active, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":117
 * 
 *     @property
 *     def used(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.used == 1
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__used); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__used, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":121
 * 
 *     @property
 *     def marker(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.marker
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__marker); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__marker, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":125
 * 
 *     @property
 *     def nodes_vertex(self):             # <<<<<<<<<<<<<<
 *         return [self.get_vertex_node(i) for i in range(self.nvert)]
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__nodes_vertex); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__nodes_vertex, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":129
 * 
 *     @property
 *     def nodes_vertex_id(self):             # <<<<<<<<<<<<<<
 *         return [node.id for node in self.nodes_vertex]
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__nodes_vertex_id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__nodes_vertex_id, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":133
 * 
 *     @property
 *     def nodes_edge(self):             # <<<<<<<<<<<<<<
 *         return [self.get_edge_node(i) for i in range(self.nvert)]
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__nodes_edge); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__nodes_edge, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":142
 * 
 *     @property
 *     def curved_map(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.cm == NULL:
 *             return None
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element, __pyx_n_s__curved_map); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Element->tp_dict, __pyx_n_s__curved_map, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Element);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":198
 * 
 *     @property
 *     def elements_markers(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the list of elements (as ids), together with their markers.
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__elements_markers); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__elements_markers, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":212
 * 
 *     @property
 *     def elements(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the list of elements (as ids).
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__elements, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":224
 * 
 *     @property
 *     def nodes(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a list of nodes coordinates.
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__nodes); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__nodes, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":248
 * 
 *     @property
 *     def nodes_dict(self):             # <<<<<<<<<<<<<<
 *         """
 *         Returns a dict of all active nodes coordinates.
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__nodes_dict); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__nodes_dict, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":263
 * 
 *     @property
 *     def curves(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return curves
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__curves); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__curves, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":317
 * 
 *     @property
 *     def num_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_elements()
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__num_elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__num_elements, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":321
 * 
 *     @property
 *     def num_base_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_base_elements()
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__num_base_elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__num_base_elements, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":325
 * 
 *     @property
 *     def num_active_elements(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_num_active_elements()
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__num_active_elements); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__num_active_elements, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":329
 * 
 *     @property
 *     def max_element_id(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_max_element_id()
 * 
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh, __pyx_n_s__max_element_id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_8hermes2d_9_hermes2d_Mesh->tp_dict, __pyx_n_s__max_element_id, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_8hermes2d_9_hermes2d_Mesh);

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":652
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_DiffFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)
 * 
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k_18 = __pyx_t_4;
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k_19 = __pyx_t_4;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":661
 * 
 *     def __cinit__(self, MeshFunction sln1, MeshFunction sln2,
 *             int item1=H2D_FN_VAL, int item2=H2D_FN_VAL):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_SumFilter(<c_MeshFunction *>sln1.thisptr, <c_MeshFunction *>sln2.thisptr, item1, item2)
 * 
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k_20 = __pyx_t_4;
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k_21 = __pyx_t_4;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":669
 * cdef class SquareFilter(SimpleFilter):
 * 
 *     def __cinit__(self, MeshFunction sln, int item=H2D_FN_VAL):             # <<<<<<<<<<<<<<
 *         self.thisptr = <c_Function *>new_SquareFilter(<c_MeshFunction *>sln.thisptr, item)
 * 
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__H2D_FN_VAL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k_22 = __pyx_t_4;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":973
 *         return self.thisptr.calc_error(sln.thisptr, rsln.thisptr)
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.adapt(thr, strat, h_only)
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_26 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1019
 *                 )
 * 
 *     def adapt(self, double thr, int strat=0, h_only=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.adapt(thr, strat, h_only)
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_27 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1174
 * 
 *     def process_solution(self, MeshFunction xsln, MeshFunction ysln,
 *             int xitem=c_H2D_FN_VAL_0, int yitem=c_H2D_FN_VAL_0, double eps=c_H2D_EPS_LOW):             # <<<<<<<<<<<<<<
 *         (<c_Vectorizer *>(self.thisptr)).process_solution(
 *                 <c_MeshFunction *>xsln.thisptr, xitem,
 */
  __pyx_k_28 = H2D_FN_VAL_0;
  __pyx_k_29 = H2D_FN_VAL_0;
  __pyx_k_30 = H2D_EPS_LOW;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1215
 *             self.thisptr.show(<c_MeshFunction *>s.thisptr, <double>eps)
 * 
 *     def show_mesh(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_mesh(show)
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_31 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1218
 *         self.thisptr.show_mesh(show)
 * 
 *     def show_scale(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_scale(show)
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_32 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1280
 *     #    delete(self.thisptr)
 * 
 *     def show(self, MeshFunction s1, MeshFunction s2, eps = 0.008):             # <<<<<<<<<<<<<<
 *         (<c_VectorView *>(self.thisptr)).show(<c_MeshFunction *>s1.thisptr, <c_MeshFunction *>s2.thisptr, eps)
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(0.008); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_33 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1283
 *         (<c_VectorView *>(self.thisptr)).show(<c_MeshFunction *>s1.thisptr, <c_MeshFunction *>s2.thisptr, eps)
 * 
 *     def show_scale(self, show=True):             # <<<<<<<<<<<<<<
 *         self.thisptr.show_scale(show)
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_34 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1345
 * #    finish_glut_main_loop(False)
 * 
 * init_hermes2d_wrappers()             # <<<<<<<<<<<<<<
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s_35); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/home/ondrej/repos/hermes2d/python/hermes2d/_hermes2d.pyx":1
 * from _hermes_common cimport c2numpy_double, c2numpy_int             # <<<<<<<<<<<<<<
 * 
 * H2D_FN_DX = c_H2D_FN_DX
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__elements_markers); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_36), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__elements); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_37), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__nodes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_38), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__nodes_dict); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_39), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__curves); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_40), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s_42); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_41), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__load_hermes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_43), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_elements_order); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_44), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__create); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_45), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Mesh); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__plot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_46), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Solution); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__set_fe_solution); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_47), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Solution); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__plot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_48), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__LinSystem); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__solve_system); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_49), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__LinSystem); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_matrix_csc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_50), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__LinSystem); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_matrix); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_51), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__LinSystem); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_rhs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_52), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Linearizer); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_vertices); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_53), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Linearizer); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_triangles); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_54), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__Linearizer); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__get_edges); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_55), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_m, __pyx_n_s__set_verbose); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_GetAttrString(__pyx_t_2, "__doc__"); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_56), __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_GetAttr(__pyx_m, __pyx_n_s_58); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_GetAttrString(__pyx_t_5, "__doc__"); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_kp_u_57), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    __Pyx_AddTraceback("init hermes2d._hermes2d");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init hermes2d._hermes2d");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

static const char *__pyx_filenames[] = {
  "_hermes2d.pyx",
  "_hermes2d.pxd",
  "_hermes_common.pxd",
};

/* Runtime support code */

static void __pyx_init_filenames(void) {
  __pyx_f = __pyx_filenames;
}

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}


static CYTHON_INLINE void __Pyx_RaiseNoneIndexingError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is unsubscriptable");
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
                 "need more than %d value%s to unpack", (int)index,
        #else
                 "need more than %zd value%s to unpack", index,
        #endif
                 (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(void) {
    PyErr_SetString(PyExc_ValueError, "too many values to unpack");
}

static PyObject *__Pyx_UnpackItem(PyObject *iter, Py_ssize_t index) {
    PyObject *item;
    if (!(item = PyIter_Next(iter))) {
        if (!PyErr_Occurred()) {
            __Pyx_RaiseNeedMoreValuesError(index);
        }
    }
    return item;
}

static int __Pyx_EndUnpack(PyObject *iter) {
    PyObject *item;
    if ((item = PyIter_Next(iter))) {
        Py_DECREF(item);
        __Pyx_RaiseTooManyValuesError();
        return -1;
    }
    else if (!PyErr_Occurred())
        return 0;
    else
        return -1;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError();
    }
}

#if PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}

static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    PyObject* v;
    int i;

    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                return -1;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            return -1;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0 &&
                isspace(Py_CHARMASK(s[len-1])) &&
                s[len-1] != ' ')
                    PyFile_SoftSpace(f, 0);
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            return -1;
        PyFile_SoftSpace(f, 0);
    }
    return 0;
}

#else /* Python 3 has a print function */

static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = __Pyx_GetAttrString(__pyx_b, "print");
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItemString(kwargs, "file", stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItemString(kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItemString(__pyx_print_kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}

#endif

#if PY_MAJOR_VERSION < 3

static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            return -1;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        return -1;
    if (PyFile_WriteString("\n", f) < 0)
        return -1;
    return 0;
    /* the line below is just to avoid compiler
     * compiler warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}

#else /* Python 3 has a print function */

static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_New(1);
    if (unlikely(!arg_tuple))
        return -1;
    Py_INCREF(o);
    PyTuple_SET_ITEM(arg_tuple, 0, o);
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}

#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
/*
    static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
#if HAVE_HYPOT
        return hypot(z.real, z.imag);
#else
        return sqrt(z.real*z.real + z.imag*z.imag);
#endif
    }
*/
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;

    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX < 0x03010000
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#else
    cobj = PyCapsule_New(tmp.p, sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError, 
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && ((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning), 
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        PyErr_Warn(NULL, warning);
        #else
        PyErr_WarnEx(NULL, warning, 0);
        #endif
    }
    else if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError, 
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
#if PY_VERSION_HEX < 0x03010000
    const char *desc, *s1, *s2;
#endif

    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%s does not export expected C function %s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX < 0x03010000
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %s.%s has wrong signature (expected %s, got %s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);
#else
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %s.%s has wrong signature (expected %s, got %s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
